//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import "IGPlaybackTimelineDelegate-Protocol.h"
#import "IGTouchDetectorDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"

@class CADisplayLink, IGDirectionalPanGestureRecognizer, IGGestureCoordinatingScrollView, IGPlaybackTimeline, IGSundialTimelineRangeViewV3, IGTapButton, IGTouchDetector, IGUserSession, NSArray, NSString, UIImpactFeedbackGenerator, UILongPressGestureRecognizer, UIPanGestureRecognizer, UIPinchGestureRecognizer, UISwipeGestureRecognizer, UITapGestureRecognizer;
@protocol IGSundialTimelineV3Delegate;

@interface IGSundialVideoTimelineV3 : UIView <UIGestureRecognizerDelegate, UIScrollViewDelegate, IGTouchDetectorDelegate, IGPlaybackTimelineDelegate>
{
    IGUserSession *_userSession;
    IGGestureCoordinatingScrollView *_scrollView;
    NSArray *_timelineSegments;
    IGSundialTimelineRangeViewV3 *_rangeView;
    UIView *_playheadView;
    IGDirectionalPanGestureRecognizer *_trimmerPanGesture;
    IGTouchDetector *_rangeHandleTouchDetector;
    long long _activeDragHandle;
    IGPlaybackTimeline *_playbackTimeline;
    UIImpactFeedbackGenerator *_impactGenerator;
    CADisplayLink *_displayLink;
    double _autoScrollOffset;
    UIView *_maskRectangleLeft;
    UIView *_maskRectangleRight;
    UISwipeGestureRecognizer *_swipeGestureRecognizerRight;
    UISwipeGestureRecognizer *_swipeGestureRecognizerLeft;
    UITapGestureRecognizer *_tapGesture;
    UILongPressGestureRecognizer *_longpressGesture;
    double _currentTimeWanted;
    _Bool _endTrimSeekPending;
    long long _layoutAnimationStarted;
    double _beforeExpandCotentOffsetX;
    _Bool _useSavedContentOffsetX;
    IGTapButton *_allClipsButton;
    _Bool _userScrolled;
    UIImpactFeedbackGenerator *_feedbackGenerator;
    IGGestureCoordinatingScrollView *_takesScrollView;
    NSArray *_takesButtons;
    long long _curRetakeIndex;
    _Bool _retakeSetContentOffset;
    NSArray *_transitionButtons;
    NSArray *_transitionNames;
    _Bool _transitionMode;
    long long _transitionInsertIndex;
    IGTapButton *_addClipButton;
    _Bool _alwaysHideAllClipsButton;
    _Bool _isInteractingWithTimeline;
    _Bool _isScrolling;
    _Bool _isPinching;
    _Bool _isAutoScrolling;
    _Bool _rangeViewVisible;
    id <IGSundialTimelineV3Delegate> _delegate;
    UIPinchGestureRecognizer *_pinchGesture;
    double _currentPlaybackTime;
    long long _selectedIndex;
    double _zoomScale;
    double _maxOverallDuration;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool rangeViewVisible; // @synthesize rangeViewVisible=_rangeViewVisible;
@property(nonatomic) long long activeDragHandle; // @synthesize activeDragHandle=_activeDragHandle;
@property(nonatomic) _Bool isAutoScrolling; // @synthesize isAutoScrolling=_isAutoScrolling;
@property(nonatomic) _Bool isPinching; // @synthesize isPinching=_isPinching;
@property(nonatomic) _Bool isScrolling; // @synthesize isScrolling=_isScrolling;
@property(nonatomic) _Bool isInteractingWithTimeline; // @synthesize isInteractingWithTimeline=_isInteractingWithTimeline;
@property(nonatomic) _Bool alwaysHideAllClipsButton; // @synthesize alwaysHideAllClipsButton=_alwaysHideAllClipsButton;
@property(retain, nonatomic) IGUserSession *userSession; // @synthesize userSession=_userSession;
@property(nonatomic) double maxOverallDuration; // @synthesize maxOverallDuration=_maxOverallDuration;
@property(nonatomic) double zoomScale; // @synthesize zoomScale=_zoomScale;
@property(nonatomic) long long selectedIndex; // @synthesize selectedIndex=_selectedIndex;
@property(nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime=_currentPlaybackTime;
@property(readonly, nonatomic) UIPinchGestureRecognizer *pinchGesture; // @synthesize pinchGesture=_pinchGesture;
@property(nonatomic) __weak id <IGSundialTimelineV3Delegate> delegate; // @synthesize delegate=_delegate;
- (void)pop_animationDidApply:(id)arg1;
- (void)pop_animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)pop_animationDidReachToValue:(id)arg1;
- (void)pop_animationDidStart:(id)arg1;
- (id)_createDefaultAnimationWithKey:(id)arg1 duration:(double)arg2;
- (void)_displayLinkDidFire:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *transitions;
@property(readonly, nonatomic) double segmentSpacing;
@property(readonly, nonatomic) double minSegmentWidth;
@property(readonly, nonatomic) double minSegmentSpacing;
@property(nonatomic) long long transitionInsertIndex;
@property(nonatomic) _Bool transitionMode;
@property(nonatomic) double segmentsHorizontalOffset;
- (void)_tapOnAddTransitionButton:(id)arg1;
- (struct IGTimeRange)_getTransitionTimeRange:(long long)arg1;
- (void)setSelectedTransition:(long long)arg1 beforeClip:(_Bool)arg2 animated:(_Bool)arg3;
- (void)_updateRetakeArray;
- (void)_tapOnAddTake;
- (void)_tapOnTakesButton:(id)arg1;
- (void)displayTakesScrollView:(_Bool)arg1;
- (void)setVideoClips:(id)arg1 withTransitions:(id)arg2 animated:(_Bool)arg3 usePushAnim:(_Bool)arg4;
- (void)setTransitions:(id)arg1;
- (void)setVideoClips:(id)arg1 animated:(_Bool)arg2 usePushAnim:(_Bool)arg3;
@property(readonly, copy, nonatomic) NSArray *videoClips;
- (double)_playbackTimeToSegmentTime:(double)arg1;
- (double)_playbackTimeForOffset:(double)arg1;
- (double)_offsetForPlaybackTime:(double)arg1;
- (double)_offsetAsItemOnRight:(long long)arg1;
- (double)_offsetAsFirstItemOnLeft:(long long)arg1;
- (long long)_thumbnailIsVisibilityWithIndex:(struct CGRect)arg1;
- (void)setCurrentPlaybackTime:(double)arg1 updateFocus:(_Bool)arg2;
- (long long)_updateSegmentFocusWithTime:(double)arg1;
- (void)playbackTimeline:(id)arg1 didUpdateCurrentTime:(double)arg2;
- (void)setPlaybackRate:(double)arg1 time:(double)arg2 atHostTime:(double)arg3;
@property(readonly, nonatomic) double timeToDistanceRatio;
- (void)touchDetector:(id)arg1 touchesCancelled:(id)arg2 withEvent:(id)arg3;
- (void)touchDetector:(id)arg1 touchesEnded:(id)arg2 withEvent:(id)arg3;
- (void)touchDetector:(id)arg1 touchesMoved:(id)arg2 withEvent:(id)arg3;
- (void)touchDetector:(id)arg1 touchesBegan:(id)arg2 withEvent:(id)arg3;
- (void)splitAtClipt:(long long)arg1;
- (id)_getSplitRangViewWithFrame:(struct CGRect)arg1;
- (void)_trimVideoClipWithDelta:(double)arg1;
- (void)_handleTrimmerGesture:(id)arg1;
- (void)_updateWantedPlayTimeWithRatio:(double)arg1;
@property(readonly, nonatomic) _Bool isTrimming;
- (void)_configureUIForStartTrim;
- (void)_handlePinchGesture:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
@property(readonly, nonatomic) _Bool isScrubbing;
- (void)_swipeRight:(id)arg1;
- (void)_swipeLeft:(id)arg1;
- (void)_hanldeSwipe:(long long)arg1;
- (_Bool)_inSwipeRegion:(id)arg1;
- (void)_layoutSegmentsUseAnimation:(_Bool)arg1;
- (void)_setRangeViewVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setSelectedIndex:(long long)arg1 clipsChangging:(_Bool)arg2 animated:(_Bool)arg3;
- (void)_handleLongPressGesture:(id)arg1;
- (void)_handleTapGesture:(id)arg1;
- (void)_handleAddClips;
- (void)_handleAllClips;
- (_Bool)_expandedMode;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
@property(readonly, nonatomic) UIPanGestureRecognizer *panGesture;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)_pointInsideAllClipsButton:(struct CGPoint)arg1;
- (void)_requestLayout;
- (void)layoutSubviews;
- (void)willMoveToSuperview:(id)arg1;
- (void)_setShadePosition;
- (void)_setPlayHeadAndLabelPositionAtCenter;
- (struct CGPoint)_getPlayHeadPosition:(double)arg1 segmentIndex:(long long)arg2 toView:(id)arg3;
- (struct CGRect)_getSegmentBound:(long long)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

