//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <FBSharedFramework/IGViewController.h>

#import "IGARLinkDetectedCardViewControllerDelegate-Protocol.h"
#import "IGActionableConfirmationToastPresenting-Protocol.h"
#import "IGBrowserControllerDelegate-Protocol.h"
#import "IGCameraColorFiltersManagerDelegate-Protocol.h"
#import "IGCameraColorFiltersPresenting-Protocol.h"
#import "IGCameraEffectMiniGalleryDataSourceListener-Protocol.h"
#import "IGCameraEffectMiniGalleryTopicProviderListener-Protocol.h"
#import "IGCameraEffectMiniGalleryViewControllerDelegate-Protocol.h"
#import "IGCameraEffectMiniGalleryViewControllerLicensingDataSource-Protocol.h"
#import "IGCameraLowLightDetectorDelegate-Protocol.h"
#import "IGCameraToolsMenuDelegate-Protocol.h"
#import "IGCameraViewControllerAREffectDelegate-Protocol.h"
#import "IGCameraViewControllerAREffectNativeUIDelegate-Protocol.h"
#import "IGCameraViewControllerAdditionalCaptureMetadataObserver-Protocol.h"
#import "IGCameraViewControllerDelegate-Protocol.h"
#import "IGCameraViewControllerSampleBufferObserver-Protocol.h"
#import "IGCameraVisibilityTrackerDelegate-Protocol.h"
#import "IGCameraZoomControllerDelegate-Protocol.h"
#import "IGCustomViewController-Protocol.h"
#import "IGGestureHandler-Protocol.h"
#import "IGLiveBroadcastMainViewControllerDelegate-Protocol.h"
#import "IGQRCodeBufferStreamProcessorDelegate-Protocol.h"
#import "IGQuickCamCaptureButtonDelegate-Protocol.h"
#import "IGResetToFeedPreferenceProviding-Protocol.h"
#import "IGSoundStateListenerDelegate-Protocol.h"
#import "IGStoryCameraOverlayViewControllerDataSource-Protocol.h"
#import "IGStoryCameraOverlayViewControllerDelegate-Protocol.h"
#import "IGStoryCameraOverlayViewControllerEffectsDataSource-Protocol.h"
#import "IGStoryCameraOverlayViewControllerEffectsDelegate-Protocol.h"
#import "IGStoryCameraOverlayViewControllerMusicDelegate-Protocol.h"
#import "IGStoryCameraOverlayViewControllerTrayDelegate-Protocol.h"
#import "IGStoryCreationAnimationCameraPresentableType-Protocol.h"
#import "IGStoryDraftStoreListener-Protocol.h"
#import "IGStoryDrawerDismissDelegate-Protocol.h"
#import "IGStoryExtendedGalleryViewControllerDelegate-Protocol.h"
#import "IGStoryFormatViewControllerProtocolDelegate-Protocol.h"
#import "IGStoryGalleryFirstViewControllerDelegate-Protocol.h"
#import "IGStoryLiveFormatViewControllerDelegate-Protocol.h"
#import "IGStoryMediaReplyOverlayControllerDelegate-Protocol.h"
#import "IGStoryPostCaptureEditingViewControllerDelegate-Protocol.h"
#import "IGStoryStickerGestureControllerDelegate-Protocol.h"
#import "IGStoryStickerTrayViewControllerStickerSelectionDelegate-Protocol.h"
#import "IGSundialFormatViewControllerDelegate-Protocol.h"
#import "IGUpcomingEventDetailsViewControllerEditDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UINavigationControllerDelegate-Protocol.h"
#import "UITextViewDelegate-Protocol.h"

@class FBTimer, IGAREffectTargetModel, IGARLinkManager, IGAsyncTask, IGAudioSessionClient, IGCameraColorFiltersManager, IGCameraEffectMiniGalleryFeedDataProvider, IGCameraEffectMiniGalleryPerfLoggingContext, IGCameraEffectMiniGalleryViewController, IGCameraLoggingContext, IGCameraLowLightDetector, IGCameraOpenPerfComponents, IGCameraTargetModel, IGCameraToolsMenu, IGCameraToolsMenuMusicButton, IGCameraToolsMenuToggleButton, IGCameraViewController, IGCameraVisibilityTracker, IGCameraZoomController, IGDirectionalPanGestureRecognizer, IGLiveBroadcastMainViewController, IGNametagLoggingContext, IGPopoverController, IGQRCodeBufferStreamProcessor, IGQRCodeURLDialogController, IGSoundStateListener, IGStoryCameraEffectMediaCoordinator, IGStoryCameraFormatModel, IGStoryCameraGridLevelLayer, IGStoryCameraGridLevelMotionHandler, IGStoryCameraOverlayViewController, IGStoryCreationConfiguration, IGStoryExtendedGalleryViewController, IGStoryGalleryFirstViewController, IGStoryGalleryZoomTransitionController, IGStoryMediaReplyOverlayController, IGSundialFormatViewController, IGUpcomingEvent, IGUserSession, NSArray, NSDate, NSMapTable, NSMutableDictionary, NSMutableSet, NSSet, NSString, NSTimer, NSUUID, UIImage, UIImageView, UIImpactFeedbackGenerator, UILongPressGestureRecognizer, UITapGestureRecognizer, UIView, UIViewController;
@protocol IGStoryCameraDirectShareRecipientSource, IGStoryCameraViewControllerDelegate, IGStoryFormatViewControllerProtocol, IGSundialCameraPreloadingLatencyLoggingDelegate;

@interface IGStoryCameraViewController : IGViewController <IGResetToFeedPreferenceProviding, IGActionableConfirmationToastPresenting, IGQRCodeBufferStreamProcessorDelegate, IGSoundStateListenerDelegate, IGCameraZoomControllerDelegate, IGLiveBroadcastMainViewControllerDelegate, IGQuickCamCaptureButtonDelegate, UIGestureRecognizerDelegate, UINavigationControllerDelegate, UITextViewDelegate, IGCustomViewController, IGStoryCameraOverlayViewControllerTrayDelegate, IGStoryCameraOverlayViewControllerEffectsDelegate, IGStoryCameraOverlayViewControllerEffectsDataSource, IGStoryCameraOverlayViewControllerMusicDelegate, IGStoryCameraOverlayViewControllerDelegate, IGStoryCameraOverlayViewControllerDataSource, IGSundialFormatViewControllerDelegate, IGStoryFormatViewControllerProtocolDelegate, IGStoryLiveFormatViewControllerDelegate, IGCameraViewControllerDelegate, IGCameraViewControllerAdditionalCaptureMetadataObserver, IGCameraViewControllerAREffectDelegate, IGCameraViewControllerAREffectNativeUIDelegate, IGStoryMediaReplyOverlayControllerDelegate, IGStoryExtendedGalleryViewControllerDelegate, IGCameraViewControllerSampleBufferObserver, IGStoryDrawerDismissDelegate, IGStoryPostCaptureEditingViewControllerDelegate, IGARLinkDetectedCardViewControllerDelegate, IGBrowserControllerDelegate, IGCameraToolsMenuDelegate, IGCameraEffectMiniGalleryViewControllerDelegate, IGCameraVisibilityTrackerDelegate, IGCameraColorFiltersManagerDelegate, IGCameraColorFiltersPresenting, IGCameraEffectMiniGalleryDataSourceListener, IGCameraEffectMiniGalleryViewControllerLicensingDataSource, IGCameraEffectMiniGalleryTopicProviderListener, IGStoryStickerGestureControllerDelegate, IGUpcomingEventDetailsViewControllerEditDelegate, IGCameraLowLightDetectorDelegate, IGStoryGalleryFirstViewControllerDelegate, IGStoryDraftStoreListener, IGStoryStickerTrayViewControllerStickerSelectionDelegate, IGGestureHandler, IGStoryCreationAnimationCameraPresentableType>
{
    IGUserSession *_userSession;
    IGStoryCreationConfiguration *_configuration;
    UIView *_contentView;
    UIView *_captureContainerView;
    UIView *_gestureContainerView;
    IGDirectionalPanGestureRecognizer *_galleryVerticalPanGesture;
    IGStoryCameraOverlayViewController *_overlayViewController;
    UILongPressGestureRecognizer *_longPressGesture;
    UITapGestureRecognizer *_singleTapGesture;
    UITapGestureRecognizer *_doubleTapGestureRecognizer;
    IGCameraZoomController *_zoomController;
    _Bool _cancelOnRelease;
    IGPopoverController *_draftEffectConsentPopoverController;
    IGCameraEffectMiniGalleryViewController *_effectMiniGalleryViewController;
    IGCameraEffectMiniGalleryFeedDataProvider *_effectMiniGallerySavedFeedDataProvider;
    NSMutableDictionary *_effectMiniGalleryFeedDataProviderPerSourceID;
    NSMutableDictionary *_effectMiniGalleryTopicPrefetcherPerSourceID;
    _Bool _isHandsFreeCountingDown;
    _Bool _isPreparingToCapture;
    _Bool _onScreen;
    _Bool _active;
    _Bool _visible;
    _Bool _isSettingsPresented;
    _Bool _dismissGalleryFirstOnDisappear;
    _Bool _isFromEffectTargeting;
    struct CGRect _detectedFaceRect;
    _Bool _isFlashScene;
    _Bool _isVolumeButtonPressed;
    NSTimer *_volumeReleaseTimer;
    NSDate *_lastVolumePress;
    IGSoundStateListener *_soundStateListener;
    _Bool _enableMutedAudioFix;
    UIImageView *_galleryPreviewImageView;
    IGStoryGalleryZoomTransitionController *_extendedGalleryZoomTransitionController;
    IGStoryGalleryFirstViewController *_galleryFirstViewController;
    NSArray *_preferredMediaTypes;
    IGLiveBroadcastMainViewController *_liveViewController;
    _Bool _currentAREffectSupportVolumeCapture;
    NSMutableSet *_appliedAREffectIDsDuringRecording;
    NSMutableSet *_appliedAREffectInstanceIDsDuringRecording;
    _Bool _shouldTriggerAREffectOnStartRecording;
    IGARLinkManager *_ARLinkManager;
    IGQRCodeBufferStreamProcessor *_qrCodeBufferProcessor;
    FBTimer *_ARLinkScanTimer;
    FBTimer *_nametagNuxTimer;
    FBTimer *_visualSearchNuxTimer;
    UIImage *_firstFrameOfVideoCapture;
    long long _targetSwitcherMode;
    IGAREffectTargetModel *_draftEffectTarget;
    IGCameraTargetModel *_pendingCameraTargetModel;
    IGAREffectTargetModel *_availableEffectTarget;
    IGStoryCameraFormatModel *_availableFormatTarget;
    NSString *_availableFormatTargetVariantEffectID;
    IGCameraLoggingContext *_loggingContext;
    unsigned long long _multiCaptureCurrentSegmentCount;
    NSMutableDictionary *_videoCreationTasks;
    IGAsyncTask *_boomerangCaptureTask;
    long long _entryPoint;
    double _captureButtonTapTime;
    IGSundialFormatViewController *_clipsFormatViewController;
    _Bool _isInUltraWideCamera;
    _Bool _enableUltraWideCapture;
    _Bool _switchingCaptureDevice;
    IGCameraOpenPerfComponents *_perfComponents;
    NSDate *_qrCodeWasScannedAt;
    _Bool _qrCodeWasScanned;
    NSDate *_visualSearchedAt;
    NSMapTable *_formatModelForToolsMenuItem;
    NSSet *_toolsAboveTheFold;
    IGStoryExtendedGalleryViewController *_effectMediaGalleryViewController;
    IGAudioSessionClient *_audioSessionClient;
    _Bool _hideStatusBar;
    IGCameraVisibilityTracker *_cameraVisibilityTracker;
    IGStoryCameraGridLevelLayer *_gridLayer;
    IGStoryCameraGridLevelMotionHandler *_motionHandler;
    IGCameraToolsMenuToggleButton *_gridLevelButton;
    IGCameraToolsMenuMusicButton *_musicButton;
    IGQRCodeURLDialogController *_qrCodeURLDialogController;
    _Bool _shouldShowCaptureUpsellNUX;
    _Bool _shownPreloadAudioOrEffectPill;
    IGCameraEffectMiniGalleryPerfLoggingContext *_effectMiniGalleryPerfLoggingContext;
    IGCameraToolsMenuToggleButton *_colorFiltersButton;
    IGCameraColorFiltersManager *_colorFiltersManager;
    IGAsyncTask *_greenScreenEffectApplication;
    IGStoryCameraEffectMediaCoordinator *_effectMediaCoordinator;
    NSArray *_postCaptureMediaCompositions;
    IGUpcomingEvent *_upcomingEventToShare;
    UIImpactFeedbackGenerator *_visualSearchCaptureImpactGenerator;
    IGCameraLowLightDetector *_lowLightDetector;
    NSString *_initialCaptureDeviceIDWhenRecordingStarted;
    IGAsyncTask *_loadingAudioAsset;
    _Bool _useIGTemporaryDirectory;
    _Bool _hasEffectPreloaded;
    _Bool _isApplyingVideoToCameraEffect;
    _Bool _showPreloadingSettingsToast;
    _Bool _volumeButtonCaptureEnabled;
    UIViewController<IGStoryFormatViewControllerProtocol> *_currentFormatViewController;
    NSString *_loggingSessionID;
    double _cameraRequestedTimestamp;
    id <IGStoryCameraViewControllerDelegate> _delegate;
    id <IGStoryCameraDirectShareRecipientSource> _recipientSource;
    IGNametagLoggingContext *_nametagLoggingContext;
    IGStoryMediaReplyOverlayController *_mediaReplyOverlayController;
    IGCameraToolsMenu *_toolsMenu;
    NSString *_sourceMediaPk;
    NSString *_sourceMediaAuthorPk;
    NSString *_pivotPageSeededMediaId;
    id <IGSundialCameraPreloadingLatencyLoggingDelegate> _latencyLoggingDelegate;
    NSString *_sourceMediaAuthorUsername;
    IGAREffectTargetModel *_effectTargetModelFromReel;
    long long _state;
    IGStoryExtendedGalleryViewController *_extendedGalleryViewController;
    IGCameraViewController *_cameraViewController;
}

- (void).cxx_destruct;
@property(retain, nonatomic) IGCameraViewController *cameraViewController; // @synthesize cameraViewController=_cameraViewController;
@property(retain, nonatomic) IGStoryExtendedGalleryViewController *extendedGalleryViewController; // @synthesize extendedGalleryViewController=_extendedGalleryViewController;
@property(nonatomic) _Bool volumeButtonCaptureEnabled; // @synthesize volumeButtonCaptureEnabled=_volumeButtonCaptureEnabled;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(copy, nonatomic) IGAREffectTargetModel *effectTargetModelFromReel; // @synthesize effectTargetModelFromReel=_effectTargetModelFromReel;
@property(nonatomic) _Bool hasEffectPreloaded; // @synthesize hasEffectPreloaded=_hasEffectPreloaded;
@property(nonatomic) _Bool showPreloadingSettingsToast; // @synthesize showPreloadingSettingsToast=_showPreloadingSettingsToast;
@property(copy, nonatomic) NSString *sourceMediaAuthorUsername; // @synthesize sourceMediaAuthorUsername=_sourceMediaAuthorUsername;
@property(nonatomic) __weak id <IGSundialCameraPreloadingLatencyLoggingDelegate> latencyLoggingDelegate; // @synthesize latencyLoggingDelegate=_latencyLoggingDelegate;
@property(copy, nonatomic) NSString *pivotPageSeededMediaId; // @synthesize pivotPageSeededMediaId=_pivotPageSeededMediaId;
@property(copy, nonatomic) NSString *sourceMediaAuthorPk; // @synthesize sourceMediaAuthorPk=_sourceMediaAuthorPk;
@property(copy, nonatomic) NSString *sourceMediaPk; // @synthesize sourceMediaPk=_sourceMediaPk;
@property(readonly, nonatomic) IGCameraToolsMenu *toolsMenu; // @synthesize toolsMenu=_toolsMenu;
@property(readonly, nonatomic) IGStoryMediaReplyOverlayController *mediaReplyOverlayController; // @synthesize mediaReplyOverlayController=_mediaReplyOverlayController;
@property(retain, nonatomic) IGNametagLoggingContext *nametagLoggingContext; // @synthesize nametagLoggingContext=_nametagLoggingContext;
@property(nonatomic) __weak id <IGStoryCameraDirectShareRecipientSource> recipientSource; // @synthesize recipientSource=_recipientSource;
@property(nonatomic) __weak id <IGStoryCameraViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double cameraRequestedTimestamp; // @synthesize cameraRequestedTimestamp=_cameraRequestedTimestamp;
@property(retain, nonatomic) NSString *loggingSessionID; // @synthesize loggingSessionID=_loggingSessionID;
@property(readonly, nonatomic) IGARLinkManager *ARLinkManager; // @synthesize ARLinkManager=_ARLinkManager;
@property(readonly, nonatomic) UIViewController<IGStoryFormatViewControllerProtocol> *currentFormatViewController; // @synthesize currentFormatViewController=_currentFormatViewController;
@property(nonatomic) long long entryPoint; // @synthesize entryPoint=_entryPoint;
@property(nonatomic, getter=isVisible) _Bool visible; // @synthesize visible=_visible;
- (void)_showNUXsIfRequired;
- (void)galleryFirstViewControllerHeaderTapped:(id)arg1;
- (void)galleryFirstViewControllerCloseTapped:(id)arg1;
- (void)upcomingEventDetailsViewController:(id)arg1 didDeleteUpcomingEvent:(id)arg2;
- (void)upcomingEventDetailsViewController:(id)arg1 didEditUpcomingEvent:(id)arg2;
@property(readonly, nonatomic) double cameraPreviewCornerRadius;
@property(readonly, nonatomic) struct CGRect cameraPreviewRegion;
@property(readonly, nonatomic) _Bool canBeginScrollingToFeed;
- (void)setIGTVOverlayNuxViewHidden:(_Bool)arg1;
@property(retain, nonatomic) IGStoryCameraFormatModel *cameraSwitcherMode;
@property(readonly, nonatomic) UIView *headerViewForTransition;
@property(readonly, nonatomic) UIView *footerViewForTransition;
@property(readonly, nonatomic) _Bool hasGrantedAllPermissions;
- (void)cameraLowLightDetectorDidUpdateLowLightConditions:(_Bool)arg1;
- (void)stickerGestureController:(id)arg1 didUpdateAlignmentGuideState:(unsigned long long)arg2;
- (void)stickerGestureController:(id)arg1 didLongPressOnSticker:(id)arg2;
- (void)stickerGestureController:(id)arg1 didPressHardOnSticker:(id)arg2;
- (void)stickerGestureController:(id)arg1 didDeleteSticker:(id)arg2;
- (void)stickerGestureController:(id)arg1 willDeleteSticker:(id)arg2;
- (void)stickerGestureController:(id)arg1 didUpdateStickerPosition:(id)arg2;
- (void)stickerGestureController:(id)arg1 didFinishPositioningSticker:(id)arg2;
- (void)stickerGestureController:(id)arg1 willBeginPositioningSticker:(id)arg2;
- (void)stickerGestureController:(id)arg1 didTapSticker:(id)arg2 atPoint:(struct CGPoint)arg3;
- (_Bool)stickerGestureController:(id)arg1 shouldBeginPositioningSticker:(id)arg2 withGesture:(id)arg3;
- (_Bool)stickerGestureController:(id)arg1 stickerCanBeDeleted:(id)arg2;
- (_Bool)stickerGestureController:(id)arg1 stickerCanBePlacedOffGuidelines:(id)arg2;
- (_Bool)stickerGestureController:(id)arg1 stickerCanBePlacedOffscreen:(id)arg2;
- (void)cameraEffectTopicProvider:(id)arg1 didFailWithError:(id)arg2;
- (void)cameraEffectTopicProviderDidUpdate:(id)arg1;
- (_Bool)canRespondToGesture:(id)arg1;
- (void)ARLinkDetectedCardViewControllerDidTapTryEffect:(id)arg1 withEffectID:(id)arg2 recognizedUsername:(id)arg3 deeplinkCode:(unsigned long long)arg4;
- (void)ARLinkDetectedCardViewControllerDidDismiss:(id)arg1;
- (void)stickerTrayViewController:(id)arg1 didSelectITakeCareStickerModel:(id)arg2;
- (void)stickerTrayViewController:(id)arg1 didSelectBadgesSupporterThankYouStickerModel:(id)arg2;
- (void)stickerTrayViewController:(id)arg1 didSelectPromptStickerModel:(id)arg2;
- (void)stickerTrayViewControllerDidSelectExpressingLoveSticker:(id)arg1;
- (void)stickerTrayViewControllerDidSelectAmplifyBlackBusinessSticker:(id)arg1;
- (void)stickerTrayViewControllerDidSelectShareProfessionalSticker:(id)arg1;
- (void)stickerTrayViewControllerHandleMusicStickerSelection:(id)arg1;
- (_Bool)stickerTrayViewControllerShouldHandleMusicStickerSelection:(id)arg1;
- (void)stickerTrayViewController:(id)arg1 didSelectKaraokeCaptionStickerTrayModel:(id)arg2;
- (void)stickerTrayViewController:(id)arg1 didSelectUpcomingEventStickerModel:(id)arg2;
- (void)stickerTrayViewController:(id)arg1 didSelectRollCallStickerWithTrayModel:(id)arg2;
- (void)stickerTrayViewController:(id)arg1 didSelectQuizStickerWithTrayModel:(id)arg2;
- (void)stickerTrayViewController:(id)arg1 didSelectSMBDiscountStickerWithUser:(id)arg2 discount:(id)arg3;
- (void)stickerTrayViewController:(id)arg1 didSelectSMBSupportStickerUser:(id)arg2 type:(long long)arg3;
- (void)stickerTrayViewController:(id)arg1 didSelectFundraiserStickerNonprofit:(id)arg2;
- (void)stickerTrayViewController:(id)arg1 didSelectCountdownStickerModel:(id)arg2;
- (void)stickerTrayViewController:(id)arg1 didSelectAudioTrack:(id)arg2;
- (void)stickerTrayViewController:(id)arg1 didSelectQuestionAnswerStickerModel:(id)arg2;
- (void)stickerTrayViewController:(id)arg1 didSelectARStickerModel:(id)arg2;
- (void)stickerTrayViewController:(id)arg1 didSelectProductStickerModel:(id)arg2;
- (void)stickerTrayViewController:(id)arg1 willSelectProductStickerModel:(id)arg2;
- (void)stickerTrayViewControllerDidSelectCountdownSticker:(id)arg1;
- (void)stickerTrayViewControllerDidSelectSliderSticker:(id)arg1;
- (void)stickerTrayViewControllerDidSelectMentionSticker:(id)arg1;
- (void)stickerTrayViewControllerDidSelectPollStickerV2:(id)arg1;
- (void)stickerTrayViewControllerDidSelectPollSticker:(id)arg1;
- (void)stickerTrayViewControllerDidSelectHashtagSticker:(id)arg1;
- (void)stickerTrayViewController:(id)arg1 didSelectCameraStickerModel:(id)arg2;
- (void)stickerTrayViewController:(id)arg1 didSelectSticker:(id)arg2;
- (void)qrCodeBufferStreamProcessor:(id)arg1 didFailWithError:(id)arg2;
- (void)qrCodeBufferStreamProcessor:(id)arg1 didDetectLauncherOverrideURL:(id)arg2;
- (void)qrCodeBufferStreamProcessor:(id)arg1 didDetectAllowedExternalURL:(id)arg2;
- (void)qrCodeBufferStreamProcessor:(id)arg1 didDetectInternalURL:(id)arg2;
- (void)qrCodeBufferStreamProcessor:(id)arg1 didDetectEffectWithId:(id)arg2;
- (void)qrCodeBufferStreamProcessor:(id)arg1 didDetectUser:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)_showVisualSearchNuxIfNecessary;
- (void)_stopARLinkScanTimer;
- (void)_startARLinkScanTimer;
- (void)_showNameTagNux;
- (void)addFundraiserInPreLiveWithUser:(id)arg1 fundraiserTitle:(id)arg2;
- (void)cameraViewController:(id)arg1 didReceiveAudioBuffer:(struct opaqueCMSampleBuffer *)arg2;
- (void)cameraViewController:(id)arg1 didReceiveVideoBuffer:(struct opaqueCMSampleBuffer *)arg2 metadata:(id)arg3;
- (void)_logAREffectNativePickerSelectionWithIndex:(unsigned long long)arg1 effectID:(id)arg2 pickerItem:(id)arg3 source:(id)arg4;
- (void)cameraViewControllerShouldHideTextInput:(id)arg1;
- (void)cameraViewControllerShouldShowTextInput:(id)arg1 currentText:(id)arg2;
- (void)cameraViewController:(id)arg1 shouldChangeSliderValue:(double)arg2;
- (void)cameraViewControllerSliderConfigure:(id)arg1 sliderConfig:(id)arg2;
- (void)cameraViewControllerShouldHideSlider:(id)arg1;
- (void)cameraViewControllerShouldShowSlider:(id)arg1;
- (void)cameraViewController:(id)arg1 didSelectPickerItem:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)cameraViewController:(id)arg1 shouldSelectPickerIndex:(unsigned long long)arg2;
- (void)cameraViewControllerShouldHidePicker:(id)arg1;
- (void)cameraViewControllerShouldShowPicker:(id)arg1;
- (void)cameraViewController:(id)arg1 shouldConfigurePickerWithConfiguration:(id)arg2;
- (void)arEffectApplicatorDidFailToRender:(id)arg1;
- (void)arEffectApplicator:(id)arg1 didRenderEffect:(id)arg2;
- (void)arEffectApplicator:(id)arg1 didSetEffect:(id)arg2 withAttribution:(id)arg3;
- (void)arEffectApplicator:(id)arg1 willAddFilter:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)arEffectApplicator:(id)arg1 willAddFilterWithConfig:(id)arg2 assetModel:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)arEffectApplicatorWillUnApplyAREffect:(id)arg1 isSwitchingAREffect:(_Bool)arg2;
- (void)arEffectApplicator:(id)arg1 willApplyAREffect:(id)arg2;
- (_Bool)_isSingleCameraMode;
- (_Bool)cameraViewControllerShouldFetchForSwitcherMode:(id)arg1;
- (void)cameraViewController:(id)arg1 didFailFetchWithError:(id)arg2;
- (void)cameraViewController:(id)arg1 didFailFetchForEffectTarget:(id)arg2 response:(id)arg3;
- (void)cameraViewController:(id)arg1 didCompleteFetchForEffectTarget:(id)arg2;
- (void)cameraViewController:(id)arg1 didBeginFetchingEffectTarget:(id)arg2;
- (void)instructionServiceHandlerRequestsHideAREffectInstructions:(id)arg1;
- (void)instructionServiceHandler:(id)arg1 requestsShowAREffectInstructions:(id)arg2 forDuration:(double)arg3;
- (id)_currentDeviceInfoConfig;
- (id)_prepopulatedStickers;
- (void)_hideAREffectInstructions;
- (void)_showAREffectInstructions:(id)arg1 forDuration:(double)arg2;
- (void)_updateDial;
- (_Bool)_canInteractWithAREffects;
- (long long)_numberOfVisibleEffectsForLoggingWithError:(long long)arg1;
- (void)_logEffectDidShowEvents:(_Bool)arg1 errorCode:(long long)arg2;
- (void)arEffectApplicator:(id)arg1 didDownloadAREffectAsset:(id)arg2;
- (void)arEffectApplicatorDidUpdateEffectList:(id)arg1 fromNetwork:(_Bool)arg2;
- (void)arEffectApplicator:(id)arg1 didUpdateAREffectTouchSupportedStatus:(_Bool)arg2;
- (void)arEffectApplicatorDidFailToDownloadRemoteModel:(id)arg1;
- (void)arEffectApplicatorDidFailToDownload:(id)arg1;
- (void)arEffectApplicator:(id)arg1 didFailFetchWithError:(id)arg2;
- (void)arEffectApplicator:(id)arg1 didFailWithTargetEffectResponse:(id)arg2;
- (void)arEffectApplicatorAREffectDidBecomeAvailable:(id)arg1;
- (void)arEffectApplicatorUserDidTurnOffAREffect:(id)arg1;
- (void)cameraViewController:(id)arg1 didUpdateFlashScene:(_Bool)arg2;
- (void)cameraViewController:(id)arg1 didDetectFaceRect:(struct CGRect)arg2;
- (void)storyCameraOverlayViewMoreInfoSheetDidLeaveFullscreenMode:(id)arg1;
- (void)storyCameraOverlayViewMoreInfoSheetDidEnterFullscreenMode:(id)arg1;
- (void)cameraViewControllerDidResumeRecording:(id)arg1 timestamp:(CDStruct_1b6d18a9)arg2;
- (void)cameraViewControllerDidPauseRecording:(id)arg1 timestamp:(CDStruct_1b6d18a9)arg2;
- (void)cameraViewController:(id)arg1 startAudioSessionDidError:(id)arg2;
- (struct UIEdgeInsets)cameraViewControllerSafeAreaInsets:(id)arg1;
- (void)cameraViewControllerDidStartRecording:(id)arg1 timestamp:(CDStruct_1b6d18a9)arg2;
- (void)cameraViewControllerDidRequestStartRecording:(id)arg1;
- (void)cameraViewController:(id)arg1 didReceiveFirstFrameAfterSwitchingCamerasWithCameraPosition:(long long)arg2 cameraOrientation:(long long)arg3;
- (void)cameraViewControllerDidStartCameraSwitch:(id)arg1;
- (void)cameraViewControllerDidReceiveFirstFrame:(id)arg1;
- (void)cameraViewController:(id)arg1 didStartCaptureSessionWithCameraPosition:(long long)arg2 cameraOrientation:(long long)arg3;
- (void)cameraViewController:(id)arg1 didChangeCameraState:(long long)arg2;
- (void)cameraViewController:(id)arg1 captureDidBecomeAvailable:(_Bool)arg2;
- (void)cameraViewControllerDidUpdateLightingCapability:(id)arg1;
- (void)cameraViewController:(id)arg1 didToggleLowLightMode:(_Bool)arg2;
- (void)cameraViewController:(id)arg1 didChangeLightingMode:(long long)arg2;
- (void)cameraViewController:(id)arg1 didSwitchToCameraPosition:(long long)arg2 withUserInput:(unsigned long long)arg3;
- (void)cameraViewController:(id)arg1 willSwitchFromCameraPosition:(long long)arg2;
- (void)cameraViewController:(id)arg1 didFinishWithBoomerangManager:(id)arg2;
- (void)cameraViewController:(id)arg1 failedToCapturePhotoWithError:(id)arg2;
- (void)cameraViewController:(id)arg1 didFinishWithDevicePosition:(long long)arg2 videoInfos:(id)arg3 images:(id)arg4;
- (void)_addCaptureThumbnail:(id)arg1 forCameraViewController:(id)arg2 currentMultiCaptureSegmentCount:(unsigned long long)arg3;
- (void)cameraViewController:(id)arg1 didUpdateRecordProgress:(double)arg2;
- (void)cameraViewControllerDidStopRecording:(id)arg1 timestamp:(CDStruct_1b6d18a9)arg2 error:(id)arg3;
- (void)_transitionToPostCaptureWithVideoCreationTask:(id)arg1;
- (void)_transitionToPostCaptureWithMediaCompositions:(id)arg1;
- (id)_compositionFromBoomerangCaptureResult:(id)arg1 videoCaptureSize:(struct CGSize)arg2;
- (void)_transitionToPostCaptureWithBoomerangCaptureTask:(id)arg1;
- (void)cameraViewControllerWillStopRecording:(id)arg1;
- (long long)storyCameraOverlayViewControllerCameraPosition:(id)arg1;
- (long long)storyCameraOverlayViewControllerTrayTitleAppearance:(id)arg1;
- (long long)storyCameraOverlayViewControllerLightingButtonAppearance:(id)arg1;
- (long long)storyCameraOverlayViewControllerMusicButtonAppearance:(id)arg1;
- (long long)storyCameraOverlayViewControllerSwitchCameraButtonAppearance:(id)arg1;
- (long long)storyCameraOverlayViewControllerPreferredBottomLeftButtonType:(id)arg1;
- (void)storyCameraOverlayViewController:(id)arg1 requestPrefetchForAREffectScrollingSelectorAtIndex:(long long)arg2;
- (id)storyCameraOverlayViewController:(id)arg1 arEffectScrollingSelectorAssetModelAtIndex:(long long)arg2;
- (long long)storyCameraOverlayViewControllerNumberOfAREffectScrollingSelectorEffects:(id)arg1;
- (_Bool)storyCameraOverlayViewControllerAreAREffectsAvailable:(id)arg1;
- (long long)storyCameraOverlayViewControllerAREffectButtonAppearance:(id)arg1;
- (id)storyCameraOverlayViewControllerAREffectAttributionForCurrentItem:(id)arg1;
- (id)pendingEffectTargetForStoryCameraOverlayViewController:(id)arg1;
- (id)storyCameraOverlayViewController:(id)arg1 modelForAREffectID:(id)arg2;
- (id)miniGallerySavedEffectsInStoryCameraOverlayViewController:(id)arg1;
- (id)miniGalleryEffectsInStoryCameraOverlayViewController:(id)arg1;
- (id)savedAREffectModelsForStoryCameraOverlayViewController:(id)arg1;
- (id)unsavedAREffectModelsForStoryCameraOverlayViewController:(id)arg1;
- (id)_filterUnsavedAREffectModels:(id)arg1;
- (id)arEffectModelsForStoryCameraOverlayViewController:(id)arg1;
- (long long)storyCameraOverlayViewControllerSurface:(id)arg1;
- (long long)storyCameraOverlayViewControllerNumberOfSavedAREffectDialItems:(id)arg1;
- (long long)storyCameraOverlayViewControllerNumberOfAREffectDialItems:(id)arg1;
- (void)storyCameraOverlayViewControllerDidTapAddGalleryPickerEffectMedia:(id)arg1;
- (void)storyCameraOverlayViewControllerDidTapEffectNetworkConsentPill:(id)arg1;
- (void)storyCameraOverlayViewController:(id)arg1 didManuallyScrollToDialItemAt:(long long)arg2;
- (void)storyCameraOverlayViewController:(id)arg1 didRequestRemovalOfAREffectWithID:(id)arg2;
- (void)storyCameraOverlayViewControllerDialDidDeselectCurrentAREffect:(id)arg1 reason:(long long)arg2;
- (void)storyCameraOverlayViewController:(id)arg1 dialDidSelectAREffect:(id)arg2 atIndex:(unsigned long long)arg3 usingData:(id)arg4;
- (void)storyCameraOverlayViewControllerDidTapClearEffect:(id)arg1;
- (_Bool)storyCameraOverlayViewController:(id)arg1 shouldHideToolMenuTitlesForTrayItem:(id)arg2;
- (_Bool)storyCameraOverlayViewController:(id)arg1 shouldHideModeSwitcherForTrayItem:(id)arg2;
- (void)storyCameraOverlayViewControllerDidTapRetakeButton:(id)arg1;
- (void)storyCameraOverlayViewDidExitTextInput:(id)arg1;
- (void)storyCameraOverlayView:(id)arg1 didChangeText:(id)arg2;
- (void)storyCameraOverlayView:(id)arg1 didChangeSliderWithValue:(double)arg2;
- (void)storyCameraOverlayView:(id)arg1 didChangePickerValueWithIndex:(long long)arg2;
- (void)storyCameraOverlayViewControllerTrayDidDisappear:(id)arg1;
- (void)storyCameraOverlayViewControllerTrayDidAppear:(id)arg1;
- (void)storyCameraOverlayViewControllerDialDidStopVideoCapture:(id)arg1;
- (void)storyCameraOverlayViewControllerDialDidStartVideoCapture:(id)arg1;
- (void)storyCameraOverlayViewControllerDialDidFailVideoCapture:(id)arg1;
- (_Bool)storyCameraOverlayViewControllerDialShouldAllowVideoCapture:(id)arg1;
- (void)_setupShareForUpcomingEvent:(id)arg1;
- (void)storyCameraOverlayViewController:(id)arg1 didSelectShareUpcomingEvent:(id)arg2;
- (void)storyCameraOverlayViewController:(id)arg1 didSelectMusicClip:(id)arg2;
- (void)storyCameraOverlayViewController:(id)arg1 didTapSticker:(id)arg2;
- (_Bool)storyCameraOverlayViewController:(id)arg1 shouldTapSticker:(id)arg2;
- (void)storyCameraOverlayViewController:(id)arg1 canvasModeViewControllerDidShareToStory:(long long)arg2 andDirectRecipients:(id)arg3;
- (void)storyCameraOverlayViewController:(id)arg1 didEndScrollingOnAREffectScrollingSelectorItemIndex:(long long)arg2;
- (void)storyCameraOverlayViewController:(id)arg1 didSelectAREffectScrollingSelectorItemAtIndex:(long long)arg2;
- (void)storyCameraOverlayViewController:(id)arg1 didFinishHandsFreeCountdown:(_Bool)arg2;
- (void)storyCameraOverlayViewControllerDidBeginHandsFreeCountdown:(id)arg1;
- (void)storyCameraOverlayViewControllerDidTapSettingsButton:(id)arg1;
- (void)storyCameraOverlayViewControllerDidTapCloseButton:(id)arg1;
- (void)storyCameraOverlayViewController:(id)arg1 didEndScrollOnCameraMode:(id)arg2;
- (void)_transitionToNewFormatForType:(long long)arg1;
- (void)_updateEffectSurfaceIfNecessaryFromMode:(id)arg1 toMode:(id)arg2;
- (void)storyCameraOverlayViewControllerDidTapTryIt:(id)arg1 onEffectWithID:(id)arg2 effectName:(id)arg3 effectIconURL:(id)arg4;
- (void)storyCameraOverlayViewController:(id)arg1 didSwitchFromCameraMode:(id)arg2 toCameraMode:(id)arg3;
- (void)storyCameraOverlayViewControllerDidTapLowLightButton:(id)arg1;
- (void)storyCameraOverlayViewControllerDidTapLightingButton:(id)arg1;
- (void)storyCameraOverlayViewControllerDidTapSwitchCameras:(id)arg1;
- (void)storyCameraOverlayViewControllerDidTapGalleryButton:(id)arg1;
- (void)storyCameraOverlayViewControllerDidTapShutterButton:(id)arg1;
- (void)storyCameraOverlayViewDidUpdatePermissions:(id)arg1;
- (void)storyCameraOverlayView:(id)arg1 didZoomByPercent:(double)arg2;
- (void)storyCameraOverlayView:(id)arg1 didScaleZoom:(double)arg2;
- (void)storyCameraOverlayViewController:(id)arg1 didToggleMuteButton:(_Bool)arg2;
- (void)storyCameraOverlayViewController:(id)arg1 didToggleNetworkAccess:(_Bool)arg2;
- (id)_backgroundColorsForPostCap:(id)arg1;
- (void)_updateStickySoundState;
- (void)_toggleArEffectMuteButton:(_Bool)arg1;
- (void)presentSavedEffectGallery;
- (void)presentEffectGallery;
- (void)presentSundialAudioBrowserIfPossible;
- (void)_setGridLevelOverlayEnabled:(_Bool)arg1;
- (long long)_indexForAREffectScrollingSelectorEffectID:(id)arg1;
- (_Bool)_arEffectNewTrayBehaviorEnabled;
- (void)_resetAREffect;
- (void)_updateAREffectInstructionState:(id)arg1;
- (void)_addSuperzoomToFormatPickerIfPossible;
- (id)_getSuperzoomFormatModel;
- (_Bool)_canShowAREffectTray;
- (void)storyCameraOverlayViewControllerDidSelectMiniGallery:(id)arg1;
- (id)cameraEffectMiniGalleryViewControllerAREffectAttributionForCurrentItem:(id)arg1;
- (void)_applyEffectMiniGalleryFeedControllerDataSource:(id)arg1 toTrayWithSource:(unsigned long long)arg2;
- (_Bool)cameraEffectMiniGalleryViewControllerEffectIdIsLogged:(id)arg1;
- (void)cameraEffectMiniGalleryViewControllerDidLogImpressionForEffectID:(id)arg1;
- (void)cameraEffectMiniGalleryViewControllerDidDismiss:(id)arg1;
- (void)cameraEffectMiniGalleryViewControllerDidSwitchTopics:(id)arg1;
- (void)cameraEffectMiniGalleryViewControllerDidEnterFullscreen:(id)arg1;
- (void)cameraEffectMiniGalleryViewControllerWillExitFullscreen:(id)arg1;
- (void)cameraEffectMiniGalleryViewControllerDidTapSwitchCamera:(id)arg1;
- (void)cameraEffectMiniGalleryViewControllerDidClearSelection:(id)arg1;
- (void)cameraEffectMiniGalleryViewController:(id)arg1 logSelectedEffect:(id)arg2 index:(long long)arg3;
- (void)cameraEffectMiniGalleryViewController:(id)arg1 didSelectEffect:(id)arg2;
- (void)cameraEffectCollectionDataSource:(id)arg1 didFailWithError:(id)arg2;
- (void)cameraEffectCollectionDataSource:(id)arg1 didUpdateUsingPage:(id)arg2;
- (_Bool)_selectEffectWithID:(id)arg1 locatedOnLeftSideOfDefaultTrayItem:(_Bool)arg2;
- (void)_selectCurrentOrTargetEffectIfPossible;
- (void)_deactivateAudioSessionIfNecessary;
- (void)willBecomeInactive;
- (void)didBecomeActive;
- (void)willBecomeActiveFromEntryPoint:(long long)arg1;
- (void)_setupQRCodeProcessor;
- (void)_animateOverlayHidden:(_Bool)arg1;
- (void)_presentEffectMiniGalleryFromSource:(unsigned long long)arg1 showSaved:(_Bool)arg2 effectTarget:(id)arg3;
- (id)_setupCaptureDevices:(long long)arg1;
- (id)_formatVariantForLogging;
- (void)_logMediaCaptureWithStoryModel:(id)arg1 compositionId:(id)arg2 assetMediaType:(long long)arg3 background:(long long)arg4 extraLoggingData:(id)arg5;
- (CDStruct_b9ba3679)_cameraCaptureInfo;
- (_Bool)_captureWillUseFlash;
- (void)_logMediaCaptureWithSundialComposition:(id)arg1;
- (_Bool)_supportsMultiSelect;
- (_Bool)_hasRecentlyVisuallySearched;
- (_Bool)_hasRecentlyScannedQRCode;
- (void)_handleQRCodeURLDetected:(id)arg1 isExternal:(_Bool)arg2;
- (void)_handleDetectedQRCodeForEffectId:(id)arg1;
- (void)_handleDetectedUser:(id)arg1 effect:(id)arg2;
- (void)_hideAREffectTrayAnimated:(_Bool)arg1;
- (void)_showAREffectTrayFromTapToFocus;
- (void)_showAREffectTray;
- (void)_focusOnFaceAndShowAREffectTray;
- (void)_setDoubleTapGestureEnabled:(_Bool)arg1;
- (id)_storyCreationModel;
- (void)_showFrontTorchLightIfNeeded;
- (void)stopCaptureSession;
- (void)startCaptureSession;
- (void)didDismissPostCaptureBySavingDraft;
- (void)didDismissPostCaptureBySharing;
- (void)didDismissPostCaptureWithoutSharing:(id)arg1;
- (void)didBecomeActiveFromDraftsEditingSheetCamera;
- (void)_didFinishCaptureWithMediaCompositions:(id)arg1;
- (_Bool)_isDialAllowed;
- (id)_arEffectAssetModelForIndex:(long long)arg1 forCameraSwitcherMode:(long long)arg2;
- (_Bool)_shouldHideMuteButtonWithAREffectModel:(id)arg1;
- (void)_updateMuteButtonAndMuteStateWithAREffectModel:(id)arg1;
- (void)_enableVolumeButtonCapture:(_Bool)arg1;
- (void)_setDefaultVideoConfiguration;
- (void)_fetchEffectMiniGalleryIfPossible;
- (void)_fetchEffectMiniGalleryTopicsIfPossible;
- (void)_setDefaultTopicID:(id)arg1 forSource:(unsigned long long)arg2;
- (id)_defaultTopicIDForSource:(unsigned long long)arg1;
- (void)_showEffectNetworkConsentDialog;
- (void)_updateMultiCaptureIsArEffectState:(_Bool)arg1;
- (void)browserControllerDidChangeUrl:(id)arg1;
- (void)browserControllerDidDismissWithUrl:(id)arg1;
- (void)soundListenerDidSetStickySoundState:(id)arg1;
- (void)soundListenerDidUpdate:(id)arg1;
- (void)captureButtonDidZoomScale:(double)arg1;
- (void)zoomControllerDidStopZoom:(id)arg1;
- (void)zoomController:(id)arg1 didChangeZoomScaleBy:(double)arg2;
- (void)liveMainViewController:(id)arg1 didTapWithGestureRecognizer:(id)arg2;
- (void)liveMainViewController:(id)arg1 didFailWithMessage:(id)arg2;
- (void)liveMainViewControllerDidFinishSession:(id)arg1 afterSuccessfulBroadcasting:(_Bool)arg2 sharedToIGTV:(_Bool)arg3 startNewLive:(_Bool)arg4;
- (void)liveMainViewControllerDidSwitchToActiveState:(id)arg1;
- (id)currentEffect;
@property(readonly, nonatomic) long long cameraPosition;
- (void)_cleanUpLiveViewController:(id)arg1 afterSuccessfulBroadcasting:(_Bool)arg2 sharedToIGTV:(_Bool)arg3 startNewLive:(_Bool)arg4;
- (void)_liveVideoButtonTapped;
- (void)storyPostCaptureEditingViewControllerDidCancel:(id)arg1;
- (void)storyPostCaptureEditingViewControllerWillCancelAutoSavingDraft:(id)arg1;
- (void)storyPostCaptureEditingViewController:(id)arg1 didShareToStory:(long long)arg2 andDirectRecipients:(id)arg3 storyModelArray:(id)arg4 metadataArray:(id)arg5 exitPoint:(long long)arg6;
- (id)galleryFirstViewController;
- (void)_showGalleryFirstViewController;
- (void)_presentPostcaptureV2WithCompositions:(id)arg1 zoomTransitionViewController:(id)arg2 presentationSourceProvider:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_sendOrientationDataToCurrentAREffectFromAVAsset:(id)arg1;
- (void)_sendDataToCurrentAREffectFromAsset:(id)arg1;
- (void)_cameraEffectApplyVideoURL:(id)arg1;
- (void)_cameraEffectApplyVideoAsset:(id)arg1 useHighQuality:(_Bool)arg2;
- (void)_fetchMediaForGalleryPickerFromVideoAsset:(id)arg1;
- (void)_fetchMediaForGalleryPickerFromAsset:(id)arg1 identifier:(id)arg2;
- (void)_turnOnGreenScreenEffect:(CDUnknownBlockType)arg1;
- (void)_miniGallerySelectGreenScreenEffectWithAsset:(id)arg1 assetIdentifier:(id)arg2;
- (void)_selectGreenScreenEffectWithAsset:(id)arg1 assetIdentifier:(id)arg2;
- (void)extendedGalleryViewControllerDidUpdateGalleryPermissions:(id)arg1;
- (_Bool)_isEffectMiniGalleryAllowed;
- (void)extendedGalleryViewController:(id)arg1 didShareToStory:(long long)arg2 exitPoint:(long long)arg3 directRecipients:(id)arg4 storyModelArray:(id)arg5 metadataArray:(id)arg6;
- (void)extendedGalleryViewController:(id)arg1 didSelectDraft:(id)arg2 withDraftGallery:(id)arg3;
- (void)extendedGalleryViewController:(id)arg1 didSelectCameraCell:(id)arg2;
- (void)_logGallerySelectMediaForAssets:(id)arg1 compositionArrays:(id)arg2 loggingContext:(id)arg3;
- (void)extendedGalleryViewController:(id)arg1 didSelectAssets:(id)arg2;
- (id)_cameraLoggingMetadata;
- (void)_effectGalleryMediaSelected:(id)arg1 asset:(id)arg2;
- (void)extendedGalleryViewController:(id)arg1 didSelectBoomerangSuggestion:(id)arg2 atIndexPath:(id)arg3 boomerangAssetSize:(struct CGSize)arg4;
- (void)_showExtendedGalleryWithPresentingPanGesture:(id)arg1;
- (void)_cancelCaptureOnReleaseIfNeeded;
- (void)_tryStopRecording;
- (void)_tryBeginRecordingWithCaptureDevices:(id)arg1;
- (void)_tryBeginRecording;
- (void)_takePicture;
- (void)_applyVolumeButtonCaptureEnabledState;
- (void)_volumeButtonPressed:(id)arg1;
- (void)_volumeButtonReleased;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)captureButtonDidEndExpanding;
- (void)_captureButtonDidRelease;
- (void)_stopRecordingIfNeeded;
- (void)captureButtonDidReleaseFromInterruption;
- (void)captureButtonDidReleaseAfterExpandingFinished;
- (_Bool)_currentEffectIsHandsFree;
- (void)captureButtonDidReleaseBeforeExpandingFinished;
- (void)captureButtonDidTouchDown;
- (void)captureButtonDidBeginExpanding;
- (void)captureButtonDidConfirm;
- (id)storyMediaReplyOverlayControllerNuxHostingView;
- (void)storyMediaReplyOverlayController:(id)arg1 didUpdateToOverlayStyle:(long long)arg2;
- (void)storyMediaReplyOverlayController:(id)arg1 willUpdateToOverlayStyle:(long long)arg2 animationDuration:(double)arg3;
- (void)storyDrawerDidDismiss:(id)arg1;
- (void)storyDrawerWillDismiss:(id)arg1 withDismissStyle:(unsigned long long)arg2;
- (void)storyLiveFormatViewController:(id)arg1 didSelectShareUpcomingEvent:(id)arg2;
- (void)storyLiveFormatViewController:(id)arg1 didEndLiveSuccessfully:(_Bool)arg2 sharedToIGTV:(_Bool)arg3 startNewLive:(_Bool)arg4;
- (void)storyLiveFormatViewControllerDidGoLive:(id)arg1;
- (void)storyLiveFormatViewControllerWillGoLive:(id)arg1;
- (void)storyFormatViewController:(id)arg1 didEndScrollOnCameraMode:(id)arg2;
- (void)storyFormatViewControllerDidSaveSundialDraft:(id)arg1;
- (void)storyFormatViewControllerDidShareToSundial:(id)arg1 toDestination:(long long)arg2;
- (void)storyFormatViewControllerDidShareToFeed:(id)arg1;
- (void)storyFormatViewController:(id)arg1 didCreateSundialComposition:(id)arg2;
- (id)prepopulatedStickersForStoryFormatViewController:(id)arg1;
- (void)storyFormatViewController:(id)arg1 didSwitchFromCameraMode:(id)arg2 toCameraMode:(id)arg3;
- (void)storyFormatViewControllerDidTapCloseButton:(id)arg1;
- (void)storyFormatViewController:(id)arg1 didCreateMediaCompositions:(id)arg2;
- (void)_turnOnGreenScreenWithVideoAsset:(id)arg1;
- (void)sundialFormatViewController:(id)arg1 galleryDidSelectVideoForGreenScreen:(id)arg2;
- (void)sundialFormatViewController:(id)arg1 galleryDidSelectAssetForGreenScreen:(id)arg2;
- (void)sundialFormatViewControllerDidSelectEffectMiniGallery:(id)arg1;
- (void)sundialFormatViewControllerSetEffectTargetModel:(id)arg1;
- (void)sundialFormatViewControllerDidClearPreloadedEffect:(id)arg1;
- (id)sundialFormatViewControllerCurrentAREffectModel:(id)arg1;
- (void)cameraVisibilityTrackerDidDetectPrivacyViolation:(id)arg1;
- (void)toolsMenu:(id)arg1 didSelectTool:(id)arg2;
- (void)toolsMenu:(id)arg1 willSelectTool:(id)arg2;
- (void)toolsMenu:(id)arg1 didUpdateExpandedState:(_Bool)arg2;
- (id)_compatibleToolsForTool:(id)arg1;
- (id)_overflowTools;
- (void)_updateToolMenuSelectionForFormatButton:(id)arg1;
- (void)_setCameraToolsMenuModeForFormatButton:(id)arg1;
- (void)_didTapFormatButton:(id)arg1;
- (void)_presentMultiCaptureDeleteCapturesDialogWithAcceptHandler:(CDUnknownBlockType)arg1;
- (void)_didTapPrecaptureMusicButton;
- (void)_didTapGridLevelButton:(id)arg1;
- (void)_colorFiltersButtonPressed:(id)arg1;
- (void)_deleteMediaForRecovery;
- (void)_showAlertForFailedMediaRecovery;
- (void)_showAlertForMediaRecoveryIfNeeded;
- (void)storyDraftStore:(id)arg1 didDeleteDraftsWithIdentifiers:(id)arg2;
- (void)storyDraftStore:(id)arg1 didSaveDraft:(id)arg2;
- (void)storyDraftStore:(id)arg1 didFinishLoadingSavedDrafts:(id)arg2;
- (void)_presentColorFilters;
- (void)presentColorFiltersManager:(id)arg1;
- (void)colorFiltersManagerDidTapFlipCamera:(id)arg1;
- (void)colorFiltersManager:(id)arg1 didUpdateIntensity:(float)arg2;
- (void)colorFiltersManager:(id)arg1 willChangePresentedState:(_Bool)arg2;
- (void)colorFiltersManager:(id)arg1 didDeselectFilter:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)colorFilterManager:(id)arg1 didSelectFilter:(id)arg2 completion:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) IGStoryCameraFormatModel *currentCameraFormat;
- (void)showPromptToApplyAudioTrack:(id)arg1 effectModel:(id)arg2;
- (void)_didPanVertically:(id)arg1;
- (void)_handleLongPressBegan;
- (void)didLongPress:(id)arg1;
- (void)_didSingleTap:(id)arg1;
- (void)_didDoubleTap:(id)arg1;
- (void)_refetchEffectsIfNecessary;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)_viewDidEnterWindow;
- (void)_attemptAddingPrepopulatedOverlays;
- (void)viewWillAppear:(_Bool)arg1;
- (void)lastDisplayedFrameWithCompletion:(CDUnknownBlockType)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)loadView;
- (id)ig_keyViewControllers;
- (double)actionableConfirmationToastBottomPadding;
- (long long)preferredTabBarBehavior;
- (_Bool)prefersNavigationBarHidden;
- (long long)preferredStatusBarUpdateAnimation;
- (id)childViewControllerForStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (_Bool)prefersStatusBarHidden;
- (_Bool)accessibilityPerformEscape;
- (void)_toggleFrontAndBackCameraWithUserInput:(unsigned long long)arg1;
- (_Bool)_shouldUseMiniGalleryEffectTargeting;
- (_Bool)_isEffectMiniGalleryTraySyncEnabled;
- (_Bool)_canApplyEffectTarget;
- (_Bool)_canApplyFormatTarget;
- (void)_navigateToEffectTarget;
- (void)_applyAvailableFormatTarget;
- (void)_applyAvailableEffectTarget;
- (void)_cancelPendingTarget;
- (_Bool)startCaptureSessionIfNeeded;
@property(readonly, nonatomic) _Bool isInCaptureSession;
- (void)setTargetStickerId:(id)arg1 targetStickerType:(long long)arg2 actionSourceType:(long long)arg3;
- (_Bool)setEffectListWithIDs:(id)arg1;
- (void)setTarget:(id)arg1;
- (void)_setEffectTarget:(id)arg1;
- (void)_presentDraftEffectConsentDialogForEffectTarget:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_dismissMiniGalleryIfNeeded;
- (void)_dismissDraftEffectConsentDialogIfNeeded;
- (void)storyCameraOverlayViewControllerDidSelectEffect:(id)arg1;
- (void)_logNavigationEventIfNeededFromSourceType:(long long)arg1 toDestinationType:(long long)arg2;
- (id)analyticsModule;
- (id)analyticsExtras;
@property(retain, nonatomic) NSUUID *lastAutoSavedStoryMediaCompositionStateIdentifier;
- (void)showDraftSavedNUX;
@property(readonly, nonatomic) struct CGRect bottomLeftButtonFrame;
- (id)effectMiniGalleryPerfLoggingContext;
- (id)initWithUserSession:(id)arg1 loadingAudioAsset:(id)arg2 configuration:(id)arg3 initialCameraTargetModel:(id)arg4 initialCapturePosition:(long long)arg5 presentationStyle:(long long)arg6 cameraLoggingContext:(id)arg7;
- (_Bool)IAcknowledgeThisAPICouldRegressFeedMetricsAndIWillRunATest;
- (id)resetToFeedPreferenceForConfig:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

