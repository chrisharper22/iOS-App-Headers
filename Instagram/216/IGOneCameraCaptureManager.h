//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "FBCaptureManagerListener-Protocol.h"
#import "IGAudioCapturing-Protocol.h"
#import "IGCaptureManagerVideoSampleBufferDelegate-Protocol.h"
#import "IGCaptureManaging-Protocol.h"
#import "OCMComponentFilterFactoryProtocol-Protocol.h"

@class AVCaptureVideoPreviewLayer, IGFilter, IGMPVideoProcessorController, IGMediaSharePlayer, IGOCMCameraActionQueueComponent, IGOCMCustomCaptureDevicesComponent, IGOCMCustomOutputComponent, IGOCMPhotostreamComponent, IGOCMVideoProcessorController, IGOneCameraConfiguration, IGOneCameraDefaultCaptureMode, IGOneCameraLogger, IGSystemAudioCaptureSessionInteractor, NSArray, NSString, NSURL, OCMController;
@protocol FBCCAudioPipelineProviding, FBCaptureCoordinatorFilterFactoryProtocol, IGCaptureManagerAdditionalCaptureMetadataDelegate, IGCaptureManagerAudioSampleBufferDelegate, IGCaptureManagerAudioSessionDelegate, IGCaptureManagerDelegate, IGCaptureManagerPreviewSizeProvider, IGCaptureManagerVideoPreviewSampleBufferDelegate, IGCaptureManagerVideoSampleBufferDelegate, IGCaptureManagerVideoSampleBufferProcessing, IGCaptureManagerVideoSessionDelegate, IGVideoProcessorControlling;

@interface IGOneCameraCaptureManager : NSObject <IGCaptureManagerVideoSampleBufferDelegate, OCMComponentFilterFactoryProtocol, IGCaptureManaging, IGAudioCapturing, FBCaptureManagerListener>
{
    OCMController *_captureController;
    IGOneCameraLogger *_logger;
    IGOneCameraDefaultCaptureMode *_defaultCaptureModeComponent;
    IGOCMCameraActionQueueComponent *_actionQueue;
    IGOCMCustomCaptureDevicesComponent *_captureDevicesComponent;
    IGOCMCustomOutputComponent *_customOutputComponent;
    IGOCMPhotostreamComponent *_photostreamComponent;
    IGOCMVideoProcessorController *_videoProcessorController;
    _Bool _preferPhotoPreset;
    _Bool _hasReceivedFirstFrame;
    _Bool _didBecomeActive;
    _Bool _alwaysEnableAudioSession;
    _Bool _hdrVideoCaptureEnabled;
    IGSystemAudioCaptureSessionInteractor *_audioCaptureSessionInteractor;
    AVCaptureVideoPreviewLayer *_previewLayer;
    NSURL *_directoryForVideoStorage;
    long long _numberOfInitialBuffersIgnored;
    long long _numberOfInitialBuffersReceived;
    _Bool _videoMirrored;
    _Bool _audioEnabled;
    _Bool _audioCaptureIgnoreRTCClientNotification;
    _Bool _videoCapturePaused;
    _Bool _hasAREffect;
    _Bool _optimizePhotoQuality;
    _Bool _livePhotoEnabled;
    _Bool _bracketedCaptureEnabled;
    _Bool _needsResume;
    long long _videoOutputOrientation;
    id <FBCCAudioPipelineProviding> _audioPipelineProvider;
    IGOneCameraConfiguration *_configuration;
    id <IGCaptureManagerDelegate> _delegate;
    id <IGCaptureManagerVideoPreviewSampleBufferDelegate> _videoPreviewSampleBufferDelegate;
    id <IGCaptureManagerVideoSampleBufferDelegate> _videoSampleBufferDelegate;
    id <IGCaptureManagerAudioSampleBufferDelegate> _audioSampleBufferDelegate;
    id <IGCaptureManagerAudioSessionDelegate> _audioSessionDelegate;
    id <IGCaptureManagerVideoSessionDelegate> _videoSessionDelegate;
    id <IGCaptureManagerAdditionalCaptureMetadataDelegate> _additionalCaptureMetadataDelegate;
    IGMPVideoProcessorController *_mpVideoProcessorController;
    long long _sessionPreset;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool needsResume; // @synthesize needsResume=_needsResume;
@property(nonatomic) _Bool bracketedCaptureEnabled; // @synthesize bracketedCaptureEnabled=_bracketedCaptureEnabled;
@property(nonatomic) _Bool livePhotoEnabled; // @synthesize livePhotoEnabled=_livePhotoEnabled;
@property(nonatomic) _Bool optimizePhotoQuality; // @synthesize optimizePhotoQuality=_optimizePhotoQuality;
@property(nonatomic) _Bool hasAREffect; // @synthesize hasAREffect=_hasAREffect;
@property(nonatomic) _Bool videoCapturePaused; // @synthesize videoCapturePaused=_videoCapturePaused;
@property(nonatomic) _Bool audioCaptureIgnoreRTCClientNotification; // @synthesize audioCaptureIgnoreRTCClientNotification=_audioCaptureIgnoreRTCClientNotification;
@property(nonatomic) _Bool audioEnabled; // @synthesize audioEnabled=_audioEnabled;
@property(nonatomic) long long sessionPreset; // @synthesize sessionPreset=_sessionPreset;
@property(nonatomic) _Bool videoMirrored; // @synthesize videoMirrored=_videoMirrored;
@property(retain, nonatomic) IGMPVideoProcessorController *mpVideoProcessorController; // @synthesize mpVideoProcessorController=_mpVideoProcessorController;
@property(nonatomic) __weak id <IGCaptureManagerAdditionalCaptureMetadataDelegate> additionalCaptureMetadataDelegate; // @synthesize additionalCaptureMetadataDelegate=_additionalCaptureMetadataDelegate;
@property(nonatomic) __weak id <IGCaptureManagerVideoSessionDelegate> videoSessionDelegate; // @synthesize videoSessionDelegate=_videoSessionDelegate;
@property(nonatomic) __weak id <IGCaptureManagerAudioSessionDelegate> audioSessionDelegate; // @synthesize audioSessionDelegate=_audioSessionDelegate;
@property(nonatomic) __weak id <IGCaptureManagerAudioSampleBufferDelegate> audioSampleBufferDelegate; // @synthesize audioSampleBufferDelegate=_audioSampleBufferDelegate;
@property(nonatomic) __weak id <IGCaptureManagerVideoSampleBufferDelegate> videoSampleBufferDelegate; // @synthesize videoSampleBufferDelegate=_videoSampleBufferDelegate;
@property(nonatomic) __weak id <IGCaptureManagerVideoPreviewSampleBufferDelegate> videoPreviewSampleBufferDelegate; // @synthesize videoPreviewSampleBufferDelegate=_videoPreviewSampleBufferDelegate;
@property(nonatomic) __weak id <IGCaptureManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) IGOneCameraConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) id <FBCCAudioPipelineProviding> audioPipelineProvider; // @synthesize audioPipelineProvider=_audioPipelineProvider;
@property(readonly, nonatomic) long long videoOutputOrientation; // @synthesize videoOutputOrientation=_videoOutputOrientation;
- (id)waterfallLogger;
- (id)cameraSLAMController;
@property(nonatomic) _Bool hdrVideoCaptureEnabled;
@property(nonatomic) _Bool allowHighResolutionCapture;
@property(nonatomic) _Bool lowLightModeEnabled;
@property(readonly, nonatomic) double maxISO;
@property(readonly, nonatomic) double currentISO;
@property(nonatomic) double zoomScale;
@property(nonatomic) double zoom;
@property(nonatomic) long long torchMode;
@property(nonatomic) long long flashMode;
@property(nonatomic) long long cameraPosition;
@property(readonly, nonatomic) NSString *mainCameraDeviceID;
@property(nonatomic) long long frameRate;
@property(readonly, nonatomic) __weak NSArray *captureDevices;
@property(nonatomic) __weak id <IGCaptureManagerPreviewSizeProvider> previewSizeProvider;
@property(nonatomic) __weak id <IGCaptureManagerVideoSampleBufferProcessing> videoSampleBufferProcessor;
- (void)captureManagerDidCaptureVideoBuffer:(struct opaqueCMSampleBuffer *)arg1 metadata:(id)arg2;
- (void)captureManagerDidDropVideoBuffer;
- (void)captureManagerUpdatedPreviousCaptureDevice:(id)arg1 toCurrentCaptureDevice:(id)arg2;
- (void)captureManagerHasEndedCaptureSession;
- (void)captureManagerDidFailToLoadAudioSessionWithError:(id)arg1;
- (void)captureManagerHasFinishedLoadingAudioSession;
- (void)captureManagerPreviewDidLoad;
- (void)captureManagerHasFinishedLoadingCaptureSession;
- (void)captureManagerDidReceiveFirstVideoFrameFromCaptureSessionAtTime:(double)arg1;
- (void)captureManagerDidEncounterRuntimeError:(id)arg1 willRetry:(_Bool)arg2 sessionType:(unsigned long long)arg3;
- (void)captureManagerDidResignInterruptedSessionType:(unsigned long long)arg1;
- (void)captureManagerDidBecomeInterruptedWithReason:(unsigned char)arg1 sessionType:(unsigned long long)arg2;
- (void)captureManagerDidStopRunningSessionType:(unsigned long long)arg1;
- (void)captureManagerWillStopCaptureSessionType:(unsigned long long)arg1;
- (void)captureManagerDidStartRunningSessionType:(unsigned long long)arg1;
- (void)captureManagerWillStartRunningSessionType:(unsigned long long)arg1;
- (void)setCaptureDevices:(id)arg1 useMultiCaptureIfPossible:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)switchCaptureDevice:(id)arg1 withVideoMirroredIfNeeded:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)unlockFocusWithCompletion:(CDUnknownBlockType)arg1;
- (void)lockFocusWithCompletion:(CDUnknownBlockType)arg1;
- (struct CGPoint)captureDevicePointOfInterestForPoint:(struct CGPoint)arg1 view:(id)arg2;
- (void)focusAndExposeAtPoint:(struct CGPoint)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setVideoOrientation:(long long)arg1;
- (void)_postProcessCapturedPhotos:(id)arg1 fromCaptureDevices:(id)arg2 error:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)takeLivePhotoEnabledPicturesWithCaptureDevices:(id)arg1 useHighResolutionIfPossible:(_Bool)arg2 completion:(CDUnknownBlockType)arg3 livePhotoCompletion:(CDUnknownBlockType)arg4;
- (void)takePicturesWithCaptureDevices:(id)arg1 useHighResolutionIfPossible:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)takePictureWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_stopAudioSession;
- (void)_startAudioSessionIfNeeded;
- (_Bool)_isAudioSessionAuthorized;
- (void)setAudioEnabled:(_Bool)arg1 allowBgAudioMixing:(_Bool)arg2;
- (void)deactivateAndDestroyAudioSession;
- (void)deactivateAudioSession;
- (void)deactivateSystemAudioSession;
- (void)activateAudioSessionWhenReady;
- (void)_stopAllSessionsAndCleanUpForInterruption:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)stopAllSessionsAndCleanUpWithCompletion:(CDUnknownBlockType)arg1;
- (void)interruptSessionWithCompletion:(CDUnknownBlockType)arg1;
- (void)didRenderFirstVideoFrameWithCameraSessionID:(id)arg1 cameraDestination:(id)arg2 renderStartTime:(id)arg3 renderFinishTime:(double)arg4 previewLayerType:(unsigned long long)arg5;
- (void)startSessionWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)isSpeakerMuted;
- (void)setSpeakerDefaultMuted:(_Bool)arg1;
- (void)setSpeakerMuted:(_Bool)arg1;
- (void)captureControllerDidStopRecording;
- (void)captureControllerDidStartRecording;
- (void)willBecomeInactive;
- (void)didBecomeActive;
- (_Bool)isAudioCaptureRunning;
- (_Bool)isVideoSessionRunning;
- (void)updateCurrentFilterInputs:(id)arg1 parameters:(id)arg2 index:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;
@property(readonly, nonatomic) double postARFBFilterStrength;
@property(readonly, nonatomic) NSString *postARFBFilterIdentifier;
- (void)setPostARFBFilterWithIdentifier:(id)arg1 filterParameters:(id)arg2 index:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;
@property(readonly, nonatomic) IGFilter *postARFilter;
- (void)setPostARFilter:(id)arg1 index:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
@property(nonatomic) __weak IGMediaSharePlayer *mediaSharePlayer;
@property(retain, nonatomic) id <IGVideoProcessorControlling> videoProcessorController;
- (id)previewLayerForDevice:(id)arg1;
- (id)previewLayerForPosition:(long long)arg1;
@property(readonly, nonatomic) AVCaptureVideoPreviewLayer *previewLayer;
- (struct CGSize)videoSizeForCurrentSessionPreset;
@property(readonly, nonatomic) _Bool multiCaptureEnabled;
@property(readonly, nonatomic) unsigned long long supportedCameraCapabilities;
- (_Bool)currentSessionSupportsFlash;
- (void)resumeCameraCaptureSession;
- (void)pauseCameraCaptureSession;
- (_Bool)currentDeviceHasFlash;
- (_Bool)detectedLowLightConditions;
- (_Bool)isUsingVideoSessionPreset;
- (id)audioBufferQueue;
- (id)videoBufferQueue;
@property(readonly, nonatomic) id <FBCaptureCoordinatorFilterFactoryProtocol> ccFilterFactory;
- (id)_dualPhotoCaptureComponent;
- (id)createNewVideoProcessorController;
- (id)initWithConfiguration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

