//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "IGAvatarEffectManagerListener-Protocol.h"
#import "IGAvatarEffectUpsellPresenterDelegate-Protocol.h"
#import "IGCameraEffectBottomSheetViewControllerDelegate-Protocol.h"
#import "IGCameraEffectCollectionDataSourceListener-Protocol.h"
#import "IGCameraEffectMiniGalleryViewControllerDelegate-Protocol.h"
#import "IGCameraTrayViewControllerDataSource-Protocol.h"
#import "IGCameraTrayViewControllerDelegate-Protocol.h"
#import "IGCameraViewControllerAREffectDelegate-Protocol.h"
#import "IGKragleVideoEffectCommunicationListener-Protocol.h"
#import "IGMultipeerEffectCommunicationListener-Protocol.h"
#import "IGPartialModalSheetListener-Protocol.h"
#import "IGParticipantEffectCommunicationListener-Protocol.h"
#import "IGStoryCameraModeSwitcherViewDelegate-Protocol.h"
#import "IGVideoCallAREffectToastPresenterDelegate-Protocol.h"
#import "IGVideoCallAREffectViewControllerInterface-Protocol.h"
#import "IGVideoCallEffectTrayViewControllerDelegate-Protocol.h"

@class IGAvatarEffectUpsellPresenter, IGCameraDraftEffectConsentDialogueController, IGCameraEffectMiniGalleryFeedDataProvider, IGCameraEffectMiniGalleryLoggingContext, IGCameraEffectMiniGalleryPerfLoggingContext, IGCameraEffectMiniGalleryTopicProvider, IGCameraEffectMiniGalleryViewController, IGCameraEffectsByIDProvider, IGIGLContext, IGImagePreparer, IGKragleAvatarCommunicationController, IGKragleVideoEffectCommunicationController, IGMultiCameraEffectCollectionDataProvider, IGUserSession, IGVideoCallAREffectToastPresenter, IGVideoCallLoggingContext, NSDictionary, NSMutableDictionary, NSMutableSet, NSString, UIView;
@protocol IGAlertHUDHandling, IGSubscriptionToken, IGVideoCallAREffectViewControllerDelegate><IGPartialModalSheetCustomInteractionDelegate, IGVideoCallCaptureCoordinatorAREffectProtocol, IGVideoCallEffectTrayViewControllerProtocol;

@interface IGVideoCallAREffectViewController : UIViewController <IGCameraTrayViewControllerDelegate, IGCameraTrayViewControllerDataSource, IGAvatarEffectManagerListener, IGAvatarEffectUpsellPresenterDelegate, IGCameraEffectCollectionDataSourceListener, IGMultipeerEffectCommunicationListener, IGParticipantEffectCommunicationListener, IGStoryCameraModeSwitcherViewDelegate, IGKragleVideoEffectCommunicationListener, IGCameraEffectBottomSheetViewControllerDelegate, IGPartialModalSheetListener, IGVideoCallEffectTrayViewControllerDelegate, IGCameraEffectMiniGalleryViewControllerDelegate, IGVideoCallAREffectToastPresenterDelegate, IGCameraViewControllerAREffectDelegate, IGVideoCallAREffectViewControllerInterface>
{
    IGUserSession *_userSession;
    id <IGVideoCallCaptureCoordinatorAREffectProtocol> _captureCoordinator;
    IGVideoCallLoggingContext *_loggingContext;
    id <IGVideoCallAREffectViewControllerDelegate><IGPartialModalSheetCustomInteractionDelegate> _delegate;
    _Bool _hasAttachedGestureToGestureView;
    int _videoCallParticipantCount;
    IGKragleVideoEffectCommunicationController *_communicationController;
    NSString *_multipeerEffectIdFromAutoApply;
    NSString *_multipeerEffectInitiatorId;
    IGKragleAvatarCommunicationController *_avatarCommunicationController;
    id <IGSubscriptionToken> _subscriptionToken;
    id <IGAlertHUDHandling> _alertPresenter;
    UIView *_tray;
    NSString *_lastAppliedEffectId;
    IGAvatarEffectUpsellPresenter *_avatarEffectUpsellPresenter;
    IGMultiCameraEffectCollectionDataProvider *_normalEffectCollectionDataProvider;
    IGMultiCameraEffectCollectionDataProvider *_savedEffectCollectionDataProvider;
    IGMultiCameraEffectCollectionDataProvider *_multipeerEffectCollectionDataProvider;
    IGMultiCameraEffectCollectionDataProvider *_avatarPresetEffectCollectionDataProvider;
    IGMultiCameraEffectCollectionDataProvider *_festiveCollectionDataProvider;
    IGMultiCameraEffectCollectionDataProvider *_environmentsCollectionDataProvider;
    IGCameraEffectsByIDProvider *_targetDataProvider;
    IGVideoCallAREffectToastPresenter *_toastPresenter;
    UIViewController<IGVideoCallEffectTrayViewControllerProtocol> *_trayViewController;
    unsigned long long _currentEffectMode;
    unsigned long long _currentTrayMode;
    unsigned long long _modeBeforeSupplementaryButtonUpdate;
    NSDictionary *_effectModesToSelectorModes;
    NSMutableDictionary *_modesToEffects;
    NSMutableDictionary *_modesToSelectedIndex;
    _Bool _lightingEnabled;
    _Bool _isAvatarThemeSelected;
    _Bool _isMultipeerEffectEnabledFromVideoCapabilities;
    _Bool _didSwitchFromAvatarThemeBackToDefaultTheme;
    long long _currentTouchupSliderBucker;
    IGCameraDraftEffectConsentDialogueController *_draftEffectConsentDialogueController;
    _Bool _detachedLightingTab;
    NSString *_miniGallerySessionId;
    unsigned long long _miniGallerySource;
    IGCameraEffectMiniGalleryPerfLoggingContext *_miniGalleryPerfLoggingContext;
    IGCameraEffectMiniGalleryLoggingContext *_miniGalleryLoggingContext;
    IGCameraEffectMiniGalleryFeedDataProvider *_miniGalleryFeedDataProvider;
    IGCameraEffectMiniGalleryTopicProvider *_miniGalleryTopicProvider;
    IGCameraEffectMiniGalleryViewController *_miniGalleryViewController;
    _Bool _touchupFilterApplied;
    NSString *_currentLightingFilterIdentifier;
    unsigned long long _threeWayToggleAvatarEscalationState;
    NSMutableSet *_loggedTrayModesImpressions;
    IGIGLContext *_iglContext;
    IGImagePreparer *_imagePreparer;
    _Bool _didGenerateLightingIcons;
}

- (void).cxx_destruct;
- (void)applyMultipeerEffect:(id)arg1 effectName:(id)arg2 effectThumbnailUri:(id)arg3 initiatorId:(id)arg4 initiatorName:(id)arg5 cryptoHash:(id)arg6;
- (void)setParticipantsUpdatedHandler:(CDUnknownBlockType)arg1 forEffectDescriptor:(id)arg2;
- (id)currentParticipantsForEffectDescriptor:(id)arg1;
- (id)currentUserForEffectDescriptor:(id)arg1;
- (void)setHandler:(CDUnknownBlockType)arg1 forTopic:(id)arg2;
- (void)sendMessage:(id)arg1 toTopic:(id)arg2 usingRTPChannel:(_Bool)arg3;
- (void)_logDidShowToastWithType:(long long)arg1;
- (void)_logDidFailToApplyAvatarEffectIfNeeded:(id)arg1;
- (void)_logDidApplyAvatarEffectIfNeeded:(id)arg1;
- (void)_logUnapplyAvatarEffectIfNeeded:(id)arg1 isRemovingCurrentEffect:(_Bool)arg2;
- (void)_logWillApplyAvatarEffectIfNeeded:(id)arg1;
- (void)_switchCaptureDeviceIfNeeded:(_Bool)arg1;
- (void)logDidShowToastWithType:(long long)arg1;
- (_Bool)cameraEffectMiniGalleryViewControllerEffectIdIsLogged:(id)arg1;
- (void)cameraEffectMiniGalleryViewControllerDidLogImpressionForEffectID:(id)arg1;
- (void)cameraEffectMiniGalleryViewController:(id)arg1 logSelectedEffect:(id)arg2 index:(long long)arg3;
- (void)cameraEffectMiniGalleryViewControllerDidDismiss:(id)arg1;
- (void)cameraEffectMiniGalleryViewControllerDidEnterFullscreen:(id)arg1;
- (void)cameraEffectMiniGalleryViewControllerWillExitFullscreen:(id)arg1;
- (void)cameraEffectMiniGalleryViewControllerDidTapSwitchCamera:(id)arg1;
- (void)cameraEffectMiniGalleryViewControllerDidSwitchTopics:(id)arg1;
- (void)cameraEffectMiniGalleryViewController:(id)arg1 didSelectEffect:(id)arg2;
- (void)cameraEffectMiniGalleryViewControllerDidClearSelection:(id)arg1;
- (long long)_sliderBuckerTypeForSliderValue:(double)arg1;
- (long long)_videoCallEffectsTabTypeForEffectTrayMode:(unsigned long long)arg1;
- (id)_uprankedEffects;
- (void)_applyEffect:(id)arg1;
- (id)_existingEffectInTray:(id)arg1;
- (void)_fetchMiniGalleryFeedData;
- (void)_fetchMiniGalleryTopics;
- (id)_miniGalleryPerfLoggingContext;
- (void)_presentEffectBottomSheet;
- (void)_handlePlaceholderSelection;
- (void)_generateAvatarExpressionsItemsIfNeeded;
- (void)_generateEnvironmentsItemsIfNeeded;
- (void)_generateAvatarBackgroundItemsIfNeeded;
- (void)_generateMultipeerItemsIfNeeded;
- (void)_prepareFilterItemsIfNeeded;
- (void)_prepareFilterItemIconsIfNeeded;
- (id)_generateEffectModeItems;
- (_Bool)_environmentEffectsTabEnabled;
- (_Bool)_groupEffectsTabEnabled;
- (_Bool)_groupEffectsEnabled;
- (void)_generateTrayItems;
- (void)_generateTrayItemsAndReload;
- (void)_presentMultipeerEffectApplyToAllPeersDialogue:(CDUnknownBlockType)arg1 cancelHandler:(CDUnknownBlockType)arg2;
- (long long)_indexForEffectID:(id)arg1 withModeType:(unsigned long long)arg2;
- (id)_effectForIndex:(long long)arg1 withModeType:(unsigned long long)arg2;
- (id)_effectForEffectID:(id)arg1;
- (void)_layoutEffectTray;
- (void)didUpdateSupplementaryButtonIsSelected:(_Bool)arg1;
- (void)partialModalSheet:(id)arg1 didChangeState:(unsigned long long)arg2;
- (void)partialModalSheet:(id)arg1 willChangeState:(unsigned long long)arg2;
- (void)partialModalSheet:(id)arg1 didUpdateOffset:(double)arg2 presentationProgress:(double)arg3;
- (void)partialModalSheetDidDismiss:(id)arg1;
- (long long)cameraEffectBottomSheetViewControllerCaptureType:(id)arg1;
- (void)cameraEffectBottomSheetViewControllerDidTapTryIt:(id)arg1 onEffectWithID:(id)arg2 effectName:(id)arg3 effectIconURL:(id)arg4;
- (_Bool)cameraEffectBottomSheetViewControllerShouldPresentCamera:(id)arg1;
- (id)cameraEffectBottomSheetViewControllerAttributionModelForCurrentAREffect:(id)arg1;
- (void)cameraEffectBottomSheetViewController:(id)arg1 didRequestRemovalOfEffectWithID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)cameraEffectBottomSheetViewController:(id)arg1 didToggleSaveToWishlist:(_Bool)arg2 showToast:(_Bool)arg3;
- (void)cameraEffectBottomSheetViewController:(id)arg1 didTapViewProductItem:(id)arg2;
- (void)cameraEffectBottomSheetViewControllerDidLeaveFullscreenMode:(id)arg1;
- (void)cameraEffectBottomSheetViewControllerDidEnterFullscreenMode:(id)arg1;
- (void)cameraModeSwitcherViewDidDisplayMode:(id)arg1;
- (void)cameraModeSwitcherViewDidEndScrollOnMode:(id)arg1;
- (void)cameraModeSwitcherViewDidSelectMode:(id)arg1;
- (void)cameraModeSwitcherView:(id)arg1 didSwitchFromMode:(id)arg2 toMode:(id)arg3;
- (_Bool)cameraModeSwitcherView:(id)arg1 shouldBeginDraggingFromMode:(id)arg2;
- (id)cameraTrayViewController:(id)arg1 accessibilityHintForItemAtIndex:(long long)arg2;
- (_Bool)cameraTrayViewController:(id)arg1 shouldDisplayBadgeOnItemAtIndex:(long long)arg2;
- (_Bool)cameraTrayViewController:(id)arg1 shouldAllowMoreInfoAccessForItemAtIndex:(long long)arg2;
- (CDUnknownBlockType)cameraTrayViewController:(id)arg1 imageProviderForItemAtIndex:(long long)arg2 isHighlighted:(_Bool)arg3;
- (id)cameraTrayViewController:(id)arg1 imageProcessorForItemAtIndex:(long long)arg2;
- (id)cameraTrayViewController:(id)arg1 imageURLForItemAtIndex:(long long)arg2 isHighlighted:(_Bool)arg3;
- (id)cameraTrayViewController:(id)arg1 accessibilityLabelForItemAtIndex:(long long)arg2;
- (long long)numberOfItemsInCameraTrayViewController:(id)arg1;
- (void)cameraTrayViewControllerDidConfirmSelection:(id)arg1 didTapAtIndex:(long long)arg2;
- (void)cameraTrayViewController:(id)arg1 didRequestRemovalOfAREffectWithID:(id)arg2;
- (void)cameraTrayViewController:(id)arg1 didScrollToItemAtIndex:(long long)arg2;
- (void)cameraTrayViewController:(id)arg1 didSelectItemAtIndex:(long long)arg2;
- (void)_showEffectSelection:(id)arg1;
- (void)_handleDidSelectItemAtIndex:(long long)arg1;
- (id)cameraTrayViewController:(id)arg1 effectForIndex:(long long)arg2;
- (void)cameraViewController:(id)arg1 didFailFetchWithError:(id)arg2;
- (void)cameraViewController:(id)arg1 didFailFetchForEffectTarget:(id)arg2 response:(id)arg3;
- (void)cameraViewController:(id)arg1 didCompleteFetchForEffectTarget:(id)arg2;
- (void)cameraViewController:(id)arg1 didBeginFetchingEffectTarget:(id)arg2;
- (void)cameraViewControllerIsReadyToProcessNewAREffect:(id)arg1;
- (_Bool)cameraViewControllerShouldFetchForSwitcherMode:(id)arg1;
- (void)arEffectApplicator:(id)arg1 didRenderEffect:(id)arg2;
- (void)arEffectApplicatorDidFailToRender:(id)arg1;
- (void)arEffectApplicator:(id)arg1 didSetEffect:(id)arg2 withAttribution:(id)arg3;
- (void)arEffectApplicator:(id)arg1 willAddFilter:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)arEffectApplicator:(id)arg1 willAddFilterWithConfig:(id)arg2 assetModel:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)arEffectApplicatorWillUnApplyAREffect:(id)arg1 isSwitchingAREffect:(_Bool)arg2;
- (void)arEffectApplicator:(id)arg1 willApplyAREffect:(id)arg2;
- (void)cameraEffectCollectionDataSource:(id)arg1 didFailWithError:(id)arg2;
- (void)cameraEffectCollectionDataSource:(id)arg1 didUpdateUsingPage:(id)arg2;
- (void)avatarEffectUpsellPresenterDidTapCloseButton:(id)arg1;
- (void)avatarEffectUpsellPresenterDidTapNotNowButton:(id)arg1;
- (void)avatarEffectUpsellPresenterDidDismissAvatarEditor:(id)arg1;
- (void)avatarEffectUpsellPresenterDidPresentAvatarEditor:(id)arg1;
- (void)instructionServiceHandlerRequestsHideAREffectInstructions:(id)arg1;
- (void)instructionServiceHandler:(id)arg1 requestsShowAREffectInstructions:(id)arg2 forDuration:(double)arg3;
- (void)arEffectApplicatorDidFailToDownloadRemoteModel:(id)arg1;
- (void)arEffectApplicatorDidFailToDownload:(id)arg1;
- (void)arEffectApplicator:(id)arg1 didFailFetchWithError:(id)arg2;
- (void)arEffectApplicator:(id)arg1 didFailWithTargetEffectResponse:(id)arg2;
- (void)arEffectApplicatorDidUpdateEffectList:(id)arg1 fromNetwork:(_Bool)arg2;
- (void)arEffectApplicator:(id)arg1 didUpdateAREffectTouchSupportedStatus:(_Bool)arg2;
- (void)arEffectApplicatorUserDidTurnOffAREffect:(id)arg1;
- (void)arEffectApplicatorAREffectDidBecomeAvailable:(id)arg1;
- (void)arEffectApplicator:(id)arg1 didDownloadAREffectAsset:(id)arg2;
- (void)avatarEffectManager:(id)arg1 didUpdateAvatarStatus:(long long)arg2;
- (void)avatarEffectManager:(id)arg1 didUpdateAvatarEffectDownloadState:(long long)arg2;
- (void)resetEffectTrayToDefaultMode;
- (void)didUpdateAvatarStateFromThreeWayToggle:(long long)arg1;
- (void)turnOnAvatarEffect;
- (id)arEffectsTray;
- (void)fetchTargetEffectModel:(id)arg1;
- (_Bool)isAvatarEffectApplied;
- (void)prefetchEffects;
- (id)selectedAREffectId;
- (void)reapplyAREffect;
- (void)applyAREffectWithId:(id)arg1;
- (void)setEffectModeSliderValue:(unsigned long long)arg1 value:(double)arg2;
- (void)hideMiniEffectGallery:(_Bool)arg1;
- (void)showMiniEffectGallery:(_Bool)arg1;
- (void)hideAREffectTray:(_Bool)arg1;
- (void)showAREffectTray:(_Bool)arg1 mode:(unsigned long long)arg2;
- (void)showAREffectTray:(_Bool)arg1;
- (_Bool)isMiniEffectGalleryVisible;
- (_Bool)isAREffectTrayVisible;
- (void)updateEffectParticipantIdsWithSelfId:(id)arg1 participantIds:(id)arg2;
- (void)setCall:(id)arg1;
- (void)_createFaceFiltersTray;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)loadView;
- (id)initWithUserSession:(id)arg1 captureCoordinator:(id)arg2 loggingContext:(id)arg3 delegate:(id)arg4 lightingEnabled:(_Bool)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

