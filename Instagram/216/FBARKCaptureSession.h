//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "FBARCameraSLAMControlling-Protocol.h"
#import "FBARKSessionListener-Protocol.h"
#import "FBCCWaterfallLoggingComponent-Protocol.h"
#import "FBCameraCaptureManaging-Protocol.h"

@class ARSession, AVCaptureDevice, FBARKAudioSessionController, FBARKLightEstimationDataProducer, FBARKPlatformAlgorithmDataProducer, FBARKSessionEventAnnouncer, FBARKSessionListenerAnnouncer, FBARKVideoDataProducer, FBARKVideoSessionController, FBARKWorldTrackingFrameProducer, FBCameraAudioLevelListenerAnnouncer, FBCameraCaptureFrameDropQueuedAnnouncer, FBCameraCaptureManagingProducerPorts, FBCaptureDevice, FBCaptureDeviceStateController, FBCaptureManagerEventQueuedAnnouncer, FBFramePerformanceTracker, NSArray, NSMutableArray, NSMutableDictionary, NSString;
@protocol FBCCAudioCaptureControlling, FBCCPerformanceLogger, FBCameraAnalyticsPayloadProviding, FBCaptureOutput, FBCaptureVideoSessionControlling, FBMPProducerPort, FBOrientationTracking, OS_dispatch_queue;

@interface FBARKCaptureSession : NSObject <FBARKSessionListener, FBCameraCaptureManaging, FBARCameraSLAMControlling, FBCCWaterfallLoggingComponent>
{
    _Bool _sessionRunning;
    NSObject<OS_dispatch_queue> *_sessionQueue;
    NSObject<OS_dispatch_queue> *_videoOutputQueue;
    ARSession *_captureSession;
    NSMutableArray *_pointAnchors;
    NSMutableDictionary *_sessionConfigurations;
    unsigned long long _requestedCameraCapabilities;
    CDUnknownFunctionPointerType _captureSessionAvailabilityChecker;
    CDUnknownFunctionPointerType _toggledPositionGetter;
    FBARKSessionListenerAnnouncer *_sessionAnnouncer;
    FBARKSessionEventAnnouncer *_sessionEventAnnouncer;
    FBCaptureManagerEventQueuedAnnouncer *_captureManagerEventAnnouncer;
    FBCameraCaptureFrameDropQueuedAnnouncer *_frameDropAnnouncer;
    FBCaptureDeviceStateController *_captureDeviceStateController;
    FBARKVideoSessionController *_videoSessionController;
    FBARKAudioSessionController *_audioPipelineController;
    struct FBCameraConfiguration _cameraConfiguration;
    id <FBCameraAnalyticsPayloadProviding> _analyticsPayloadProvider;
    FBFramePerformanceTracker *_framePerformanceTracker;
    NSObject<OS_dispatch_queue> *_videoBufferQueue;
    NSObject<OS_dispatch_queue> *_audioBufferQueue;
    FBCameraCaptureManagingProducerPorts *_producerPorts;
    FBARKVideoDataProducer *_videoDataProducer;
    FBARKWorldTrackingFrameProducer *_worldTrackingFrameProducer;
    FBARKLightEstimationDataProducer *_lightEstimationDataProducer;
    FBARKPlatformAlgorithmDataProducer *_platformAlgorithmDataProducer;
    id <FBCCPerformanceLogger> _performanceLogger;
    _Bool _hasSessionStartInvoked;
    id <FBOrientationTracking> _orientationTracker;
    NSString *_componentName;
    NSString *_componentInstanceId;
    NSString *_componentSessionId;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *componentSessionId; // @synthesize componentSessionId=_componentSessionId;
@property(readonly, nonatomic) NSString *componentInstanceId; // @synthesize componentInstanceId=_componentInstanceId;
@property(readonly, nonatomic) NSString *componentName; // @synthesize componentName=_componentName;
@property(readonly, nonatomic) id <FBOrientationTracking> orientationTracker; // @synthesize orientationTracker=_orientationTracker;
- (void)invalidateCaptureDeviceFormat;
- (void)setCaptureDeviceFormatProvider:(id)arg1;
- (void)_handleHitTestWithSession:(id)arg1 point:(struct CGPoint)arg2 resultTypes:(unsigned long long)arg3 promise:(const void *)arg4;
- (void)_handleRaycastWithSession:(id)arg1 point:(struct CGPoint)arg2 typeOption:(const void *)arg3 promise:(const void *)arg4;
- (future_6ca21f13)hitTestWithPoint:(const void *)arg1 typeOption:(const void *)arg2;
- (void)removeAllSLAMTrackables;
- (void)removeSLAMTrackable:(const void *)arg1;
- (struct ARPointTrackable)addSLAMPointTrackable:(const void *)arg1;
- (void)requestChangeToCameraCapabilities:(unsigned long long)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) unsigned long long requestedCameraCapabilities;
@property(readonly, nonatomic) unsigned long long supportedCameraCapabilities;
- (void)session:(id)arg1 didUpdateFrame:(id)arg2;
- (void)_notifySessionStopped;
- (void)_lockedStopSession;
- (void)_stopSession;
- (void)_notifyDidStartSessionOfType:(unsigned char)arg1 withSessionConfiguration:(id)arg2;
- (void)_lockedStartSessionIfNeededWithStartType:(unsigned char)arg1 deviceConfiguration:(id)arg2 performanceLogger:(id)arg3;
- (id)setupWorldTrackingConfiguration;
- (id)_lockedLoadSessionConfigurationForDevicePosition:(long long)arg1;
- (void)_startSessionIfNeededWithType:(unsigned char)arg1 deviceConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)previewLayerForDevice:(id)arg1;
- (id)previewLayerForPosition:(long long)arg1;
- (id)videoPreviewLayer;
- (_Bool)isDepthCameraSupported;
- (void)stopDepthDataOutputCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)startDepthDataOutputCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)warmupCameraSystemResources;
- (void)_finishImageCaptureForAction:(id)arg1 withVideoData:(id)arg2;
- (void)_lockedPerformImageCaptureWithAction:(id)arg1;
- (void)performImageCaptureWithAction:(id)arg1;
- (_Bool)_setMainCaptureDevice:(id)arg1;
- (_Bool)_setCaptureDevicePosition:(long long)arg1;
- (_Bool)_performCustomCameraAction:(id)arg1;
- (_Bool)_performCameraAction:(id)arg1;
- (void)performCameraAction:(id)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)performCameraAction:(id)arg1;
- (_Bool)supportsCaptureSessionPreset:(id)arg1 cameraPosition:(long long)arg2;
- (_Bool)isFocusModeSupported:(long long)arg1;
- (_Bool)isExposureModeSupported:(long long)arg1;
- (_Bool)isTorchModeSupported:(long long)arg1;
- (_Bool)currentDeviceSupportsCaptureSessionPreset:(id)arg1;
@property(readonly, nonatomic) _Bool isVideoHDREnabled;
@property(readonly, nonatomic) double maxZoomFactor;
- (void)fetchVideoFieldOfViewWithCompletion:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) struct OpaqueCMClock *captureSessionClock;
@property(readonly, nonatomic, getter=isAdjustingCameraSettings) _Bool adjustingCameraSettings;
@property(readonly, nonatomic) CDStruct_62455522 exposureInfo;
@property(readonly, nonatomic) id <FBCaptureOutput> photoCaptureOutput;
@property(readonly, nonatomic) AVCaptureDevice *currentSystemCaptureDevice;
@property(readonly, nonatomic) FBCaptureDevice *currentDevice;
- (_Bool)isZoomFactorSupported:(double)arg1;
- (double)supportedZoomFactorFromZoomFactor:(double)arg1;
- (_Bool)canUpdateCaptureDevicePosition:(long long)arg1;
- (void)setPhotoOutputListener:(id)arg1;
- (void)removeCapturePOIDetectorListener:(id)arg1;
- (void)addCapturePOIDetectorListener:(id)arg1;
- (void)removeCaptureManagerListener:(id)arg1;
- (void)addCaptureManagerListener:(id)arg1;
@property(readonly, nonatomic) CDStruct_15fe95f0 validExposureValues;
- (void)invalidate;
- (void)sessionDisconnectedPort:(id)arg1 context:(id)arg2;
- (void)sessionConnectedPort:(id)arg1 context:(id)arg2;
- (void)sessionWillStop:(id)arg1;
- (void)sessionWillStart:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *producerPorts;
@property(readonly, nonatomic) id <FBMPProducerPort> platformAlgorithmDataPort;
@property(readonly, nonatomic) id <FBMPProducerPort> worldTrackingFramePort;
@property(readonly, nonatomic) id <FBMPProducerPort> userInterfacePort;
@property(readonly, nonatomic) id <FBMPProducerPort> audioProducerPort;
@property(readonly, nonatomic) id <FBMPProducerPort> videoProducerPort;
@property(readonly, nonatomic) FBCameraAudioLevelListenerAnnouncer *cameraAudioLevelAnnouncer;
- (void)setLivePhotoEnabled:(_Bool)arg1;
- (void)setBracketedCaptureEnabled:(_Bool)arg1;
- (void)setPhotoCaptureConfiguration:(struct FBPhotoCaptureConfiguration *)arg1;
- (void)updatePreviewOrientation;
- (void)pauseCameraCaptureSession;
- (void)startCameraCaptureSessionWithType:(unsigned char)arg1 context:(id)arg2 deviceConfiguration:(id)arg3 initialCameraAction:(id)arg4 completionQueue:(id)arg5 completion:(CDUnknownBlockType)arg6;
@property(readonly, nonatomic) FBCameraCaptureFrameDropQueuedAnnouncer *frameDropAnnouncer;
@property(readonly, nonatomic) id <FBCameraAnalyticsPayloadProviding> analyticsPayloadProvider;
@property(readonly, nonatomic) id <FBCCAudioCaptureControlling> audioPipelineController;
@property(readonly, nonatomic) id <FBCaptureVideoSessionControlling> videoSessionController;
- (id)initWithCameraConfiguration:(const struct FBCameraConfiguration *)arg1 orientationTracker:(id)arg2 eventAnnouncer:(id)arg3 frameDropAnnouncer:(id)arg4 analyticsPayloadProvider:(id)arg5 framePerformanceTracker:(id)arg6 framePerformanceTrackerForWaterfall:(id)arg7 producerPorts:(id)arg8 captureDeviceStateController:(id)arg9 requestedCameraCapabilities:(unsigned long long)arg10 performanceLogger:(id)arg11 sessionQueue:(id)arg12 videoOutputQueue:(id)arg13 captureSessionAvailabilityChecker:(CDUnknownFunctionPointerType)arg14 toggledPositionGetter:(CDUnknownFunctionPointerType)arg15;
- (id)initWithCameraConfiguration:(const struct FBCameraConfiguration *)arg1 orientationTracker:(id)arg2 eventAnnouncer:(id)arg3 frameDropAnnouncer:(id)arg4 analyticsPayloadProvider:(id)arg5 framePerformanceTracker:(id)arg6 framePerformanceTrackerForWaterfall:(id)arg7 producerPorts:(id)arg8 captureDeviceStateController:(id)arg9 requestedCameraCapabilities:(unsigned long long)arg10 performanceLogger:(id)arg11;
- (id)initWithCameraConfiguration:(const struct FBCameraConfiguration *)arg1 orientationTracker:(id)arg2 eventAnnouncer:(id)arg3 frameDropAnnouncer:(id)arg4 analyticsPayloadProvider:(id)arg5 framePerformanceTracker:(id)arg6 framePerformanceTrackerForWaterfall:(id)arg7 requestedCameraCapabilities:(unsigned long long)arg8 performanceLogger:(id)arg9;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

