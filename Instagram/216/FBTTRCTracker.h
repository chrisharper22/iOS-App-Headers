//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "FBApplicationSendEventListener-Protocol.h"
#import "FBTTRCTrackerProtocol-Protocol.h"

@class FBProxyAnnouncer, NSArray, NSMutableArray, NSMutableDictionary, NSString;
@protocol FBTTRCTrackerListener;

@interface FBTTRCTracker : NSObject <FBApplicationSendEventListener, FBTTRCTrackerProtocol>
{
    NSMutableDictionary *_countSinceColdStart;
    NSMutableDictionary *_countSinceForeground;
    NSString *_currentNavigationModule;
    _Bool _hasValidTouchUpInterval;
    _Bool _hasValidTTST;
    CDUnknownBlockType _instanceKeyGenerator;
    CDUnknownBlockType _notificationTimestampGenerator;
    NSMutableDictionary *_interactionInfoDict;
    NSObject *_mostRecentTouchUpDylibSnapshot;
    long long _mostRecentTouchUpInterval;
    long long _mostRecentTTST;
    NSMutableArray *_nextStartAnnotationGenerators;
    NSString *_touchUpNavigationModule;
    _Bool _isDirectTabNavigation;
    CDUnknownBlockType _touchUpTimestampConverter;
    FBProxyAnnouncer<FBTTRCTrackerListener> *_announcer;
    NSArray *_activeMarkers;
}

+ (void)resetSharedTracker;
+ (id)sharedTracker;
- (void).cxx_destruct;
@property(retain) NSArray *activeMarkers; // @synthesize activeMarkers=_activeMarkers;
- (void)markSynchronizationCompletedForMarker:(int)arg1 instanceID:(id)arg2 identifier:(id)arg3;
- (void)expectSynchronizationForMarker:(int)arg1 instanceID:(id)arg2 identifier:(id)arg3;
- (_Bool)isSynchronizationSupportedForAction:(short)arg1 supportedActions:(unsigned long long)arg2;
- (void)checkSynchronizationForMarker:(int)arg1 instanceID:(id)arg2 action:(short)arg3 executeBlock:(CDUnknownBlockType)arg4;
- (id)generateActiveMarkers;
- (void)setNavigationModule:(id)arg1;
- (void)markTransitionStartAtTimestamp:(long long)arg1;
- (void)markTransitionStart;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (id)whichMarkersOnQPLMetadata;
- (_Bool)anyMarkerOnQPLMetadata;
- (_Bool)isMarkerOn:(int)arg1 instanceID:(id)arg2;
- (void)fetchQPLInstanceKeyForMarker:(int)arg1 instanceID:(id)arg2 andExecuteBlock:(CDUnknownBlockType)arg3;
- (void)addAnnotationsToNextMarkerStarted:(CDUnknownBlockType)arg1;
- (void)addFinalAnnotationGeneratorForMarker:(int)arg1 instanceID:(id)arg2 withValues:(CDUnknownBlockType)arg3;
- (void)markerAnnotate:(int)arg1 instanceID:(id)arg2 withValues:(CDUnknownBlockType)arg3;
- (void)markerAnnotate:(int)arg1 instanceID:(id)arg2 annotationKey:(id)arg3 numberArrayGenerator:(CDUnknownBlockType)arg4;
- (void)markerAnnotate:(int)arg1 instanceID:(id)arg2 annotationKey:(id)arg3 stringArrayGenerator:(CDUnknownBlockType)arg4;
- (void)markerAnnotate:(int)arg1 instanceID:(id)arg2 annotationKey:(id)arg3 numberGenerator:(CDUnknownBlockType)arg4;
- (void)markerAnnotate:(int)arg1 instanceID:(id)arg2 annotationKey:(id)arg3 stringGenerator:(CDUnknownBlockType)arg4;
- (void)endMarkerIfAllQueriesAndAdditionalStepsComplete:(int)arg1 instanceID:(id)arg2 interactionInfo:(id)arg3 endModule:(id)arg4;
- (void)userCompletedInteractionForMarker:(int)arg1 instanceID:(id)arg2 timestamp:(long long)arg3;
- (void)userCompletedInteractionForMarker:(int)arg1 instanceID:(id)arg2;
- (void)interactionDroppedForMarker:(int)arg1 instanceID:(id)arg2;
- (void)interactionFailedForMarker:(int)arg1 instanceID:(id)arg2 reason:(id)arg3;
- (void)surfaceLeftForMarker:(int)arg1 instanceID:(id)arg2 timestamp:(long long)arg3 reason:(id)arg4;
- (void)surfaceLeftForMarker:(int)arg1 instanceID:(id)arg2 timestamp:(long long)arg3;
- (void)surfaceLeftForMarker:(int)arg1 instanceID:(id)arg2 reason:(id)arg3;
- (void)surfaceLeftForMarker:(int)arg1 instanceID:(id)arg2;
- (void)markAllContentDisplayedForMarker:(int)arg1 instanceID:(id)arg2 identifier:(id)arg3 meaningfullyDifferentThanCache:(_Bool)arg4 timestamp:(long long)arg5;
- (void)stepCompleteForMarker:(int)arg1 instanceID:(id)arg2 identifier:(id)arg3 timestamp:(long long)arg4;
- (void)stepCompleteForMarker:(int)arg1 instanceID:(id)arg2 identifier:(id)arg3;
- (void)networkContentDisplayedForMarker:(int)arg1 instanceID:(id)arg2 identifier:(id)arg3 meaningfullyDifferentThanCache:(_Bool)arg4 timestamp:(long long)arg5;
- (void)networkContentDisplayedForMarker:(int)arg1 instanceID:(id)arg2 identifier:(id)arg3 meaningfullyDifferentThanCache:(_Bool)arg4;
- (void)cachedContentDisplayedForMarker:(int)arg1 instanceID:(id)arg2 identifier:(id)arg3 cacheAge:(double)arg4 timestamp:(long long)arg5 isFinal:(_Bool)arg6;
- (void)cachedContentDisplayedForMarker:(int)arg1 instanceID:(id)arg2 identifier:(id)arg3 cacheAge:(double)arg4 timestamp:(long long)arg5;
- (void)cachedContentDisplayedForMarker:(int)arg1 instanceID:(id)arg2 identifier:(id)arg3 cacheAge:(double)arg4 isFinal:(_Bool)arg5;
- (void)cachedContentDisplayedForMarker:(int)arg1 instanceID:(id)arg2 identifier:(id)arg3 cacheAge:(double)arg4;
- (void)markQueryOrStepNotNeededForMarker:(int)arg1 instanceID:(id)arg2 identifier:(id)arg3;
- (void)addQueryForMarker:(int)arg1 instanceID:(id)arg2 identifier:(id)arg3 type:(BOOL)arg4 initialState:(BOOL)arg5 additionalEntities:(id)arg6;
- (void)expectStepForMarker:(int)arg1 instanceID:(id)arg2 identifier:(id)arg3;
- (void)setFreshCacheTTL:(double)arg1 forMarker:(int)arg2 instanceID:(id)arg3 queryIdentifier:(id)arg4;
- (void)expectQueryWithCacheForMarker:(int)arg1 instanceID:(id)arg2 identifier:(id)arg3 cacheRecencyThreshold:(double)arg4;
- (void)expectNetworkOnlyQueryForMarker:(int)arg1 instanceID:(id)arg2 identifier:(id)arg3;
- (void)performSurfaceLeftComputationForMarkerID:(int)arg1 instanceID:(id)arg2 timestamp:(long long)arg3 interactionInfo:(id)arg4 cancelAction:(short)arg5 endModule:(id)arg6 endReason:(id)arg7;
- (_Bool)transitionToQueryState:(BOOL)arg1 forMarker:(int)arg2 instanceID:(id)arg3 queryIdentifier:(id)arg4 interactionInfo:(id)arg5 queryInfo:(id)arg6;
- (_Bool)transitionToProcessingQueriesIfNeeded:(int)arg1 instanceID:(id)arg2 queryIdentifer:(id)arg3 interactionInfo:(id)arg4;
- (_Bool)transitionToInteractionState:(BOOL)arg1 forMarker:(int)arg2 instanceID:(id)arg3 queryIdentifier:(id)arg4 interactionInfo:(id)arg5;
- (void)endMarker:(int)arg1 instanceID:(id)arg2 action:(short)arg3 interactionInfo:(id)arg4 timestamp:(long long)arg5 endModule:(id)arg6 endReason:(id)arg7 completion:(CDUnknownBlockType)arg8;
- (void)removeInteractionInfoForMarker:(int)arg1 instanceID:(id)arg2;
- (void)dispatchForMarker:(int)arg1 instanceID:(id)arg2 withBarrier:(_Bool)arg3 andExecute:(CDUnknownBlockType)arg4;
- (id)interactionInfoForMarker:(int)arg1 instanceID:(id)arg2;
- (id)addInteractionInfoForMarker:(int)arg1 instanceID:(id)arg2 startInterval:(long long)arg3 cancelOnBackground:(_Bool)arg4;
- (void)invalidateTouchUpInterval;
- (void)_startInteractionForMarker:(int)arg1 instanceID:(id)arg2 joinID:(id)arg3 timestamp:(long long)arg4 synchronizationContext:(struct FBTTRCSynchronizationContext)arg5 cancelOnBackground:(_Bool)arg6;
- (void)startInteractionForMarker:(int)arg1 instanceID:(id)arg2 joinID:(id)arg3 timestamp:(long long)arg4 synchronizationContext:(struct FBTTRCSynchronizationContext)arg5;
- (void)startInteractionForMarker:(int)arg1 instanceID:(id)arg2 timestamp:(long long)arg3;
- (void)startInteractionForMarker:(int)arg1 instanceID:(id)arg2 cancelOnBackground:(_Bool)arg3;
- (void)startInteractionForMarker:(int)arg1 instanceID:(id)arg2;
- (void)didSendEvent:(id)arg1;
- (void)willSendEvent:(id)arg1;
- (void)waitForQueueForUnitTests;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationWillEnterForeground;
- (id)initWithInstanceKeyGenerator:(CDUnknownBlockType)arg1 touchUpTimestampConverter:(CDUnknownBlockType)arg2 notificationTimestampGenerator:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

