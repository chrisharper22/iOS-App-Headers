//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <FBSharedFramework/AVPlayerItemOutputPullDelegate-Protocol.h>

@class AVPlayer, AVPlayerItem, AVPlayerItemVideoOutput, CADisplayLink, NSString;
@protocol IGGLVVideoPlayerDelegate;

@interface IGGLVVideoPlayer : NSObject <AVPlayerItemOutputPullDelegate>
{
    CADisplayLink *_displayLink;
    AVPlayer *_player;
    AVPlayerItemVideoOutput *_videoOutput;
    AVPlayerItem *_playerItem;
    _Bool _receivedAudioRouteUnavailableNotification;
    _Bool _isSeeking;
    double _seekTime;
    CDUnknownBlockType _seekCompletionHandler;
    _Bool _isLoadingPlayerItem;
    _Bool _repeats;
    _Bool _stalled;
    _Bool _continuesPlaybackWhenAudioRouteDisconnects;
    id <IGGLVVideoPlayerDelegate> _delegate;
    double _volumeRampDuration;
    double _startTime;
    double _endTime;
    double _effectivePlaybackRate;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool continuesPlaybackWhenAudioRouteDisconnects; // @synthesize continuesPlaybackWhenAudioRouteDisconnects=_continuesPlaybackWhenAudioRouteDisconnects;
@property(readonly, nonatomic) double effectivePlaybackRate; // @synthesize effectivePlaybackRate=_effectivePlaybackRate;
@property(nonatomic, getter=isStalled) _Bool stalled; // @synthesize stalled=_stalled;
@property(nonatomic) double endTime; // @synthesize endTime=_endTime;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(nonatomic) double volumeRampDuration; // @synthesize volumeRampDuration=_volumeRampDuration;
@property(nonatomic) _Bool repeats; // @synthesize repeats=_repeats;
@property(readonly, nonatomic) _Bool isLoadingPlayerItem; // @synthesize isLoadingPlayerItem=_isLoadingPlayerItem;
@property(retain, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
@property(nonatomic) __weak id <IGGLVVideoPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double volume;
@property(nonatomic, getter=isMuted) _Bool muted;
- (void)outputSequenceWasFlushed:(id)arg1;
- (void)outputMediaDataWillChange:(id)arg1;
- (void)_handleAudioSessionRouteChange:(id)arg1;
- (void)_handleRateChangedForPlayer:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_removeObserversFromPlayerItem:(id)arg1;
- (void)_addObserversToPlayerItem:(id)arg1;
- (void)_handlePlaybackStalled:(id)arg1;
- (void)_playbackLikelyToKeepUpForPlayerItem:(id)arg1;
- (void)_playbackStalledForPlayerItem:(id)arg1;
- (void)_handleDidPlayToEndTime:(id)arg1;
- (void)removeTimeObserver:(id)arg1;
- (id)addPeriodicTimeObserverForInterval:(double)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)addBoundaryTimeObserverForTime:(double)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)seekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)seekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;
- (void)seekToTime:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)seekToTime:(double)arg1;
- (void)setPlaybackRate:(double)arg1 time:(double)arg2 atHostTime:(double)arg3;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) double currentTime;
- (void)_effectivePlaybackRateDidChange:(id)arg1;
@property(nonatomic) double playbackRate;
- (void)pause;
- (void)play;
@property(readonly, nonatomic) _Bool isPlaying;
- (void)_loadPixelBufferForItemTime:(CDStruct_1b6d18a9)arg1;
- (void)_handleDisplayLink:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

