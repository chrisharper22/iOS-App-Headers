//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import <FBSharedFramework/IGGestureHandler-Protocol.h>
#import <FBSharedFramework/IGPlaybackTimelineDelegate-Protocol.h>
#import <FBSharedFramework/IGSwipableFilterMediaViewDelegate-Protocol.h>

@class IGAnimationCurve, IGBackgroundGradient, IGMediaCompositionState, IGPassthroughView, IGPlaybackTimeline, IGSwipableFilterMediaView, NSArray, NSMutableDictionary, NSString, UILabel;
@protocol IGMediaAsset, IGMediaCompositionViewDelegate, IGMediaCompositionViewDrawingLayer, IGMediaCompositionViewStickerLayer, IGMediaContainerAnimator, IGMediaEffect;

@interface IGMediaCompositionView : UIView <IGGestureHandler, IGSwipableFilterMediaViewDelegate, IGPlaybackTimelineDelegate>
{
    IGMediaCompositionState *_cachedMediaCompositionState;
    IGPlaybackTimeline *_masterPlaybackTimeline;
    _Bool _muted;
    _Bool _videoWasPlayingWhenEnteringBackground;
    IGPassthroughView *_compositionWrapperView;
    IGPassthroughView *_mediaAndDrawingWrapperView;
    IGSwipableFilterMediaView *_swipableFilterMediaView;
    id <IGMediaCompositionViewDrawingLayer> _drawingLayer;
    id <IGMediaCompositionViewStickerLayer> _stickerLayer;
    id <IGMediaCompositionViewStickerLayer> _burnedInStickerLayer;
    id <IGMediaContainerAnimator> _mediaContainerAnimator;
    NSMutableDictionary *_playerForAudioTrackWithIdentifier;
    double _requestedPlaybackTime;
    _Bool _stickerMediaSynchronizationDisabled;
    _Bool _loading;
    _Bool _mediaSupportsUserInteraction;
    double _stickerPlaybackTime;
    id <IGMediaCompositionViewDelegate> _delegate;
    NSArray *_availableBackgroundGradients;
    long long _currentBackgroundGradientIndex;
    IGBackgroundGradient *_customGradient;
    double _requestedPlaybackRate;
    UILabel *_centerScreenInstructionsLabel;
    double _overallCompositionVolume;
    double _assetVolume;
    struct IGTimeRange _playableRange;
}

- (void).cxx_destruct;
@property(retain, nonatomic) id <IGMediaContainerAnimator> mediaContainerAnimator; // @synthesize mediaContainerAnimator=_mediaContainerAnimator;
@property(nonatomic) double assetVolume; // @synthesize assetVolume=_assetVolume;
@property(nonatomic) double overallCompositionVolume; // @synthesize overallCompositionVolume=_overallCompositionVolume;
@property(retain, nonatomic) UILabel *centerScreenInstructionsLabel; // @synthesize centerScreenInstructionsLabel=_centerScreenInstructionsLabel;
@property(readonly, nonatomic) double requestedPlaybackRate; // @synthesize requestedPlaybackRate=_requestedPlaybackRate;
@property(retain, nonatomic) IGBackgroundGradient *customGradient; // @synthesize customGradient=_customGradient;
@property(nonatomic) long long currentBackgroundGradientIndex; // @synthesize currentBackgroundGradientIndex=_currentBackgroundGradientIndex;
@property(retain, nonatomic) NSArray *availableBackgroundGradients; // @synthesize availableBackgroundGradients=_availableBackgroundGradients;
@property(readonly, nonatomic) _Bool mediaSupportsUserInteraction; // @synthesize mediaSupportsUserInteraction=_mediaSupportsUserInteraction;
@property(nonatomic, getter=isLoading) _Bool loading; // @synthesize loading=_loading;
@property(nonatomic) __weak id <IGMediaCompositionViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool stickerMediaSynchronizationDisabled; // @synthesize stickerMediaSynchronizationDisabled=_stickerMediaSynchronizationDisabled;
@property(nonatomic) _Bool useSharedCIContext;
- (_Bool)canRespondToGesture:(id)arg1;
- (void)_applicationDidEnterForeground:(id)arg1;
- (void)_applicationWillResignActive:(id)arg1;
@property(readonly, nonatomic) _Bool colorFiltersLimitedToMediaRegion;
@property(retain, nonatomic) NSArray *colorFilters;
- (void)redrawMediaScene;
@property(nonatomic) struct IGTimeRange playableRange; // @synthesize playableRange=_playableRange;
- (id)generateFilteredMediaDisplayImage;
@property(nonatomic) double stickerPlaybackTime; // @synthesize stickerPlaybackTime=_stickerPlaybackTime;
@property(copy, nonatomic) NSArray *assetAudioEffects;
- (void)setAudioEffects:(id)arg1 forAudioTrackWithIdentifier:(id)arg2;
- (id)audioEffectsForAudioTrackWithIdentifier:(id)arg1;
@property(nonatomic, getter=isMainAssetMuted) _Bool mainAssetMuted;
@property(nonatomic, getter=isMuted) _Bool muted;
@property(retain, nonatomic) IGAnimationCurve *assetVolumeCurve;
- (void)setStartTime:(double)arg1 forAudioTrackWithIdentifier:(id)arg2;
- (_Bool)isAudioTrackMuted:(id)arg1;
- (void)setMuted:(_Bool)arg1 forAudioTrackWithIdentifier:(id)arg2;
- (void)removeVolumeCurveForAudioTrackWithIdentifier:(id)arg1;
- (id)volumeCurveForAudioTrackWithIdentifier:(id)arg1;
- (void)setVolumeCurve:(id)arg1 forAudioTrackWithIdentifier:(id)arg2;
- (double)volumeForAudioTrackWithIdentifier:(id)arg1;
- (void)setVolume:(double)arg1 forAudioTrackWithIdentifier:(id)arg2;
- (void)removeAudioTrackWithIdentifier:(id)arg1;
- (id)audioTrackWithIdentifier:(id)arg1;
- (id)addAudioTrack:(id)arg1 withIdentifier:(id)arg2;
- (id)addAudioTrack:(id)arg1;
- (void)animateMessageOnScreen:(id)arg1;
- (void)swipableFilterMediaView:(id)arg1 effectivePlaybackRateDidChange:(double)arg2;
- (void)swipableFilterMediaView:(id)arg1 didUpdateCurrentTime:(double)arg2;
- (_Bool)swipableFilterMediaView:(id)arg1 shouldBeginResizingAndPositioningMediaWithGesture:(id)arg2;
- (void)swipableFilterMediaViewDidUpdateMediaSizeAndPosition:(id)arg1;
- (void)swipableFilterMediaViewDidFinishResizingAndPositioningMedia:(id)arg1;
- (void)swipableFilterMediaViewWillBeginResizingAndPositioningMedia:(id)arg1;
- (void)swipableFilterMediaView:(id)arg1 didSettleOnColorFilter:(id)arg2;
- (void)swipableFilterMediaView:(id)arg1 willSettleOnNewColorFilter:(id)arg2;
- (_Bool)swipableFilterMediaViewShouldBeginGesture:(id)arg1 isColorFilterSwipe:(_Bool)arg2;
- (void)swipableFilterMediaView:(id)arg1 didUpdateLoadingState:(_Bool)arg2;
@property(readonly, nonatomic) UIView *burnedInStickerContainerView;
@property(readonly, nonatomic) UIView *stickerContainerView;
@property(readonly, nonatomic) UIView *drawingCanvasView;
@property(readonly, nonatomic) IGBackgroundGradient *currentBackgroundGradient;
@property(nonatomic) double mediaScale;
@property(readonly, nonatomic) struct IGRegion mediaRegion;
@property(readonly, nonatomic) struct __CVBuffer *unfilteredDisplayTexture;
@property(readonly, nonatomic) struct __CVBuffer *displayTexture;
@property(retain, nonatomic) NSArray *postProcessingEffects;
@property(retain, nonatomic) id <IGMediaEffect> mediaEffect;
- (void)swipableFilterMediaView:(id)arg1 didUpdateMediaDisplayTexture:(struct __CVBuffer *)arg2 withPreferredTransform:(struct CGAffineTransform)arg3;
@property(readonly, nonatomic) struct __CVBuffer *mediaDisplayTexture;
@property(readonly, nonatomic) struct __CVBuffer *unfilteredMediaDisplayTexture;
- (void)_setupDidPlayToEndObserver;
- (void)_syncPlayableMediaWithMasterTimeline;
- (void)playbackTimeline:(id)arg1 didUpdateCurrentTime:(double)arg2;
- (void)playbackTimelineDidUpdatePlaybackState:(id)arg1;
- (void)setPlaybackRate:(double)arg1 time:(double)arg2 atHostTime:(double)arg3;
- (void)pause;
- (void)play;
- (void)setCurrentPlaybackTime:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(nonatomic) double currentPlaybackTime;
@property(readonly, nonatomic) double playbackDuration;
@property(readonly, nonatomic) double currentMediaTime;
@property(readonly, nonatomic) double currentPlaybackRate;
@property(nonatomic) struct CGPoint swipeableFiltersMediaScrollViewContentOffset;
@property(retain, nonatomic) id <IGMediaAsset> asset;
@property(readonly, nonatomic) struct CGSize compositionSize;
@property(retain, nonatomic) IGMediaCompositionState *mediaCompositionState;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithColorFilters:(id)arg1 drawingLayer:(id)arg2 stickerLayer:(id)arg3 burnedInStickerLayer:(id)arg4 igglkSession:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

