//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class EAGLContext, IGGLKFunction, IGGLKProgram, IGGLKQueue, IGGLKSession, MTLVertexDescriptor, NSArray, NSMutableDictionary, NSMutableOrderedSet, NSMutableSet;
@protocol MTLFunction;

@interface IGGLKRenderer : NSObject
{
    _Bool _isInitialized;
    IGGLKSession *_session;
    IGGLKQueue *_renderQueue;
    unsigned int _vertexArrayObject;
    unsigned int _elementArrayObject;
    unsigned long long _numVertices;
    NSMutableDictionary *_attributeToInfoDict;
    NSMutableSet *_dirtyAttributes;
    NSMutableDictionary *_uniformToValueDict;
    NSMutableOrderedSet *_textureUniforms;
    _Bool _elementArrayNeedsUpdate;
    _Bool _elementArrayNeedsNewBuffer;
    int _numElements;
    unsigned short *_elements;
    EAGLContext *_drawContext;
    id <MTLFunction> _mtlVertexFunction;
    id <MTLFunction> _mtlFragmentFunction;
    NSArray *_triangles;
    _Bool _attributesNeedUpdate;
    MTLVertexDescriptor *_vertexDescriptor;
    struct __CFDictionary *_vertexAttributeData;
    struct __CFDictionary *_vertexUniforms;
    struct __CFDictionary *_fragmentUniforms;
    struct __CFDictionary *_vertexTextures;
    struct __CFDictionary *_fragmentTextures;
    struct map<std::string, std::shared_ptr<igl::ITexture>, std::less<std::string>, std::allocator<std::pair<const std::string, std::shared_ptr<igl::ITexture>>>> _vertexTexturesIGL;
    struct map<std::string, std::shared_ptr<igl::ITexture>, std::less<std::string>, std::allocator<std::pair<const std::string, std::shared_ptr<igl::ITexture>>>> _fragmentTexturesIGL;
    struct shared_ptr<igl::ISamplerState> _samplerStateIGL;
    shared_ptr_9261a1f4 _vertexInputStateIGL;
    struct VertexInputStateDesc _vertexInputStateDescriptorIGL;
    struct BufferDesc _vertexBufferDescriptorIGL;
    shared_ptr_3ca5f01e _vertexBufferIGL;
    shared_ptr_3ca5f01e _indexBufferIGL;
    struct map<NSString *, UniformBufferValue, std::less<NSString *>, std::allocator<std::pair<NSString *const, UniformBufferValue>>> _vertexUniformToBufferDictIGL;
    struct map<NSString *, UniformBufferValue, std::less<NSString *>, std::allocator<std::pair<NSString *const, UniformBufferValue>>> _fragmentUniformToBufferDictIGL;
    struct shared_ptr<igl::IShaderModule> _vertexModuleIGL;
    struct shared_ptr<igl::IShaderModule> _fragmentModuleIGL;
    unsigned short *_indexData;
    unsigned long long _indexCount;
    _Bool _encoderIGLNeedsReset;
    IGGLKProgram *_program;
    IGGLKFunction *_vertexFunction;
    IGGLKFunction *_fragmentFunction;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) IGGLKFunction *fragmentFunction; // @synthesize fragmentFunction=_fragmentFunction;
@property(readonly, nonatomic) IGGLKFunction *vertexFunction; // @synthesize vertexFunction=_vertexFunction;
@property(retain, nonatomic) IGGLKProgram *program; // @synthesize program=_program;
- (void)_deactivateTextureUniforms;
- (void)_activateTextureUniforms;
- (void)_updateElementArray;
- (void)_updateElementArrayIfNeeded;
- (void)_updateUniform:(id)arg1;
- (void)_updateUniformsIfNeeded;
- (void)_updateAttribute:(id)arg1;
- (void)_updateAttributesIfNeeded;
- (void)_initialize;
- (void)_openGLDrawInContext:(id)arg1;
- (void)_openGLSetTriangles:(id)arg1;
- (void)drawInContext:(id)arg1;
- (void)_bindUniforms:(id)arg1 renderCommandEncoder:(void *)arg2 pipelineState:(void *)arg3 isVertex:(_Bool)arg4;
- (void)_setupShaderModule:(id)arg1;
- (void)_setValueIGL:(id)arg1 forUniform:(id)arg2 isVertexUniform:(_Bool)arg3;
- (void)_setFragmentUniforms:(void *)arg1;
- (void)_setVertexUniforms:(void *)arg1;
- (void)_setValue:(id)arg1 forUniform:(id)arg2;
- (void)setTexture:(id)arg1 forFragmentUniform:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)setValue:(id)arg1 forFragmentUniform:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)setTexture:(id)arg1 forVertexUniform:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)setValue:(id)arg1 forVertexUniform:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)setTriangles:(id)arg1;
- (void)setEncoderIGLNeedsReset:(_Bool)arg1;
- (void)dealloc;
- (id)initWithVertexFunction:(id)arg1 fragmentFunction:(id)arg2 session:(id)arg3;

@end

