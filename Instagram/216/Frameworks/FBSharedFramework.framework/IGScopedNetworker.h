//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <FBSharedFramework/IGAPIClient-Protocol.h>
#import <FBSharedFramework/IGQPLNetworkingActiveJoinerListener-Protocol.h>

@class IGAnalyticsSessionIdProvider, IGRoutingHeaderHelper, IGSSOTokenWriter, NSMutableDictionary, NSString, NSUserDefaults;
@protocol FBKeyValueDataStore, IGAuthHeaderManaging, IGDeviceHeaderManaging, IGNetworking, IGQPLNetworkingActiveJoinerAnnouncer, IGScheduler><IGBarrierScheduler, IGSessionChainProvider, IGSystemMessageListener, OS_dispatch_queue;

@interface IGScopedNetworker : NSObject <IGQPLNetworkingActiveJoinerListener, IGAPIClient>
{
    NSString *_userPK;
    id <IGNetworking> _networker;
    id <IGAuthHeaderManaging> _authHeaderManager;
    id <IGDeviceHeaderManaging> _deviceHeaderManager;
    IGSSOTokenWriter *_ssoTokenWriter;
    id <IGScheduler><IGBarrierScheduler> _queueScheduler;
    NSObject<OS_dispatch_queue> *_qplJoiningQueue;
    IGAnalyticsSessionIdProvider *_pigeonSessionIdProvider;
    _Bool _loggingStoreEnabled;
    _Bool _loggingSaltEnabled;
    NSUserDefaults *_userDefaults;
    id <FBKeyValueDataStore> _sessionUserDefaults;
    IGRoutingHeaderHelper *_routingHeaderHelper;
    id <IGQPLNetworkingActiveJoinerAnnouncer> _networkingActiveJoinerAnnouncer;
    NSMutableDictionary *_joinInfoByUrlType;
    id <IGSessionChainProvider> _sessionChainProvider;
    id <IGSystemMessageListener> _systemMessageDelegate;
}

- (void).cxx_destruct;
@property(nonatomic) __weak id <IGSystemMessageListener> systemMessageDelegate; // @synthesize systemMessageDelegate=_systemMessageDelegate;
- (void)unjoinQPLInfo:(id)arg1 urlType:(unsigned long long)arg2;
- (void)joinQPLInfo:(id)arg1 urlType:(unsigned long long)arg2;
- (id)currentUserPK;
- (id)authHeaderForSSOToken;
- (void)_savePasswordEncryptionKeyInfoIfPresentInResponse:(id)arg1 request:(id)arg2;
- (void)_saveRoutingHeadersIfPresentInResponse:(id)arg1;
- (void)_saveIGAPIHeadersIfPresentInResponse:(id)arg1 request:(id)arg2;
- (void)_addRoutingHeadersIfNeeded:(id)arg1;
- (void)_addSaltHeadersIfNeeded:(id)arg1;
- (void)_addIGAPIHeadersIfNeeded:(id)arg1;
- (void)_handleSystemMessages:(id)arg1;
- (void)_handleAPIRequestFailure:(id)arg1 withFailureHandler:(CDUnknownBlockType)arg2 response:(id)arg3 parsedDictionary:(id)arg4 error:(id)arg5 completionQueue:(id)arg6;
- (void)_handleFailedResponseWithError:(id)arg1 request:(id)arg2 failureHandler:(CDUnknownBlockType)arg3 completionQueue:(id)arg4;
- (void)_handleAPIRequestSuccess:(CDUnknownBlockType)arg1 withHTTPResponse:(id)arg2 parsedObject:(id)arg3 completionQueue:(id)arg4;
- (void)_handleSuccessfulResponse:(id)arg1 request:(id)arg2 parsingHandler:(CDUnknownBlockType)arg3 successHandler:(CDUnknownBlockType)arg4 failureHandler:(CDUnknownBlockType)arg5 completionQueue:(id)arg6;
- (void)_handleSuccessfulStreamingResponse:(id)arg1 request:(id)arg2 summary:(id)arg3 successHandler:(CDUnknownBlockType)arg4 completionQueue:(id)arg5;
- (void)_handleAPIRequestFoundCache:(id)arg1 withCacheHandler:(CDUnknownBlockType)arg2 withParsingHandler:(CDUnknownBlockType)arg3;
- (void)_handleBytesReceived:(const char *)arg1 length:(unsigned long long)arg2 totalBytesExpected:(long long)arg3 withHandler:(CDUnknownBlockType)arg4 completionQueue:(id)arg5;
- (id)_startStreamingAPIRequest:(id)arg1 policy:(id)arg2 completionQueue:(id)arg3 cacheHandler:(CDUnknownBlockType)arg4 bytesSentHandler:(CDUnknownBlockType)arg5 firstByteFlushedHandler:(CDUnknownBlockType)arg6 lastByteAckedHandler:(CDUnknownBlockType)arg7 bytesReceivedHandler:(CDUnknownBlockType)arg8 parsingHandler:(CDUnknownBlockType)arg9 successHandler:(CDUnknownBlockType)arg10 failureHandler:(CDUnknownBlockType)arg11;
- (id)_startAPIRequest:(id)arg1 policy:(id)arg2 completionQueue:(id)arg3 cacheHandler:(CDUnknownBlockType)arg4 bytesSentHandler:(CDUnknownBlockType)arg5 firstByteFlushedHandler:(CDUnknownBlockType)arg6 lastByteAckedHandler:(CDUnknownBlockType)arg7 parsingHandler:(CDUnknownBlockType)arg8 successHandler:(CDUnknownBlockType)arg9 failureHandler:(CDUnknownBlockType)arg10;
- (void)_prepareRequest:(id)arg1 policy:(id)arg2 checkedWithBlock:(CDUnknownBlockType)arg3;
- (id)startRequest:(id)arg1 policy:(id)arg2 callbackQueue:(id)arg3 retryHandler:(CDUnknownBlockType)arg4 cachedResponseHandler:(CDUnknownBlockType)arg5 startHandler:(CDUnknownBlockType)arg6 bytesSentHandler:(CDUnknownBlockType)arg7 firstByteFlushedHandler:(CDUnknownBlockType)arg8 lastByteAckedHandler:(CDUnknownBlockType)arg9 responseReceivedHandler:(CDUnknownBlockType)arg10 bytesReceivedHandler:(CDUnknownBlockType)arg11 successHandler:(CDUnknownBlockType)arg12 failureHandler:(CDUnknownBlockType)arg13;
- (void)cancelAllRequestsWithCancellationIdentifier:(id)arg1;
- (void)getOffProcessTasksForHandlerKey:(id)arg1 userPk:(id)arg2 callbackQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)startOffProcessRequest:(id)arg1 policy:(id)arg2 requestInfo:(id)arg3;
- (id)startRequestWithoutCallbackQueue:(id)arg1 policy:(id)arg2 callbacks:(id)arg3;
- (CDUnknownBlockType)_failureHandlerSaveHeadersWithRequest:(id)arg1 failureHandler:(CDUnknownBlockType)arg2;
- (CDUnknownBlockType)_successHandlerSaveHeadersWithRequest:(id)arg1 successHandler:(CDUnknownBlockType)arg2;
- (id)_startRequest:(id)arg1 policy:(id)arg2 completionQueue:(id)arg3 cacheHandler:(CDUnknownBlockType)arg4 bytesSentHandler:(CDUnknownBlockType)arg5 firstByteFlushedHandler:(CDUnknownBlockType)arg6 lastByteAckedHandler:(CDUnknownBlockType)arg7 bytesReceivedHandler:(CDUnknownBlockType)arg8 successHandler:(CDUnknownBlockType)arg9 failureHandler:(CDUnknownBlockType)arg10;
- (id)startRequest:(id)arg1 policy:(id)arg2 completionQueue:(id)arg3 cacheHandler:(CDUnknownBlockType)arg4 bytesSentHandler:(CDUnknownBlockType)arg5 firstByteFlushedHandler:(CDUnknownBlockType)arg6 lastByteAckedHandler:(CDUnknownBlockType)arg7 bytesReceivedHandler:(CDUnknownBlockType)arg8 successHandler:(CDUnknownBlockType)arg9 failureHandler:(CDUnknownBlockType)arg10;
- (id)startRequest:(id)arg1 policy:(id)arg2 completionQueue:(id)arg3 cacheHandler:(CDUnknownBlockType)arg4 successHandler:(CDUnknownBlockType)arg5 failureHandler:(CDUnknownBlockType)arg6;
- (id)APIHeadersAsCookies;
- (id)routingHeaders;
- (id)startStreamingAPIRequest:(id)arg1 policy:(id)arg2 completionQueue:(id)arg3 cacheHandler:(CDUnknownBlockType)arg4 bytesSentHandler:(CDUnknownBlockType)arg5 firstByteFlushedHandler:(CDUnknownBlockType)arg6 lastByteAckedHandler:(CDUnknownBlockType)arg7 bytesReceivedHandler:(CDUnknownBlockType)arg8 parsingHandler:(CDUnknownBlockType)arg9 successHandler:(CDUnknownBlockType)arg10 failureHandler:(CDUnknownBlockType)arg11;
- (id)startAPIRequest:(id)arg1 policy:(id)arg2 completionQueue:(id)arg3 cacheHandler:(CDUnknownBlockType)arg4 bytesSentHandler:(CDUnknownBlockType)arg5 firstByteFlushedHandler:(CDUnknownBlockType)arg6 lastByteAckedHandler:(CDUnknownBlockType)arg7 parsingHandler:(CDUnknownBlockType)arg8 successHandler:(CDUnknownBlockType)arg9 failureHandler:(CDUnknownBlockType)arg10;
- (id)startAPIRequest:(id)arg1 policy:(id)arg2 completionQueue:(id)arg3 cacheHandler:(CDUnknownBlockType)arg4 parsingHandler:(CDUnknownBlockType)arg5 successHandler:(CDUnknownBlockType)arg6 failureHandler:(CDUnknownBlockType)arg7;
- (id)startAPIRequest:(id)arg1 policy:(id)arg2 successHandler:(CDUnknownBlockType)arg3 failureHandler:(CDUnknownBlockType)arg4;
- (void)invalidate;
- (id)initWithUserPK:(id)arg1 networker:(id)arg2 authHeaderManager:(id)arg3 deviceHeaderManager:(id)arg4 ssoTokenWriter:(id)arg5 pigeonSessionIdProvider:(id)arg6 loggingStoreEnabled:(_Bool)arg7 loggingSaltEnabled:(_Bool)arg8 userDefaults:(id)arg9 sessionUserDefaults:(id)arg10 routingHeaderHelper:(id)arg11 networkingActiveJoinerAnnouncer:(id)arg12 queueScheduler:(id)arg13 sessionChainProvider:(id)arg14;
- (id)initWithUserPK:(id)arg1 networker:(id)arg2 authHeaderManager:(id)arg3 deviceHeaderManager:(id)arg4 ssoTokenWriter:(id)arg5 pigeonSessionIdProvider:(id)arg6 loggingStoreEnabled:(_Bool)arg7 loggingSaltEnabled:(_Bool)arg8 sessionUserDefaults:(id)arg9 networkingActiveJoinerAnnouncer:(id)arg10 queueScheduler:(id)arg11 sessionChainProvider:(id)arg12;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

