//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <FBSharedFramework/FBCCPlaybackPixelBufferProviding-Protocol.h>
#import <FBSharedFramework/FBCaptureMode-Protocol.h>
#import <FBSharedFramework/OCMCaptureModeOwning-Protocol.h>
#import <FBSharedFramework/OCMMediaManagerProtocol-Protocol.h>

@class FBCaptureModeMountingDescriptor, FBMPDataCallbackOutput, NSArray, NSString;
@protocol FBCCPlaybackControllerDelegate, FBMPInput, OCMComponentFilterProtocol, OCMComponentManagingContext, OCMMediaOutputHandler, OCMMediaPlaybackController, OCMMediaProvider;

@interface OCMMediaManager : NSObject <FBCaptureMode, FBCCPlaybackPixelBufferProviding, OCMMediaManagerProtocol, OCMCaptureModeOwning>
{
    id <OCMComponentManagingContext> _context;
    id <FBMPInput> _videoDataInput;
    FBMPDataCallbackOutput *_videoDataOutput;
    id <OCMComponentFilterProtocol> _mediaFilterComponent;
    NSArray *_filterDescriptors;
    _Bool _playing;
    _Bool _isReadyToPlay;
    id <OCMMediaProvider> _mediaProvider;
    id <OCMMediaPlaybackController> _mediaPlaybackController;
    id <OCMMediaOutputHandler> _outputHandler;
    FBCaptureModeMountingDescriptor *_mountingDescriptor;
    id <FBCCPlaybackControllerDelegate> _delegate;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool isReadyToPlay; // @synthesize isReadyToPlay=_isReadyToPlay;
@property(readonly, nonatomic, getter=isPlaying) _Bool playing; // @synthesize playing=_playing;
@property(nonatomic) __weak id <FBCCPlaybackControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <OCMMediaOutputHandler> outputHandler; // @synthesize outputHandler=_outputHandler;
@property(nonatomic) __weak id <OCMMediaPlaybackController> mediaPlaybackController; // @synthesize mediaPlaybackController=_mediaPlaybackController;
@property(nonatomic) __weak id <OCMMediaProvider> mediaProvider; // @synthesize mediaProvider=_mediaProvider;
@property(nonatomic) _Bool repeats;
@property(readonly, nonatomic) CDStruct_1b6d18a9 duration;
@property(readonly, nonatomic) CDStruct_1b6d18a9 currentTime;
@property(readonly, nonatomic) double progress;
- (void)seekToPosition:(double)arg1;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1;
- (void)pause;
- (void)playInReverse;
- (void)playFromTime:(CDStruct_1b6d18a9)arg1;
- (void)playFromStart;
- (void)play;
@property(nonatomic) CDStruct_e83c9415 playableRange;
@property(nonatomic) float volume;
@property(nonatomic, getter=isMuted) _Bool muted;
@property(nonatomic) double playbackRate;
@property(readonly, nonatomic) double effectivePlaybackRate;
- (struct __CVBuffer *)copyPixelBufferForTime:(CDStruct_1b6d18a9)arg1 timeForDisplay:(CDStruct_183601bc *)arg2;
- (_Bool)hasNewPixelBufferForTime:(CDStruct_1b6d18a9)arg1;
- (CDStruct_1b6d18a9)providerTimeForHostTime:(double)arg1;
@property(readonly, nonatomic) _Bool isStatic;
@property(readonly, nonatomic) struct OpaqueCMTimebase *timebase;
- (id)consumerPorts;
- (void)filterTopologyDidChange;
- (void)willUnmount;
- (void)didMountWithCoordinatingProvider:(id)arg1;
@property(readonly, nonatomic) FBCaptureModeMountingDescriptor *mountingDescriptor; // @synthesize mountingDescriptor=_mountingDescriptor;
- (id)captureMode;
- (void)willDetachWithContext:(id)arg1;
- (void)didAttachWithContext:(id)arg1;
- (long long)supportedControllerStates;
- (id)dependentComponentIDs;
- (id)componentID;
- (void)produceDataWithPixelBuffer:(struct __CVBuffer *)arg1 time:(CDStruct_1b6d18a9)arg2;
- (void)exportFilterConfigsWithCompletion:(CDUnknownBlockType)arg1;
- (void)clearInMemoryCacheWithCompletion:(CDUnknownBlockType)arg1;
- (void)clearFilters:(CDUnknownBlockType)arg1;
- (void)applyFilters:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithMediaProvider:(id)arg1 playbackController:(id)arg2 mediaOutputHandler:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

