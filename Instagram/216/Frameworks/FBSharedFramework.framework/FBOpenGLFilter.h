//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <FBSharedFramework/FBFilter.h>

#import <FBSharedFramework/FBFilterScissorTesting-Protocol.h>

@class FBGLContext, NSBundle, NSString;

@interface FBOpenGLFilter : FBFilter <FBFilterScissorTesting>
{
    FBGLContext *_context;
    void *_colorSpace;
    unsigned int _pixelFormatType;
    shared_ptr_3ca5f01e _vb0;
    shared_ptr_3ca5f01e _ib0;
    struct VertexInputStateDesc _vertexInputStateDesc0;
    struct shared_ptr<igl::ISamplerState> _samplerState;
    int _textureFormatCapabilities;
    shared_ptr_fbaa1313 _uniformBuffer;
    struct FilterUniformUpdate _filterUniformUpdate;
    struct BlendFunc _blendFunc;
    _Bool _shouldUpdateBlendFunc;
    unsigned int _blendAlphaInfo;
    struct unique_ptr<iglu::filtergraph::MeshNode, std::default_delete<iglu::filtergraph::MeshNode>> _filter;
    struct unique_ptr<iglu::filtergraph::MeshNode, std::default_delete<iglu::filtergraph::MeshNode>> _filterUV;
    _Bool _preparedRenderPipeline;
    _Bool _lazyCreateOpenGLProgram;
    shared_ptr_eefa0e38 _device;
    shared_ptr_998cc3cc _commandQueue;
    _Bool _shouldUpdateUniforms;
    _Bool _shouldLoadColorAttachment;
    NSBundle *_assetBundle;
    struct CGRect _scissorRect;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) unsigned int blendAlphaInfo; // @synthesize blendAlphaInfo=_blendAlphaInfo;
@property(nonatomic) _Bool shouldLoadColorAttachment; // @synthesize shouldLoadColorAttachment=_shouldLoadColorAttachment;
@property(nonatomic) _Bool shouldUpdateUniforms; // @synthesize shouldUpdateUniforms=_shouldUpdateUniforms;
@property(retain, nonatomic) NSBundle *assetBundle; // @synthesize assetBundle=_assetBundle;
@property(nonatomic) struct CGRect scissorRect; // @synthesize scissorRect=_scissorRect;
- (void)_prepareBlendFunc;
- (void)_prepareSamplerStateForTexture:(shared_ptr_b95409fc)arg1;
- (void)_prepareCommandQueue;
- (void)_prepareRenderPipelineIfNeeded;
- (_Bool)_iglRender:(id)arg1 toTarget:(shared_ptr_f1960820)arg2 withNode:(void *)arg3;
- (_Bool)_iglRender:(id)arg1 to:(id)arg2;
- (_Bool)iglRender:(id)arg1 toYUV:(id)arg2;
- (_Bool)iglRender:(id)arg1 to:(id)arg2;
- (struct FilterUniformUpdate)prepareFilterUniformUpdate;
- (shared_ptr_fbaa1313)getUniformBuffer;
- (struct VertexInputStateDesc)getVertexInputStateDesc;
- (shared_ptr_3ca5f01e)getIndicies;
- (shared_ptr_3ca5f01e)getVertexBufferObject;
- (const char *)metalFragShaderUV;
- (const char *)metalVertexShaderUV;
- (const char *)metalFragShader;
- (const char *)metalVertexShader;
@property(readonly, nonatomic) unsigned int pixelFormatType;
@property(readonly, nonatomic) void *colorSpace;
- (_Bool)render:(id)arg1 to:(id)arg2 time:(CDStruct_1b6d18a9)arg3 iglActivations:(struct FBIGLActivations)arg4;
- (_Bool)render:(id)arg1 to:(id)arg2 program:(id)arg3 time:(CDStruct_1b6d18a9)arg4 iglActivations:(struct FBIGLActivations)arg5;
- (_Bool)render:(id)arg1 to:(id)arg2 program:(id)arg3 time:(CDStruct_1b6d18a9)arg4;
- (_Bool)iglRender:(id)arg1 to:(id)arg2 time:(CDStruct_1b6d18a9)arg3;
- (_Bool)render:(id)arg1 to:(id)arg2 time:(CDStruct_1b6d18a9)arg3;
- (id)_openGLProgram;
- (id)openGLProgram;
- (id)shaderConstsForSplineSamplers;
- (id)samplers;
- (id)textureFromPath:(id)arg1;
- (id)textureNamed:(id)arg1;
- (id)textureWithContentsOfData:(id)arg1;
- (void)finalizeRendering;
- (id)fullFragmentShaderUV;
- (id)fullVertexShaderUV;
- (id)fullFragmentShader;
- (id)fullVertexShader;
- (void)setFilterContext:(id)arg1;
- (void)setExperimentManager:(id)arg1;
- (void)discardResources;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

