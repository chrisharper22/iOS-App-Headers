//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <FBSharedFramework/IGFollowButtonDelegate-Protocol.h>
#import <FBSharedFramework/IGFollowFriendStatusListener-Protocol.h>
#import <FBSharedFramework/IGFriendStatusReceivedListener-Protocol.h>
#import <FBSharedFramework/IGHashtagFollowStatusUpdateListener-Protocol.h>

@class FBKVOController, IGFollowAttributionModel, IGFollowButton, IGFollowButtonViewConfiguration, IGHashtagModel, IGUser, IGUserSession, NSString, UIImpactFeedbackGenerator, UILongPressGestureRecognizer, UIView;
@protocol IGDirectReplyToAuthorViewControllerPresenting, IGFollowControllerDelegate, IGFollowControllerFollowingRelationshipDelegate, IGFollowControllerLoggingProvider, IGFollowControllerTapDelegate;

@interface IGFollowController : NSObject <IGFollowButtonDelegate, IGHashtagFollowStatusUpdateListener, IGFollowFriendStatusListener, IGFriendStatusReceivedListener>
{
    IGFollowButtonViewConfiguration *_viewConfiguration;
    IGHashtagModel *_hashtag;
    NSString *_module;
    UIImpactFeedbackGenerator *_feedbackGenerator;
    long long _lastFollowStatus;
    id <IGDirectReplyToAuthorViewControllerPresenting> _directMessagePresenter;
    _Bool _hasTemporaryFollowAction;
    UILongPressGestureRecognizer *_followFromLongPress;
    _Bool _isFollowFromEnabled;
    _Bool _showFollowBackState;
    _Bool _canShowRelationshipSheetWhenFollowing;
    id <IGFollowControllerDelegate> _delegate;
    id <IGFollowControllerTapDelegate> _tapDelegate;
    id <IGFollowControllerFollowingRelationshipDelegate> _followingRelationshipDelegate;
    id <IGFollowControllerLoggingProvider> _loggingProvider;
    IGFollowAttributionModel *_attributionModel;
    NSString *_contextString;
    IGUser *_user;
    IGUserSession *_userSession;
    IGFollowButton *_followButton;
    FBKVOController *_kvoController;
}

+ (void)logFollowButtonTappedForUser:(id)arg1 action:(long long)arg2 clickPoint:(id)arg3 userSession:(id)arg4 loggingProvider:(id)arg5 module:(id)arg6 attributionModel:(id)arg7;
+ (id)iconButtonControllerWithFollowButtonFont:(id)arg1;
+ (id)buttonControllerWithViewConfiguration:(id)arg1;
+ (id)borderlessTextButtonControllerWithFollowButtonFont:(id)arg1;
+ (id)borderlessTextButtonController;
+ (id)borderlessTextButtonControllerWithoutButtonPadding;
+ (id)profileIconButtonController;
+ (id)directMessageButtonController;
+ (id)defaultTextButtonControllerWithTitleLabelPadding:(double)arg1 onMedia:(_Bool)arg2;
+ (id)defaultTextButtonControllerWithTitleLabelPadding:(double)arg1;
+ (id)defaultTextButtonControllerWithShowChevronWhenFollowing;
+ (id)defaultTextButtonControllerWithFollowButtonTitle:(id)arg1;
+ (id)defaultTextButtonController;
+ (id)neueProfileTextButtonControllerShowChevronWhenFollowing:(_Bool)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic) FBKVOController *kvoController; // @synthesize kvoController=_kvoController;
@property(readonly, nonatomic) IGFollowButton *followButton; // @synthesize followButton=_followButton;
@property(nonatomic) __weak IGUserSession *userSession; // @synthesize userSession=_userSession;
@property(retain, nonatomic) IGUser *user; // @synthesize user=_user;
@property(nonatomic) _Bool canShowRelationshipSheetWhenFollowing; // @synthesize canShowRelationshipSheetWhenFollowing=_canShowRelationshipSheetWhenFollowing;
@property(nonatomic) _Bool showFollowBackState; // @synthesize showFollowBackState=_showFollowBackState;
@property(copy, nonatomic) NSString *contextString; // @synthesize contextString=_contextString;
@property(copy, nonatomic) IGFollowAttributionModel *attributionModel; // @synthesize attributionModel=_attributionModel;
@property(nonatomic) __weak id <IGFollowControllerLoggingProvider> loggingProvider; // @synthesize loggingProvider=_loggingProvider;
@property(nonatomic) __weak id <IGFollowControllerFollowingRelationshipDelegate> followingRelationshipDelegate; // @synthesize followingRelationshipDelegate=_followingRelationshipDelegate;
@property(nonatomic) __weak id <IGFollowControllerTapDelegate> tapDelegate; // @synthesize tapDelegate=_tapDelegate;
@property(nonatomic) __weak id <IGFollowControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)accessibilityActivate;
- (void)_logFollowFrictionForEvent:(int)arg1 andNeutralLanguage:(_Bool)arg2;
- (void)adjustsFontSizeToFitWidth:(_Bool)arg1;
- (void)setVerbosePadding:(double)arg1;
- (void)setAlignment:(unsigned long long)arg1;
@property(nonatomic) struct UIEdgeInsets hitTestExpansion;
- (void)setButtonState:(long long)arg1;
- (void)setMaximumWidth:(double)arg1;
- (void)setMinimumWidth:(double)arg1;
- (void)followButtonDidUpdateButtonState:(id)arg1;
- (void)bulkFriendStatusesReceivedForUsers:(id)arg1;
- (void)friendStatusReceiverForUser:(id)arg1;
- (void)friendStatusUserFailedToLoad:(id)arg1;
- (void)friendStatusUserDoesNotExist:(id)arg1;
- (void)_showDirectMessageSheet;
- (void)toggleFollowingHashtag;
- (void)_followHashtag:(_Bool)arg1;
- (void)tryToggleFriendship;
- (void)_showFollowFrictionDialog:(long long)arg1;
- (void)_showAlertForUnfollow;
- (void)_performFriendshipToggle;
- (void)_showRestrictToastIfNeeded;
- (CDUnknownBlockType)_showRestrictToastIfNeededHandler;
- (CDUnknownBlockType)_blockingSuccessHandler;
- (void)_notifyDelegateOfButtonTap;
- (void)_didLongPressFollowButton:(id)arg1;
- (void)_didPressFollowButton;
- (void)_negateFollowModel;
@property(readonly, nonatomic) UIView *view;
- (void)hashtagFollowStatusStoreDidUpdateFollowStatus:(long long)arg1 forHashtagWithName:(id)arg2;
@property(readonly, nonatomic) long long followButtonState;
- (void)setFollowFromEnabled:(_Bool)arg1;
- (void)setHashtag:(id)arg1 userSession:(id)arg2 module:(id)arg3;
- (void)setUser:(id)arg1 userSession:(id)arg2 module:(id)arg3;
- (void)setHasTemporaryFollowAction:(_Bool)arg1;
- (void)_updateFollowButtonState;
- (void)_userValueChanged:(id)arg1;
- (void)setViewConfiguration:(id)arg1;
- (void)dealloc;
- (id)_initWithViewConfiguration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

