//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <FBSharedFramework/FNFAVPlayer-Protocol.h>
#import <FBSharedFramework/FNFInternalPlayerDelegate-Protocol.h>

@class FNFValidationTokenProvider, NSError, NSHashTable, NSString;
@protocol FNFAVPlayerItem, FNFPlayerAudioDecoder, FNFPlayerAudioEngine, FNFPlayerControlling, OS_dispatch_queue;

@interface FNFPlayer : NSObject <FNFInternalPlayerDelegate, FNFAVPlayer>
{
    id <FNFPlayerControlling> _internalPlayer;
    id <FNFAVPlayerItem> _currentItem;
    id <FNFPlayerAudioDecoder> _defaultAudioDecoder;
    id _seekThrottlingTimer;
    NSHashTable *_stateUpdateListeners;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    id <FNFPlayerAudioEngine> _defaultAudioEngine;
    long long _status;
    float _rate;
    double _lastSeekTimeInterval;
    _Bool _hasRegisteredNotificationsForProtectedContent;
    _Bool _shouldFlushTrailingSeek;
    FNFValidationTokenProvider *_tokenProvider;
}

- (void).cxx_destruct;
- (CDStruct_1b6d18a9)lastFrameRenderedPts;
- (void)_simulatePlaybackInteruptionWithError:(id)arg1;
- (void)removePlayerStateUpdateListener:(id)arg1;
- (void)addPlayerStateUpdateListener:(id)arg1;
- (void)_dispatchWithPlayer:(id)arg1 playerInternalState:(struct FNFPlayerInternalState)arg2 loggingContext:(id)arg3 dispatchBlock:(CDUnknownBlockType)arg4;
- (void)internalPlayer:(id)arg1 stateUpdated:(unsigned long long)arg2 playerState:(struct FNFPlayerInternalState)arg3 loggingContext:(id)arg4;
- (id)_addSeekThrottlingTimeObserverForInterval:(CDStruct_1b6d18a9)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 throttleRate:(double)arg2 toleranceBefore:(CDStruct_1b6d18a9)arg3 toleranceAfter:(CDStruct_1b6d18a9)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3 seekReason:(int)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3 seekReason:(int)arg4;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 seekReason:(int)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (void)_didChangeScreenCaptured;
- (void)_didDisconnectWithExternalScreen;
- (void)_didConnectWithExternalScreen;
- (void)protectedContentDetected:(_Bool)arg1;
- (void)invalidate;
- (void)addRepresentationChangedCallback:(CDUnknownBlockType)arg1;
- (void)removeLevelMeterCallback;
- (void)addLevelMeterCallback:(CDUnknownBlockType)arg1 timeInterval:(CDStruct_1b6d18a9)arg2;
- (void)removeTimeObserver:(id)arg1;
- (void)_resetLastSeekTimeInterval;
- (_Bool)_hasNotPerformedPreviousSeek;
- (void)_removeSeekThrottlingTimer;
- (void)_flushTrailingSeekAsApplicable;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1;
- (id)addPeriodicTimeObserverForInterval:(CDStruct_1b6d18a9)arg1 queue:(id)arg2 followMasterClock:(_Bool)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (id)addPeriodicTimeObserverForInterval:(CDStruct_1b6d18a9)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (CDStruct_1b6d18a9)lastRequestedStartTime;
- (CDStruct_1b6d18a9)lastStartingTime;
- (CDStruct_1b6d18a9)currentTime;
- (id)currentItem;
@property(readonly, nonatomic) long long status;
@property(readonly, nonatomic) NSError *error;
- (_Bool)showCaptions;
@property(nonatomic, getter=isMuted) _Bool muted;
@property(nonatomic) _Bool allowsExternalPlayback;
@property(nonatomic) float rate;
@property(nonatomic) float volume;
- (void)setEnableClientBackgroundPlayback:(_Bool)arg1;
- (void)setLiveTraceManager:(id)arg1;
- (void)setRate:(float)arg1 context:(id)arg2;
- (void)setVolume:(float)arg1 rampTime:(float)arg2;
- (void)setShowCaptions:(_Bool)arg1;
- (void)setMuted:(_Bool)arg1 isUserInitiated:(_Bool)arg2 context:(id)arg3;
- (void)setLogger:(id)arg1;
- (void)setLoggingContext:(id)arg1;
- (void)replaceCurrentItemWithPlayerItem:(id)arg1 loggingContext:(id)arg2;
- (void)replaceCurrentItemWithPlayerItem:(id)arg1;
- (void)setUserSelectedQuality:(id)arg1;
- (void)setAudioDecoder:(id)arg1;
- (void)setAudioTimeDomainPitchAlgorithmEnabled:(_Bool)arg1;
- (void)setAudioEngine:(id)arg1;
- (void)setCaptionParser:(id)arg1;
- (void)pauseWithPauseReason:(int)arg1 context:(id)arg2;
- (void)playWithContext:(id)arg1;
- (void)pause;
- (void)play;
- (void)_applicationDidBecomeActive;
- (void)_applicationWillResignActive;
- (id)internalPlayerClass;
- (id)fnfValidationToken;
- (id)playerLayer;
- (id)initWithDisplayEngine:(id)arg1 audioEngine:(id)arg2 clock:(id)arg3 config:(CDStruct_b8b5dd59)arg4 asyncTimebase:(_Bool)arg5 enableOpus:(_Bool)arg6 customPlayer:(id)arg7 dispatchQueue:(id)arg8;
- (id)initWithAVAudioPlayer:(id)arg1 playerConfig:(CDStruct_b8b5dd59)arg2;
- (id)initWithInceptionPlayer:(id)arg1 playerConfig:(CDStruct_b8b5dd59)arg2;
- (id)initWithDisplayEngine:(id)arg1 audioEngine:(id)arg2 clock:(id)arg3 config:(CDStruct_b8b5dd59)arg4 enableOpus:(_Bool)arg5;
- (id)initWithDisplayEngine:(id)arg1 audioEngine:(id)arg2 config:(CDStruct_b8b5dd59)arg3 asyncTimebase:(_Bool)arg4 enableOpus:(_Bool)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

