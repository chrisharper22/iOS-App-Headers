//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import <FBSharedFramework/IGGestureHandler-Protocol.h>
#import <FBSharedFramework/IGStickerContainerViewDelegate-Protocol.h>
#import <FBSharedFramework/IGStoryAudioPlayerDelegate-Protocol.h>
#import <FBSharedFramework/IGStoryMediaPlaybackControllerProtocol-Protocol.h>
#import <FBSharedFramework/IGStorySwipableFilterMediaViewDelegate-Protocol.h>

@class AVAsset, IGAREffectModel, IGAnimationCurve, IGAsyncTask, IGAudioTrack, IGAudioTrackPlayer, IGBackgroundGradient, IGDrawCanvasView, IGIOSLink, IGPassthroughView, IGPlaybackTimeline, IGStoryAudioPlayer, IGStoryBrandedContentModel, IGStoryMediaCompositionState, IGStoryMediaLoadingIndicatorView, IGStorySwipableFilterMediaView, IGStoryVideoTrimState, IGTooltipView, IGUserSession, NSArray, NSDictionary, NSMapTable, NSMutableDictionary, NSString, NSUUID, UIImage, UILabel;
@protocol IGStoryMediaAsset, IGStoryMediaCompositionViewDeprecatedDelegate, IGStoryMediaEffectProtocol, IGStorySuperHackyPostcaptureAREffectControllerProtocol;

@interface IGStoryMediaCompositionView_DEPRECATED : UIView <IGStoryMediaPlaybackControllerProtocol, IGStorySwipableFilterMediaViewDelegate, IGStickerContainerViewDelegate, IGStoryAudioPlayerDelegate, IGGestureHandler>
{
    IGUserSession *_userSession;
    IGPassthroughView *_compositionWrapperView;
    IGPassthroughView *_mediaAndDrawingWrapperView;
    IGStorySwipableFilterMediaView *_swipableFilterMediaView;
    IGDrawCanvasView *_drawingCanvasView;
    UIView *_mediaAndDrawingSnapshotView;
    IGStoryMediaLoadingIndicatorView *_loadingIndicatorView;
    UILabel *_centerScreenInstructionsLabel;
    NSMapTable *_burnedInStickerRegionsInMedia;
    NSArray *_pendingDrawingBrushStrokes;
    IGStoryAudioPlayer *_audioPlayer;
    IGStoryAudioPlayer *_voiceoverPlayer;
    IGAudioTrackPlayer *_bleepAudioTrackPlayer;
    IGAudioTrackPlayer *_textToSpeechAudioTrackPlayer;
    _Bool _videoWasPlayingWhenEnteringBackground;
    IGPlaybackTimeline *_defaultPlaybackTimeline;
    IGTooltipView *_mediaTooltip;
    NSMutableDictionary *_playbackTimeObservers;
    id _storyMediaCompositionViewDeprecatedPlaybackObserverToken;
    double _playbackRate;
    NSUUID *_compositionIdentifier;
    NSMutableDictionary *_playerForAudioTrackWithIdentifier;
    _Bool _isRecomputingVoiceoverAudioMix;
    NSArray *_voiceoverAudioEffectRenderers;
    _Bool _videoAudioMuted;
    _Bool _mediaSupportsUserInteraction;
    _Bool _isBoomerangAsset;
    _Bool _muted;
    _Bool _stickerMediaSynchronizationDisabled;
    _Bool _loadingIndicatorViewVisible;
    double _stickerPlaybackTime;
    id <IGStoryMediaCompositionViewDeprecatedDelegate> _delegate;
    UIView *_stickerContainerView;
    IGPassthroughView *_burnedInStickerContainerView;
    NSArray *_availableBackgroundGradients;
    long long _currentBackgroundGradientIndex;
    IGBackgroundGradient *_customGradient;
    NSDictionary *_extraLoggingMetadata;
    NSDictionary *_effectPersistedMetadata;
    double _overallVolume;
    double _videoVolume;
    NSArray *_audioTrackClips;
    IGAsyncTask *_reactiveAudioAsset;
    double _selectedAudioVolume;
    double _voiceoverVolume;
    IGAnimationCurve *_voiceoverVolumeCurve;
    NSArray *_voiceoverAudioEffects;
    AVAsset *_textToSpeechAudio;
    IGAudioTrack *_soundboardAudioTrack;
    double _soundboardVolume;
    NSDictionary *_ageGatingInfo;
    NSArray *_geoGatingCountries;
    IGStoryVideoTrimState *_videoTrimState;
    IGIOSLink *_storyLink;
    IGStoryBrandedContentModel *_brandedContentModel;
}

- (void).cxx_destruct;
@property(retain, nonatomic) IGStoryBrandedContentModel *brandedContentModel; // @synthesize brandedContentModel=_brandedContentModel;
@property(retain, nonatomic) IGIOSLink *storyLink; // @synthesize storyLink=_storyLink;
@property(retain, nonatomic) IGStoryVideoTrimState *videoTrimState; // @synthesize videoTrimState=_videoTrimState;
@property(retain, nonatomic) NSArray *geoGatingCountries; // @synthesize geoGatingCountries=_geoGatingCountries;
@property(retain, nonatomic) NSDictionary *ageGatingInfo; // @synthesize ageGatingInfo=_ageGatingInfo;
@property(nonatomic) _Bool loadingIndicatorViewVisible; // @synthesize loadingIndicatorViewVisible=_loadingIndicatorViewVisible;
@property(nonatomic) _Bool stickerMediaSynchronizationDisabled; // @synthesize stickerMediaSynchronizationDisabled=_stickerMediaSynchronizationDisabled;
@property(nonatomic) _Bool muted; // @synthesize muted=_muted;
@property(nonatomic) double soundboardVolume; // @synthesize soundboardVolume=_soundboardVolume;
@property(retain, nonatomic) IGAudioTrack *soundboardAudioTrack; // @synthesize soundboardAudioTrack=_soundboardAudioTrack;
@property(retain, nonatomic) AVAsset *textToSpeechAudio; // @synthesize textToSpeechAudio=_textToSpeechAudio;
@property(copy, nonatomic) NSArray *voiceoverAudioEffects; // @synthesize voiceoverAudioEffects=_voiceoverAudioEffects;
@property(retain, nonatomic) IGAnimationCurve *voiceoverVolumeCurve; // @synthesize voiceoverVolumeCurve=_voiceoverVolumeCurve;
@property(nonatomic) double voiceoverVolume; // @synthesize voiceoverVolume=_voiceoverVolume;
@property(nonatomic) double selectedAudioVolume; // @synthesize selectedAudioVolume=_selectedAudioVolume;
@property(retain, nonatomic) IGAsyncTask *reactiveAudioAsset; // @synthesize reactiveAudioAsset=_reactiveAudioAsset;
@property(retain, nonatomic) NSArray *audioTrackClips; // @synthesize audioTrackClips=_audioTrackClips;
@property(nonatomic) double videoVolume; // @synthesize videoVolume=_videoVolume;
@property(nonatomic) double overallVolume; // @synthesize overallVolume=_overallVolume;
@property(copy, nonatomic) NSDictionary *effectPersistedMetadata; // @synthesize effectPersistedMetadata=_effectPersistedMetadata;
@property(copy, nonatomic) NSDictionary *extraLoggingMetadata; // @synthesize extraLoggingMetadata=_extraLoggingMetadata;
@property(retain, nonatomic) IGBackgroundGradient *customGradient; // @synthesize customGradient=_customGradient;
@property(nonatomic) long long currentBackgroundGradientIndex; // @synthesize currentBackgroundGradientIndex=_currentBackgroundGradientIndex;
@property(retain, nonatomic) NSArray *availableBackgroundGradients; // @synthesize availableBackgroundGradients=_availableBackgroundGradients;
@property(readonly, nonatomic) _Bool isBoomerangAsset; // @synthesize isBoomerangAsset=_isBoomerangAsset;
@property(readonly, nonatomic) _Bool mediaSupportsUserInteraction; // @synthesize mediaSupportsUserInteraction=_mediaSupportsUserInteraction;
@property(nonatomic) _Bool videoAudioMuted; // @synthesize videoAudioMuted=_videoAudioMuted;
@property(readonly, nonatomic) IGPassthroughView *burnedInStickerContainerView; // @synthesize burnedInStickerContainerView=_burnedInStickerContainerView;
@property(readonly, nonatomic) UIView *stickerContainerView; // @synthesize stickerContainerView=_stickerContainerView;
@property(nonatomic) __weak id <IGStoryMediaCompositionViewDeprecatedDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *colorFilters;
@property(readonly, nonatomic) UIImage *currentSnapshotImage;
- (void)playExpressingLoveHeartsAnimationIfNeeded;
- (void)dismissMediaTooltip;
- (void)presentMediaTooltipIfNeeded:(id)arg1 verticalOffsetFromCenter:(double)arg2 analyticsTag:(id)arg3;
- (void)animateMessageOnScreen:(id)arg1;
- (void)removePlaybackTimeObserver:(id)arg1;
- (id)addPlaybackTimeObserver:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) IGAREffectModel *postcaptureAREffect;
- (void)audioPlayer:(id)arg1 didDetermineDuration:(double)arg2 ofAsset:(id)arg3;
- (void)audioPlayer:(id)arg1 didUpdateStallState:(_Bool)arg2;
- (void)audioPlayer:(id)arg1 didUpdateToPlaybackTime:(double)arg2;
- (void)audioPlayer:(id)arg1 didDetermineAssetPlayabilityStatus:(_Bool)arg2;
- (void)audioPlayer:(id)arg1 effectivePlaybackRateDidChange:(double)arg2;
- (void)audioPlayerDidPlayToEnd:(id)arg1;
@property(retain, nonatomic) AVAsset *voiceoverAudio;
- (void)_synchronizePlayableMedia;
- (void)_synchronizeAudioTrackPlayersWithMasterTimeline;
- (void)_synchronizeStickersWithMasterTimeline;
@property(nonatomic) double stickerPlaybackTime; // @synthesize stickerPlaybackTime=_stickerPlaybackTime;
- (void)seekToTime:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)seekToTime:(double)arg1;
- (void)pause;
- (void)play;
@property(readonly, nonatomic) double playbackDuration;
@property(nonatomic) double currentPlaybackTime;
@property(retain, nonatomic) IGAudioTrack *bleepAudioTrack;
- (void)_recomputeVoiceoverAudioMix;
- (void)_voiceoverAudioEffectRenderersProcessAudioBufferList:(struct AudioBufferList *)arg1 numberOfFrames:(long long)arg2;
- (void)_voiceoverAudioEffectRenderersPrepareForMaxFrames:(long long)arg1 audioStreamBasicDescription:(const struct AudioStreamBasicDescription *)arg2;
@property(copy, nonatomic) NSArray *assetAudioEffects;
@property(retain, nonatomic) IGAnimationCurve *assetVolumeCurve;
- (void)swipableFilterMediaView:(id)arg1 effectivePlaybackRateDidChange:(double)arg2;
- (void)swipableFilterMediaViewDidPlayVideoToEnd:(id)arg1;
- (void)swipableFilterMediaView:(id)arg1 didUpdateToPlaybackTime:(double)arg2;
- (void)swipableFilterMediaView:(id)arg1 didDisplayVideoFrame:(struct __CVBuffer *)arg2 withPreferredTransform:(struct CGAffineTransform)arg3 forPlaybackTime:(double)arg4;
- (void)_updateMuteState;
- (void)_applicationDidEnterForeground:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)stickerContainerView:(id)arg1 stickerWillBeRemovedFromContainer:(id)arg2;
- (void)stickerContainerView:(id)arg1 stickerWasAddedToContainer:(id)arg2;
@property(readonly, nonatomic) NSArray *stickers;
- (void)swipableFilterMediaViewDidUpdateMediaSizeAndPosition:(id)arg1;
- (void)swipableFilterMediaViewDidFinishResizingAndPositioningMedia:(id)arg1;
- (void)swipableFilterMediaViewWillBeginResizingAndPositioningMedia:(id)arg1;
- (_Bool)swipableFilterMediaView:(id)arg1 shouldBeginResizingAndPositioningMediaWithGesture:(id)arg2;
- (void)swipableFilterMediaView:(id)arg1 didSettleOnColorFilter:(id)arg2;
- (void)swipableFilterMediaView:(id)arg1 willSettleOnNewColorFilter:(id)arg2;
- (_Bool)swipableFilterMediaViewShouldBeginGesture:(id)arg1 isColorFilterSwipe:(_Bool)arg2;
- (void)swipableFilterMediaView:(id)arg1 didUpdatePreviewImageLoadingState:(_Bool)arg2;
- (void)swipableFilterMediaView:(id)arg1 didUpdateLoadingState:(_Bool)arg2;
- (void)setIsColorFilterPickerEnabled:(_Bool)arg1;
- (_Bool)canRespondToGesture:(id)arg1;
@property(readonly, nonatomic) IGDrawCanvasView *drawingCanvasView;
@property(readonly, nonatomic) NSArray *musicTrackClips;
@property(readonly, nonatomic) NSArray *originalSoundTracks;
@property(readonly, nonatomic) IGBackgroundGradient *currentBackgroundGradient;
@property(readonly, nonatomic) struct IGRegion mediaRegion;
- (void)_setLoadingIndicatorViewVisible:(_Bool)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) id <IGStoryMediaEffectProtocol> mediaEffect;
@property(nonatomic) double mediaScale;
@property(retain, nonatomic) id <IGStoryMediaAsset> asset;
@property(retain, nonatomic) IGStoryMediaCompositionState *mediaCompositionState;
- (void)layoutSubviews;
- (id)initWithUserSession:(id)arg1 colorFilters:(id)arg2 igglkSession:(id)arg3;
- (id)initWithUserSession:(id)arg1 igglkSession:(id)arg2;
- (void)setPlaybackRate:(double)arg1 time:(double)arg2 atHostTime:(double)arg3;
@property(nonatomic) double playbackRate;
@property(nonatomic) double volume;
- (void)dealloc;
@property(retain, nonatomic) id <IGStorySuperHackyPostcaptureAREffectControllerProtocol> postcaptureARController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

