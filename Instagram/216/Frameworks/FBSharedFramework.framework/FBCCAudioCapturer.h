//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <FBSharedFramework/AVCaptureAudioDataOutputSampleBufferDelegate-Protocol.h>
#import <FBSharedFramework/FBAudioCapturerProtocol-Protocol.h>
#import <FBSharedFramework/FBCCAudioPipelineCapturing-Protocol.h>
#import <FBSharedFramework/FBCCAudioPipelineControllingListening-Protocol.h>
#import <FBSharedFramework/FBSystemAudioCaptureSessionInteractingDelegate-Protocol.h>

@class FBAudioEchoCanceller, FBCaptureSession, NSString;
@protocol FBAudioBufferHandler, FBCCAudioPipelineControlling, FBCCAudioPipelineProviding, FBCCAudioPipelineRuntimeErrorDelegate, FBCaptureSessionRuntimeErrorDelegate, FBCaptureSessionStateDelegate, FBSystemAudioCaptureSessionInteracting, OS_dispatch_queue;

@interface FBCCAudioCapturer : NSObject <FBSystemAudioCaptureSessionInteractingDelegate, FBCCAudioPipelineControllingListening, AVCaptureAudioDataOutputSampleBufferDelegate, FBAudioCapturerProtocol, FBCCAudioPipelineCapturing>
{
    id <FBAudioBufferHandler> _bufferHandler;
    NSObject<OS_dispatch_queue> *_audioQueue;
    id <FBSystemAudioCaptureSessionInteracting> _systemAudioCaptureSessionInteractor;
    id <FBCCAudioPipelineProviding> _audioPipelineProvider;
    struct FBCameraConfiguration _cameraConfiguration;
    _Bool _enableEchoCancellation;
    FBAudioEchoCanceller *_echoCanceller;
    _Bool _enableVolumeEditing;
    double _volumeMultiplier;
    _Bool _isUsingCaptureSession;
    _Bool _ignoreRTCClientNotification;
    id <FBCCAudioPipelineControlling> _ccAudioPipelineController;
    FBCaptureSession *_captureSession;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(retain, nonatomic) FBCaptureSession *captureSession; // @synthesize captureSession=_captureSession;
@property(retain, nonatomic) id <FBCCAudioPipelineControlling> ccAudioPipelineController; // @synthesize ccAudioPipelineController=_ccAudioPipelineController;
@property(nonatomic) _Bool ignoreRTCClientNotification; // @synthesize ignoreRTCClientNotification=_ignoreRTCClientNotification;
- (void)_enableStereoCaptureWithAudioSessionOrientation:(id)arg1 shouldStereoCaptureBeEnabled:(_Bool)arg2;
- (void)_startAudioPipelineCaptureWithCompletionHelper:(CDUnknownBlockType)arg1;
- (void)_startAudioPipelineCaptureWithCompletion:(CDUnknownBlockType)arg1;
- (void)_startCaptureSessionWithCompletion:(CDUnknownBlockType)arg1;
- (void)_tearDownAudioConfigurationInAudioQueue;
- (void)_tearDownAudioConfiguration;
- (void)_updateWithHeadphonesPluggedIn:(_Bool)arg1 outputs:(id)arg2;
- (void)_audioSessionRouteChange:(id)arg1;
- (void)_stopEchoCancellation;
- (void)_startEchoCancellationIfNeeded;
- (void)avAudioSessionIsDeactivated;
- (void)avAudioSessionIsActivated;
- (_Bool)shouldEnableEchoCancellation;
- (void)rtcClientBecameActive;
- (void)rtcClientDeactivated;
- (void)_changeVolumeAudioInBuffer:(struct opaqueCMSampleBuffer *)arg1 volumeMultiplier:(double)arg2;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (void)handleOutputBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (_Bool)audioPipelineIsMuted;
- (void)setAudioPipelineSystemWideIsMuted:(_Bool)arg1;
- (void)setAudioPipelineIsMuted:(_Bool)arg1;
- (void)destroyAudioPipeline;
- (void)pauseAudioPipeline;
- (void)createAudioPipelineIfNecessaryAndResume;
@property(nonatomic) __weak id <FBCCAudioPipelineRuntimeErrorDelegate> audioPipelineRuntimeErrorDelegate;
- (void)enableEditingMicrophoneVolume:(_Bool)arg1 volumeMultiplier:(double)arg2;
- (void)_haltCaptureSession:(_Bool)arg1;
- (void)stopAudioSessionWithDeactivatingSession:(_Bool)arg1 removeInputsOutputs:(_Bool)arg2;
- (void)startAudioCaptureWithEchoCancellationEnabled:(_Bool)arg1 audioSessionOrientation:(id)arg2 shouldStereoCaptureBeEnabled:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
@property(nonatomic) __weak id <FBCaptureSessionRuntimeErrorDelegate> runtimeErrorDelegate;
@property(nonatomic) __weak id <FBCaptureSessionStateDelegate> sessionStateDelegate;
@property(readonly, nonatomic) struct OpaqueCMClock *clock;
@property(readonly, nonatomic) _Bool isAudioSessionRunning;
- (void)addOutputs:(id)arg1;
- (void)addInputs:(id)arg1;
- (void)dealloc;
- (id)initWithBufferHandler:(id)arg1 audioQueue:(id)arg2 systemAudioCaptureSessionInteractor:(id)arg3 audioPipelineProviding:(id)arg4 cameraConfiguration:(const struct FBCameraConfiguration *)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

