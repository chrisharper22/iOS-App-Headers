//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <FBSharedFramework/FNFPlayerStateUpdateListener-Protocol.h>
#import <FBSharedFramework/IGExternalPictureInPictureControlling-Protocol.h>
#import <FBSharedFramework/IGVideoPlaybackDataProvider-Protocol.h>
#import <FBSharedFramework/VideoViewabilityDelegate-Protocol.h>

@class CALayer, FBKVOController, FNFAVAudioPlayer, FNFInceptionPlayer, FNFPlayer, FNFSharedLogger, IGFNFSelectedQualityProvider, IGFNFVideoView, IGUserSession, IGVideoCacheLogger, IGVideoPlaybackAbrDecisionHistoryViewController, IGVideoPlaybackAnalyticsEventHistoryViewController, IGVideoPlaybackQPLLogger, IGVideoPlaybackSimpleLogger, IGVideoPlaybackStateManager, IGVideoPlaybackStateTransitionHistoryViewController, IGVideoPlayerDisplayedFrameGenerator, IGVideoProfilerDashEventListener, IGVideoProfilerQPLLogger, IGVideoViewabilityTagsStatusAnnouncer, NSDictionary, NSMutableDictionary, NSMutableOrderedSet, NSString, UIView, VideoViewabilityTracker;
@protocol AVAsynchronousKeyValueLoading><FNFAssetForPlayer><FNFAVPlayerItem, FNFAVPlayerLayer, FNFPictureInPictureStatusUpdate, FNFPlayerDisplayEngine, IGFNFVideoPlayerDelegate, IGFNFVideoPlayerLiveDelegate, IGVideoPlaybackLogging;

@interface IGFNFVideoPlayer : NSObject <IGVideoPlaybackDataProvider, FNFPlayerStateUpdateListener, VideoViewabilityDelegate, IGExternalPictureInPictureControlling>
{
    IGVideoPlaybackSimpleLogger *_simpleLogger;
    NSString *_initialRepresentationId;
    NSString *_mediaId;
    NSString *_module;
    NSString *_productTypeString;
    IGUserSession *_userSession;
    IGFNFVideoView *_videoView;
    IGVideoPlaybackAbrDecisionHistoryViewController *_abrDecisionHistoryViewController;
    IGVideoPlaybackStateTransitionHistoryViewController *_stateTransitionHistoryViewController;
    IGVideoPlaybackAnalyticsEventHistoryViewController *_analyticsEventHistoryViewController;
    FNFPlayer *_player;
    FNFSharedLogger *_sharedLogger;
    IGVideoViewabilityTagsStatusAnnouncer *_viewabilityStatusAnnouncer;
    CALayer<FNFAVPlayerLayer> *_playerLayer;
    id <FNFPlayerDisplayEngine> _playerDisplayEngine;
    FNFInceptionPlayer *_pictureInPicturePlayer;
    FNFInceptionPlayer *_backgroundAudioPlayer;
    FNFInceptionPlayer *_drmPlayer;
    FNFAVAudioPlayer *_audioPlayer;
    NSObject<AVAsynchronousKeyValueLoading><FNFAssetForPlayer><FNFAVPlayerItem> *_asset;
    id _playerPlaybackObserver;
    id _playerPlaybackObserverForCurrentTime;
    FBKVOController *_kvoController;
    IGVideoPlayerDisplayedFrameGenerator *_displayedFrameGenerator;
    _Bool _playedFirstFrame;
    _Bool _enableFrameBasedLogging;
    _Bool _readyToPlay;
    long long _lastNotifiedLoopCount;
    id <IGVideoPlaybackLogging> _videoPlaybackLogger;
    IGVideoPlaybackQPLLogger *_qplLogger;
    IGVideoProfilerDashEventListener *_videoProfilerListener;
    _Bool _seeking;
    _Bool _playerHasPaused;
    long long _playerPausedFromSeekState;
    _Bool _playerHasStalled;
    long long _playbackState;
    long long _playbackReason;
    _Bool _previousAudioEnabledState;
    _Bool _deferVideoShouldStart;
    _Bool _playerStateIsPlaying;
    struct atomic<CMTime> _playerStateCurrentTime;
    _Bool _hasPendingContentReset;
    struct CGSize _currentVideoSize;
    _Bool _isLoopingAsset;
    double _duration;
    _Bool _isLive;
    _Bool _audioOnlyPlayback;
    _Bool _isPIP;
    struct CGSize _reportedViewSize;
    _Bool _enableEmployeeOnlyDebug;
    _Bool _makeCurrentTimeThreadSafe;
    IGVideoCacheLogger *_cacheLogger;
    NSMutableDictionary *_viewabilityDictionary;
    NSString *_userSelectedQualityForLogging;
    long long _repChangedReason;
    _Bool _enableSuspensionNotificationFix;
    _Bool _watchTimeDebuggerEnabled;
    _Bool _invalidateAudioWrapperOnDealloc;
    _Bool _pausePlayerOnAppBackground;
    _Bool _enableMediaServiceResetFix;
    NSMutableOrderedSet *_recordedErrors;
    _Bool _shouldTrackPlaybackState;
    VideoViewabilityTracker *_viewabilityTracker;
    IGVideoProfilerQPLLogger *_videoProfilerQPLLogger;
    _Bool _audioEnabled;
    id <IGFNFVideoPlayerDelegate> _delegate;
    id <IGFNFVideoPlayerLiveDelegate> _liveDelegate;
    long long _playerMode;
    long long _contentProtectionMode;
    IGVideoPlaybackStateManager *_stateManager;
    IGFNFSelectedQualityProvider *_selectedQualityProvider;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) IGFNFSelectedQualityProvider *selectedQualityProvider; // @synthesize selectedQualityProvider=_selectedQualityProvider;
@property(readonly, nonatomic) IGVideoPlaybackStateManager *stateManager; // @synthesize stateManager=_stateManager;
@property(readonly, nonatomic) IGUserSession *userSession; // @synthesize userSession=_userSession;
@property(readonly, nonatomic) _Bool seeking; // @synthesize seeking=_seeking;
@property(readonly, nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
@property(readonly, nonatomic) _Bool readyToPlay; // @synthesize readyToPlay=_readyToPlay;
@property(readonly, nonatomic) long long contentProtectionMode; // @synthesize contentProtectionMode=_contentProtectionMode;
@property(readonly, nonatomic) long long playerMode; // @synthesize playerMode=_playerMode;
@property(nonatomic) __weak id <IGFNFVideoPlayerLiveDelegate> liveDelegate; // @synthesize liveDelegate=_liveDelegate;
@property(nonatomic) __weak id <IGFNFVideoPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) _Bool audioEnabled; // @synthesize audioEnabled=_audioEnabled;
- (void)_promptForQualitySelection;
- (void)_selectedDebugTabChanged:(id)arg1;
@property(readonly, nonatomic) NSDictionary *videoBugReportMetaData;
- (id)loggingParams:(id)arg1 extras:(id)arg2;
- (void)_announcePlaybackStateChangesToState:(long long)arg1;
- (void)_updateFrameLoggingData:(struct FNFPlayerState)arg1;
- (void)_notifyFailedToPrepareForPlaybackIfPlayerFailed:(long long)arg1;
- (void)_removePlaybackNotificationsForAsset:(id)arg1;
- (void)_setupPlaybackNotificationsForAsset:(id)arg1;
- (_Bool)_shouldResetPlayerContents;
- (void)_resetPlayerContentsIfAppropriate;
- (void)_setPlayerSizeWithViewSize:(struct CGSize)arg1;
- (void)_triggerDidLoadVideoInViewDelegateMethodWithPlaybackReason:(long long)arg1;
- (_Bool)canStopExternalPictureInPicture;
- (_Bool)isExternalPictureInPictureSuspended;
- (_Bool)isExternalPictureInPictureActive;
- (_Bool)isExternalPictureInPicturePossible;
- (void)stopExternalPictureInPicture;
- (void)startExternalPictureInPicture;
- (void)playerStateUpdatedForVideoStallEndedEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForVideoStallStartedEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForBackgroundLongStallingEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForStallEndedEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForAssetRepresentationIDChangedEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForFrameLoggingEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForDidSetShowCaptionsEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForFrameDidRender:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForFrameDidDisplayEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForDidPauseEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2 pauseContext:(id)arg3;
- (void)playerStateUpdatedForDidStartPlayEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2 playContext:(id)arg3;
- (void)playerStateUpdatedForDidRequestPlayingEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2 playContext:(id)arg3;
- (void)playerStateUpdatedForMutedEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForPlaybackDidUnDryEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForPlaybackDidDryOutEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForPlayerItemDidFailEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForPlayerItemDidWarnEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForPlayerItemDurationChangedEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForPlayerItemTimeLoadedChangedEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForPlaybackTimeUpdatedEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForLayerDidLayoutSubLayersEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForIsReadyForDisplayEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2 playContext:(id)arg3;
- (void)playerStateUpdatedForPlayerDidSeekToTimeEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForPlayerStalledEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForPlaybackEndedEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForRateUpdatedEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForCurrentItemUpdatedEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (void)playerStateUpdatedForStatusUpdatedEvent:(struct FNFPlayerState)arg1 loggingContext:(id)arg2;
- (id)playerStateUpdateCallbackQueue;
- (void)_representationChangedFromPreviousRepresentationId:(id)arg1;
@property(readonly, nonatomic) UIView *videoView;
- (void)_mediaServiceReset:(id)arg1;
- (void)_audioSessionInterruption:(id)arg1;
- (void)_onTimeRangesUpdated:(id)arg1;
- (void)_logAudioStateWithExtras:(id)arg1;
- (id)_videoStartedPlayingLoggingParamsWithReason:(long long)arg1;
- (void)_videoPlayerDidChangePlaybackTime:(CDStruct_1b6d18a9)arg1;
- (void)_updateCurrentThreadSafeTime:(CDStruct_1b6d18a9)arg1;
- (void)_playerItemDidGenerateWarning:(id)arg1;
- (void)_playerItemDidFail:(id)arg1;
- (void)_playerItemDidStall:(id)arg1;
- (void)_playerItemDidPlayToEnd:(id)arg1;
- (void)_applicationDidBecomeActive;
- (void)viewabilityPercentageDidChange:(id)arg1;
- (id)viewabilityVideoView;
- (id)viewabilityPercentageDictionaryWithIgnoreDefaultValue:(_Bool)arg1;
- (void)protectedContentDetected:(_Bool)arg1;
- (void)setUserPreferredQuality:(long long)arg1 withReason:(long long)arg2;
- (void)configureDebugIndicatorViewWithIsPreloaded:(_Bool)arg1;
- (void)notifyPlayerShouldStart;
- (void)didUpdateViewSize:(struct CGSize)arg1;
- (void)didEnterPIP:(_Bool)arg1 viewSize:(struct CGSize)arg2;
@property(readonly, copy, nonatomic) NSString *currentRepresentationId;
- (long long)currentState;
@property(readonly, nonatomic) double currentFrameTime;
- (double)_lastStartingTime;
@property(readonly, nonatomic) double currentTime;
- (void)setVolume:(double)arg1;
- (void)setGravity:(long long)arg1;
- (void)_updateAudioEnabledWithReason:(long long)arg1;
- (void)setAudioEnabled:(_Bool)arg1 reason:(long long)arg2;
- (_Bool)_shouldAddFrameInfoForVideoState:(long long)arg1;
- (_Bool)_isLiveAsset;
- (double)volume;
- (_Bool)isPlaying;
@property(readonly, nonatomic) _Bool hasPausedRequest;
@property(readonly, nonatomic) _Bool hasError;
@property(readonly, nonatomic) long long loopCount;
@property(readonly, nonatomic) double duration;
- (_Bool)hasAsset;
@property(readonly, nonatomic) struct CGSize currentVideoSize;
@property(readonly, nonatomic) _Bool assetHasAudio;
@property(nonatomic) __weak id <FNFPictureInPictureStatusUpdate> externalPictureInPictureDelegate;
- (void)setExternalPictureInPictureBackgroundPlaybackEnabled:(_Bool)arg1;
- (void)setDelegate:(id)arg1 playbackReason:(long long)arg2;
- (void)_updateDebugOverlay;
- (id)assetDebugDetails;
- (id)debugDetails;
- (void)resetViewability;
- (void)setupViewabilityWithVideoViewLogger:(id)arg1;
- (void)setPreventSleep:(_Bool)arg1;
- (void)assetFailedToPrepareForPlayback:(id)arg1;
- (void)currentFrameWithCompletion:(CDUnknownBlockType)arg1;
- (void)_transitionToVideoExitedWithExitReason:(long long)arg1 stopReason:(long long)arg2 error:(id)arg3;
- (void)_resetPlaybackStates;
- (void)_unobserveKVO;
- (void)prepareForReuseWithCompletion:(CDUnknownBlockType)arg1;
- (void)_pauseTransitionFromStopReason:(long long)arg1 pauseReasonDebugString:(id)arg2 error:(id)arg3;
- (void)_pauseWithReason:(long long)arg1 pauseReasonDebugString:(id)arg2;
- (void)_resetWithExitReason:(long long)arg1 stopReason:(long long)arg2 error:(id)arg3;
- (void)resetWithCurrentLoadingError:(id)arg1;
- (void)stopWithReason:(long long)arg1;
- (void)pauseWithReason:(long long)arg1 pauseReasonDebugString:(id)arg2;
- (void)pauseWithReason:(long long)arg1;
- (long long)_playRequestedState;
- (void)_transitionToVideoShouldStartIfNeeded;
- (void)playWithReason:(long long)arg1;
- (void)seekToTime:(double)arg1 preciseTime:(_Bool)arg2 trigger:(long long)arg3;
- (void)seekToTime:(double)arg1 preciseTime:(_Bool)arg2;
- (void)seekToTime:(double)arg1 preciseTime:(_Bool)arg2 trigger:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_loadAssetCompleted:(id)arg1 isRetry:(_Bool)arg2 videoSize:(struct CGSize)arg3 duration:(double)arg4 playerStatus:(long long)arg5 assetLoadingError:(id)arg6 playbackReason:(long long)arg7;
- (void)_loadAssetCompleted:(id)arg1 videoSize:(struct CGSize)arg2 duration:(double)arg3 playerItemStatus:(long long)arg4 assetLoadingError:(id)arg5 playbackReason:(long long)arg6;
- (void)asyncLoadFNFAsset:(id)arg1 isRetry:(_Bool)arg2 isLive:(_Bool)arg3 playbackReason:(long long)arg4;
- (void)setRetryStartedWithFNFAsset:(id)arg1;
- (void)loadAsset:(id)arg1 preloadBundle:(id)arg2 isLive:(_Bool)arg3 initialRepresentationId:(id)arg4 loggingConfig:(id)arg5 videoLoggingDataProvider:(id)arg6 enableLogging:(_Bool)arg7 mediaId:(id)arg8 productTypeString:(id)arg9 deferVideoShouldStart:(_Bool)arg10 streamingFormat:(long long)arg11 performanceLogger:(id)arg12 videoProfilerListener:(id)arg13 cacheLogger:(id)arg14 audioOnlyPlayback:(_Bool)arg15 pictureInPictureConfig:(id)arg16 isFacebookVideo:(_Bool)arg17 playbackReason:(long long)arg18;
- (void)loadAudioUrl:(id)arg1 config:(id)arg2;
- (void)loadVideo:(id)arg1 config:(id)arg2 playbackReason:(long long)arg3;
- (void)prepareVideo:(id)arg1 config:(id)arg2;
- (void)_resetPlayerForDrmTypeChangeIfNeeded;
- (void)_setupPlayerWithPlayerMode:(long long)arg1;
- (id)initWithUserSession:(id)arg1 playerMode:(long long)arg2;
- (void)dealloc;
- (id)currentVideoPrefetchDebugInfo;
- (_Bool)isPIP;
- (struct CGSize)reportedViewSize;
- (long long)playbackReason;
- (double)videoLengthInSeconds;
- (double)currentPositionInSeconds;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

