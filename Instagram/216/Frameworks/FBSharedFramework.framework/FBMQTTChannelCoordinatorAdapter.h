//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <FBSharedFramework/FBMQTTChannelCoordinating-Protocol.h>
#import <FBSharedFramework/FBMQTTNetworkStatusChangedListening-Protocol.h>
#import <FBSharedFramework/LigerReachabilityCallback-Protocol.h>

@class FBMQTTChannelEndpointCapabilities, FBMQTTClientCapabilities, FBMQTTClientConfiguration, FBMQTTConfigurations, FBMQTTConnectionConfiguration, FBMQTTCredentials, FBMQTTExperiments, FBMQTTNetworkStatusMonitor, JSONDecoder, NSDictionary, NSMapTable, NSMutableArray, NSString;
@protocol FBAnalyticsCounterLogging><FBAnalyticsLogManaging><FBAnalyticsLogging, FBMQTTAnalyticsLogger, OS_dispatch_queue;

@interface FBMQTTChannelCoordinatorAdapter : NSObject <FBMQTTNetworkStatusChangedListening, LigerReachabilityCallback, FBMQTTChannelCoordinating>
{
    FBMQTTExperiments *_experiments;
    FBMQTTClientCapabilities *_clientCapabilities;
    FBMQTTChannelEndpointCapabilities *_endpointCapabilities;
    FBMQTTNetworkStatusMonitor *_networkStatusMonitor;
    JSONDecoder *_jsonDecoder;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_jsonEncodingQueue;
    NSObject<OS_dispatch_queue> *_jsonDecodingQueue;
    NSObject<OS_dispatch_queue> *_dnsResolverQueue;
    struct shared_ptr<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor> _executor;
    struct shared_ptr<facebook::mobile::xplat::executor::InlineSerialExecutor> _inlineExecutor;
    struct shared_ptr<facebook::mqttchannel::WhistleConnectionFactory> _connectionFactory;
    struct shared_ptr<FBMQTTChannelEventLogger> _eventLogger;
    struct shared_ptr<FBMQTTChannelConnectionStateObserver> _connectionStateObserver;
    struct shared_ptr<FBMQTTChannelConnectEventObserver> _connectEventObserver;
    struct shared_ptr<FBMQTTChannelPublishEventObserver> _publishEventObserver;
    struct shared_ptr<FBMQTTChannelSubscribeEventObserver> _subscribeEventObserver;
    struct shared_ptr<facebook::mqttchannel::MQTTChannelCoordinatorProxy> _coordinator;
    struct shared_ptr<facebook::mqttchannel::MQTTChannelAnalytics> _channelAnalytics;
    struct shared_ptr<facebook::mqttchannel::DefaultConnectScheduler::Analytics> _connectSchedulerAnalytics;
    struct unique_ptr<FBWhistleConnectionStatsLogger, std::default_delete<FBWhistleConnectionStatsLogger>> _connectionStatsLogger;
    struct atomic<FBMQTTChannelCoordinatorState> _state;
    FBMQTTConfigurations *_config;
    FBMQTTClientConfiguration *_clientConfig;
    FBMQTTConnectionConfiguration *_connectionConfig;
    CDUnknownBlockType _showOnlineInForegroundBlock;
    CDUnknownBlockType _credentialsAvailableBlock;
    CDUnknownBlockType _credentialsFetcherBlock;
    CDUnknownBlockType _userAgentFormaterBlock;
    NSDictionary *_appSpecificInfo;
    id <FBMQTTAnalyticsLogger> _analyticsLogger;
    id <FBAnalyticsCounterLogging><FBAnalyticsLogManaging><FBAnalyticsLogging> _analyticsShimLogger;
    NSMapTable *_listenerToTokenMap;
    FBMQTTCredentials *_userCredentials;
    NSString *_userAgent;
    NSMutableArray *_preStartListeners;
    NSMutableArray *_preStartPublishers;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)_generateBugReport;
- (vector_b42bd36b)_removeListeners:(id)arg1;
- (vector_6282a862)_addListeners:(id)arg1;
- (void)_stopObserving;
- (void)_startObserving;
- (void)_startIfReady;
- (void)_startWithAvailableCredentials;
- (void)_postNetworkStatusChangeReset;
- (void)_preNetworkStatusChangeReset;
- (void)postIterationWithNetworkStatusChanged;
- (void)preIterationWithNetworkStatusChanged;
- (void)networkStatusChangedFrom:(long long)arg1 to:(long long)arg2;
- (void)removePublisher:(id)arg1;
- (void)addPublisher:(id)arg1;
- (void)removeListeners:(id)arg1;
- (void)removeListener:(id)arg1;
- (void)addListeners:(id)arg1;
- (void)addListener:(id)arg1;
- (_Bool)isStarted;
- (_Bool)isReachable;
- (_Bool)isConnected;
- (long long)state;
- (void)setInBackground:(_Bool)arg1 clientRequestId:(id)arg2;
- (void)sendMQTTKeepAlive;
- (void)credentialsDidBecomeAvailable;
- (void)resetConnectionConfig:(id)arg1;
- (void)updateRegionPreference:(id)arg1;
- (void)stop;
- (void)start;
- (void)configureWithClientConfig:(id)arg1 customConnectionConfiguration:(id)arg2 clientCapabilities:(unsigned long long)arg3 endpointCapabilities:(unsigned long long)arg4 appSpecificInfo:(id)arg5 showOnLineOnForegroundBlock:(CDUnknownBlockType)arg6 credentialsAvailableBlock:(CDUnknownBlockType)arg7 credentialsFetcherBlock:(CDUnknownBlockType)arg8 userAgentFormatterBlock:(CDUnknownBlockType)arg9 analyticsLogger:(id)arg10;
- (id)debugInfo;
- (id)endpointCapabilities;
- (unsigned long long)clientCapabilities;
- (id)connectionConfig;
- (id)clientConfig;
- (id)config;
- (id)mqttSessionIdForAnalytics;
- (long long)networkStatus;
- (id)initWithTopicSubscribeAnnouncer:(id)arg1 reachabilityListener:(id)arg2 experiments:(id)arg3 queue:(id)arg4 analyticsShimLogger:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

