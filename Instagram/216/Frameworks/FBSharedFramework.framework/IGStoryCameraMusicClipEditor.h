//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <FBSharedFramework/IGAudioEditorMainScrubberViewDelegate-Protocol.h>
#import <FBSharedFramework/IGAudioEditorQuickScrubberViewDelegate-Protocol.h>
#import <FBSharedFramework/IGGestureHandler-Protocol.h>
#import <FBSharedFramework/IGMusicStickerLyricsScrubberViewDelegate-Protocol.h>
#import <FBSharedFramework/IGPartialModalSheetListener-Protocol.h>
#import <FBSharedFramework/IGStoryMusicClipsEditorLyricsCaptureToggleViewDelegate-Protocol.h>
#import <FBSharedFramework/IGStoryMusicTrackPlaybackEventListener-Protocol.h>
#import <FBSharedFramework/IGStoryPrecaptureMusicBrowserViewControllerDelegate-Protocol.h>

@class IGARAudioEffectData, IGAudioBrowserCameraLogger, IGAudioEditorMainScrubberView_DEPRECATED, IGAudioEditorQuickScrubberView, IGAudioEditorStoryHeaderView, IGAudioLyricsTrackModel, IGAudioMusicTrack, IGAudioMusicTrackClip, IGMusicMaxRecordingDurationIndicatorView, IGStoryMusicLyricsScrubberView, IGStoryMusicPlaybackTimePill, IGStoryMusicTrackPlayer, IGStoryPrecaptureMusicBrowserViewController, IGTapButton, IGUserSession, NSArray, NSString, UILabel, UISelectionFeedbackGenerator, UIView;
@protocol IGStoryCameraMusicClipEditorDelegate;

@interface IGStoryCameraMusicClipEditor : UIViewController <IGStoryPrecaptureMusicBrowserViewControllerDelegate, IGMusicStickerLyricsScrubberViewDelegate, IGAudioEditorQuickScrubberViewDelegate, IGAudioEditorMainScrubberViewDelegate, IGPartialModalSheetListener, IGStoryMusicClipsEditorLyricsCaptureToggleViewDelegate, IGStoryMusicTrackPlaybackEventListener, IGGestureHandler>
{
    IGUserSession *_userSession;
    UIView *_dimmingView;
    IGAudioEditorStoryHeaderView *_headerView;
    IGStoryMusicLyricsScrubberView *_lyricsScrubberView;
    IGAudioEditorQuickScrubberView *_quickSliderView;
    IGAudioEditorMainScrubberView_DEPRECATED *_mainScrubberView;
    UISelectionFeedbackGenerator *_feedbackGenerator;
    IGStoryMusicPlaybackTimePill *_playbackTimePill;
    IGAudioMusicTrack *_musicTrack;
    IGStoryMusicTrackPlayer *_musicPlayer;
    IGARAudioEffectData *_audioEffectData;
    IGStoryPrecaptureMusicBrowserViewController *_musicBrowserViewController;
    IGAudioBrowserCameraLogger *_logger;
    UILabel *_musicPickerLabel;
    IGTapButton *_clipDurationToggleButton;
    IGMusicMaxRecordingDurationIndicatorView *_clipDurationView;
    _Bool _isARAudioEffectDataRequired;
    double _maxClipDuration;
    _Bool _scrubbing;
    id <IGStoryCameraMusicClipEditorDelegate> _delegate;
    IGAudioLyricsTrackModel *_lyrics;
    NSArray *_beats;
    double _clipStartTime;
    double _totalDuration;
}

- (void).cxx_destruct;
@property(nonatomic) double totalDuration; // @synthesize totalDuration=_totalDuration;
@property(nonatomic) double clipStartTime; // @synthesize clipStartTime=_clipStartTime;
@property(nonatomic, getter=isScrubbing) _Bool scrubbing; // @synthesize scrubbing=_scrubbing;
@property(retain, nonatomic) NSArray *beats; // @synthesize beats=_beats;
@property(retain, nonatomic) IGAudioLyricsTrackModel *lyrics; // @synthesize lyrics=_lyrics;
@property(nonatomic) __weak id <IGStoryCameraMusicClipEditorDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool isARAudioEffectDataRequired;
- (id)analyticsModule;
- (_Bool)canRespondToGesture:(id)arg1;
- (void)_didTapDoneButton:(id)arg1;
- (void)_didTapSongDetailsButton:(id)arg1;
- (void)_didTapDismissButton:(id)arg1;
- (void)partialModalSheet:(id)arg1 didChangeState:(unsigned long long)arg2;
- (void)partialModalSheet:(id)arg1 willChangeState:(unsigned long long)arg2;
- (void)partialModalSheet:(id)arg1 didUpdateOffset:(double)arg2 presentationProgress:(double)arg3;
- (void)partialModalSheetDidDismiss:(id)arg1;
- (void)precaptureMusicBrowserViewController:(id)arg1 didSelectAudioTrack:(id)arg2;
- (void)precaptureMusicBrowserViewControllerDidCancel:(id)arg1;
- (void)musicClipsEditorLyricsCaptureToggleView:(id)arg1 didToggleLyricsSwitchViewOn:(_Bool)arg2;
- (void)mainScrubberView:(id)arg1 didEndScrollingToTime:(double)arg2;
- (void)mainScrubberView:(id)arg1 didScrollToTime:(double)arg2;
- (void)mainScrubberView:(id)arg1 didBeginScrollingAtTime:(double)arg2;
- (void)quickScrubberViewDidEndSliding:(id)arg1;
- (void)quickScrubberView:(id)arg1 didSlideToTime:(double)arg2;
- (void)quickScrubberViewDidBeginSliding:(id)arg1;
- (void)musicStickerLyricsScrubberViewDidUpdateActiveCell:(id)arg1;
- (void)musicStickerLyricsScrubberViewDidEndScrubbing:(id)arg1;
- (void)musicStickerLyricsScrubberView:(id)arg1 didScrollToTime:(double)arg2;
- (void)musicStickerLyricsScrubberViewDidBeginScrubbing:(id)arg1;
- (void)musicTrackPlayer:(id)arg1 effectivePlaybackRateDidChange:(double)arg2;
- (void)musicTrackPlayerDidPlayToEnd:(id)arg1;
- (void)musicTrackPlayer:(id)arg1 didUpdateStallState:(_Bool)arg2;
- (void)musicTrackPlayer:(id)arg1 didUpdatePlaybackState:(_Bool)arg2;
- (void)musicTrackPlayer:(id)arg1 didDetermineDuration:(double)arg2 ofAudioAsset:(id)arg3;
- (void)musicTrackPlayer:(id)arg1 didUpdateToPlaybackTime:(double)arg2;
- (void)musicTrackPlayer:(id)arg1 didChangeToAsset:(id)arg2;
- (void)_pauseFadingVolumeOut;
- (void)_playFadingVolumeIn;
@property(nonatomic) _Bool deleteButtonVisible;
@property(retain, nonatomic) IGAudioMusicTrackClip *musicTrackClip;
- (void)_didTapClipDurationToggleButton;
- (double)_currentClipDuration;
@property(readonly, nonatomic) IGARAudioEffectData *audioEffectData;
- (void)_setClipStartTime:(double)arg1 animated:(_Bool)arg2;
- (void)viewDidLayoutSubviews;
- (void)_applicationDidEnterForeground:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithMusicTrackClip:(id)arg1 musicBrowserViewController:(id)arg2 userSession:(id)arg3 maxClipDuration:(double)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

