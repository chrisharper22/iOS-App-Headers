//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <FBSharedFramework/FBFilter.h>

#import <FBSharedFramework/NSCopying-Protocol.h>
#import <FBSharedFramework/NSFastEnumeration-Protocol.h>

@class FBBGRAtoYUVConverterFilter, FBCCPixelBufferPoolCache, FBIGLUFilter, FBImageFilter, NSError, NSHashTable, NSMutableArray;
@protocol FBFilterCropping;

@interface FBFilterGroup : FBFilter <NSCopying, NSFastEnumeration>
{
    shared_ptr_eefa0e38 _device;
    NSMutableArray *_filters;
    NSMutableArray *_filtersRuntime;
    NSHashTable *_croppableFilters;
    FBBGRAtoYUVConverterFilter *_BGRAToYUVFilter;
    FBImageFilter *_YUVToBGRAFilter;
    long long _outputFilterIndex;
    _Bool _supportHDR;
    _Bool _isFiltersOutputPixelFormatRGBA16;
    FBIGLUFilter *_colorConvertFilter;
    id <FBFilterCropping> _configureCacheFilter;
    struct CGSize _configureCacheInputSize;
    struct CGSize _configureCacheOutputSize;
    _Bool _needsConfigure;
    struct SharedMutexImpl<false, void, std::atomic, folly::SharedMutexPolicyDefault> _dataMutex;
    FBCCPixelBufferPoolCache *_pixelBufferPoolCache;
    struct __CVOpenGLESTextureCache *_textureCache;
    NSError *_lastRenderingError;
    _Bool _isIGLMetal;
    _Bool _cropAspectFitUsingPreviewAspectRatio;
    struct CGRect _cropRectangle;
    struct _GLKMatrix4 _contentTransform;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property _Bool cropAspectFitUsingPreviewAspectRatio; // @synthesize cropAspectFitUsingPreviewAspectRatio=_cropAspectFitUsingPreviewAspectRatio;
@property(nonatomic) struct _GLKMatrix4 contentTransform; // @synthesize contentTransform=_contentTransform;
@property(nonatomic) struct CGRect cropRectangle; // @synthesize cropRectangle=_cropRectangle;
- (void)finalizeRendering;
- (id)_colorConvertedSurfaceFrom:(id)arg1 withOutputSize:(struct CGSize)arg2 time:(CDStruct_1b6d18a9)arg3;
- (_Bool)_render:(id)arg1 depthBuffer:(id)arg2 additionalData:(id)arg3 to:(id *)arg4 time:(CDStruct_1b6d18a9)arg5 renderingMode:(unsigned long long)arg6;
- (_Bool)_renderUsingFilter:(id)arg1 depthBuffer:(id)arg2 additionalData:(id)arg3 source:(id)arg4 to:(id)arg5 time:(CDStruct_1b6d18a9)arg6 renderingMode:(unsigned long long)arg7;
- (void)_applyCropRect:(struct CGRect)arg1 withInputSize:(struct CGSize)arg2 toCropFilter:(id)arg3;
- (void)_configureCroppingFilter:(id)arg1 toCropWithInputSize:(struct CGSize)arg2 outputSize:(struct CGSize)arg3;
- (_Bool)_allFiltersAllowCroppingInput;
- (id)convertSurface:(id)arg1 toFormat:(unsigned long long)arg2 outputSize:(struct CGSize)arg3 time:(CDStruct_1b6d18a9)arg4;
- (id)surfaceOfPixelFormat:(unsigned long long)arg1 size:(struct CGSize)arg2;
- (id)lastRenderingError;
- (_Bool)render:(id)arg1 depthBuffer:(id)arg2 additionalData:(id)arg3 to:(id)arg4 time:(CDStruct_1b6d18a9)arg5 options:(unsigned long long)arg6 renderingMode:(unsigned long long)arg7;
- (_Bool)render:(id)arg1 to:(id)arg2 time:(CDStruct_1b6d18a9)arg3;
- (_Bool)iglRender:(id)arg1 to:(id)arg2 time:(CDStruct_1b6d18a9)arg3;
- (void)_insertImageFilterIfNeeded;
- (id)runtimeFilters;
- (void)_filtersChanged;
- (void)setFilterContext:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_183601bc *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)filtersAtIndexes:(id)arg1;
- (unsigned long long)indexOfFilter:(id)arg1;
@property(readonly, nonatomic) FBFilter *lastFilter;
@property(readonly, nonatomic) FBFilter *firstFilter;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (void)removeFiltersAtIndexes:(id)arg1;
- (void)removeFilterAtIndex:(unsigned long long)arg1;
- (void)removeLastFilter;
- (void)insertFilter:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addFilter:(id)arg1;
@property(readonly) unsigned long long count;
- (unsigned long long)outputPixelFormat;
- (unsigned long long)inputPixelFormat;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDevice:(shared_ptr_eefa0e38)arg1 initialFilters:(id)arg2 pixelBufferPoolCache:(id)arg3 textureCache:(struct __CVOpenGLESTextureCache *)arg4 supportHDR:(_Bool)arg5;

@end

