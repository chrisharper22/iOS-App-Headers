//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <FBSharedFramework/IGNetworking-Protocol.h>
#import <FBSharedFramework/IGSSOTokenWriterDelegate-Protocol.h>

@class IGRequestPolicy, IGURLRequest, NSArray, NSDictionary, NSObject;
@protocol IGRequestToken, IGSystemMessageListener, OS_dispatch_queue;

@protocol IGAPIClient <IGNetworking, IGSSOTokenWriterDelegate>
@property(nonatomic) __weak id <IGSystemMessageListener> systemMessageDelegate;
- (NSDictionary *)routingHeaders;
- (NSArray *)APIHeadersAsCookies;
- (id <IGRequestToken>)startStreamingAPIRequest:(IGURLRequest *)arg1 policy:(IGRequestPolicy *)arg2 completionQueue:(NSObject<OS_dispatch_queue> *)arg3 cacheHandler:(void (^)(NSDate *, NSDate *, NSDate *, id))arg4 bytesSentHandler:(void (^)(long long, long long, long long))arg5 firstByteFlushedHandler:(void (^)(long long))arg6 lastByteAckedHandler:(void (^)(long long, long long))arg7 bytesReceivedHandler:(void (^)(char *, unsigned long long, long long))arg8 parsingHandler:(id (^)(NSDictionary *, IGAPIClientResponseMetadata *, id *))arg9 successHandler:(void (^)(IGHTTPResponse *, IGNetworkRequestSummary *))arg10 failureHandler:(void (^)(IGHTTPResponse *, NSDictionary *, NSError *))arg11;
- (id <IGRequestToken>)startAPIRequest:(IGURLRequest *)arg1 policy:(IGRequestPolicy *)arg2 completionQueue:(NSObject<OS_dispatch_queue> *)arg3 cacheHandler:(void (^)(NSDate *, NSDate *, NSDate *, id))arg4 bytesSentHandler:(void (^)(long long, long long, long long))arg5 firstByteFlushedHandler:(void (^)(long long))arg6 lastByteAckedHandler:(void (^)(long long, long long))arg7 parsingHandler:(id (^)(NSDictionary *, IGAPIClientResponseMetadata *, id *))arg8 successHandler:(void (^)(IGHTTPResponse *, id))arg9 failureHandler:(void (^)(IGHTTPResponse *, NSDictionary *, NSError *))arg10;
- (id <IGRequestToken>)startAPIRequest:(IGURLRequest *)arg1 policy:(IGRequestPolicy *)arg2 completionQueue:(NSObject<OS_dispatch_queue> *)arg3 cacheHandler:(void (^)(NSDate *, NSDate *, NSDate *, id))arg4 parsingHandler:(id (^)(NSDictionary *, IGAPIClientResponseMetadata *, id *))arg5 successHandler:(void (^)(IGHTTPResponse *, id))arg6 failureHandler:(void (^)(IGHTTPResponse *, NSDictionary *, NSError *))arg7;
- (id <IGRequestToken>)startAPIRequest:(IGURLRequest *)arg1 policy:(IGRequestPolicy *)arg2 successHandler:(void (^)(IGHTTPResponse *, id))arg3 failureHandler:(void (^)(IGHTTPResponse *, NSDictionary *, NSError *))arg4;
@end

