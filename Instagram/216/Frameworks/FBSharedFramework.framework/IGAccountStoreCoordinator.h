//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <FBSharedFramework/IGOneTapUsersStoreDelegate-Protocol.h>

@class IGCloudBasedLoginAccountStore, IGDeviceBasedLoginAccountStore, IGDeviceBasedLoginAccountStoreV2, IGOneTapUsersStore, NSString;
@protocol IGAccountStoreCoordinatorAnnouncer, IGAccountStoreCoordinatorDelegate;

@interface IGAccountStoreCoordinator : NSObject <IGOneTapUsersStoreDelegate>
{
    id <IGAccountStoreCoordinatorAnnouncer> _announcer;
    IGDeviceBasedLoginAccountStore *_accountStoreV1;
    IGDeviceBasedLoginAccountStoreV2 *_accountStoreV2;
    IGCloudBasedLoginAccountStore *_cloudCredentialStore;
    IGOneTapUsersStore *_oneTapUsersStore;
    _Bool _storeV2Enabled;
    _Bool _isAAEnabled;
    id <IGAccountStoreCoordinatorDelegate> _delegate;
    NSString *_cloudIdentifier;
}

- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *cloudIdentifier; // @synthesize cloudIdentifier=_cloudIdentifier;
@property(nonatomic, getter=isStoreV2Enabled) _Bool storeV2Enabled; // @synthesize storeV2Enabled=_storeV2Enabled;
@property(nonatomic) __weak id <IGAccountStoreCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
- (void)clearCloudKeychainStore;
- (void)clearOneTapKeychainStore;
- (void)clearOneTapUserDefaultsStore;
- (id)debugVersionName;
- (id)_validAccountsForKeychainAccounts:(id)arg1 andUserDefaultsPks:(id)arg2;
- (void)usersStore:(id)arg1 didFindEnabledUser:(id)arg2 withMultipleAccountHandler:(id)arg3 surface:(long long)arg4 analyticsLogger:(id)arg5;
- (id)enabledAccounts;
- (id)oneTapLoginEnabledUserPKs;
- (void)sendOneTapLoginStatusForUserSession:(id)arg1;
- (_Bool)isOneTapLoginEnabledForUserWithPK:(id)arg1;
- (void)removeUserPkFromOneTapLoginEnabledUserPK:(id)arg1 surface:(long long)arg2 analyticsLogger:(id)arg3;
- (void)addUserPksToOneTapLoginEnabledUserPKs:(id)arg1 surface:(long long)arg2 analyticsLogger:(id)arg3 multipleAccountHandler:(id)arg4;
- (void)_migrateToAAIfNecessaryWithAAStore:(id)arg1;
- (void)removeAuthHeaderForUserPK:(id)arg1;
- (void)removeNonceForUserPK:(id)arg1;
- (void)removeAllLoginDeferredAccounts;
- (void)removeLoginDeferredAccountsForPks:(id)arg1 successHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)removeAccountForUserPK:(id)arg1 successHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)writeAuthHeader:(id)arg1 forData:(id)arg2;
- (void)writeCloudNonce:(id)arg1 forUserPK:(id)arg2 successHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)writeBiometricsStatusForUserPK:(id)arg1 enabled:(_Bool)arg2;
- (void)writeLoginDeferredAccount:(id)arg1 successHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)writeNotificationCount:(id)arg1 forUserPK:(id)arg2;
- (void)writeLogoutTimestampForUserPK:(id)arg1;
- (void)writeSSOCredentialsToKeychainWithData:(id)arg1 surface:(long long)arg2 analyticsLogger:(id)arg3 successHandler:(CDUnknownBlockType)arg4;
- (void)fetchLoginDeferredAccountsWithSuccessHandler:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)fetchSSOEnabledAccountsWithMultipleAccountHandler:(id)arg1 enabledUserPKs:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchCloudBasedCredentialForUserPk:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchMostRecentEnabledUserPKWithSuccessHandler:(CDUnknownBlockType)arg1 errorHandler:(CDUnknownBlockType)arg2;
- (void)fetchSSOEnabledAccountsWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchNonceForUserPK:(id)arg1 successHandler:(CDUnknownBlockType)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (void)fetchNonceToUserMapForAccounts:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)unsubscribe:(id)arg1;
- (void)subscribe:(id)arg1;
- (id)initWithAccountStoreV1:(id)arg1 accountStoreV1AA:(id)arg2 accountStoreV2:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

