//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class FBWatchdogTimerConfiguration, NSSet, NSThread;
@protocol FBWatchdogExpiryHandling;

@interface FBWatchdogTimer : NSObject
{
    NSThread *_watchdogThread;
    struct __CFRunLoopObserver *_keepaliveObserver;
    struct __CFRunLoopObserver *_firstRunloopPassObserver;
    struct atomic<double> _lastIdleEndTime;
    struct atomic<bool> _idle;
    struct atomic<bool> _firstRunLoopIteration;
    struct atomic<double> _largestTimeoutExpired;
    struct atomic<unsigned long> _currentRunLoopActivity;
    struct atomic<bool> _isEnteringForeground;
    struct atomic<bool> _isInColdStart;
    _Bool _isMonitoring;
    NSSet *_timeouts;
    double _timerWakeupInterval;
    struct atomic<bool> _suspendedForExceptionHandler;
    id <FBWatchdogExpiryHandling> _watchdogExpiryHandler;
    _Bool _enabled;
    _Bool _forceWatchdogTimerForTesting;
    FBWatchdogTimerConfiguration *_configuration;
    double _watchdogThreadCancelInterval;
    struct __CFRunLoop *_runLoop;
}

+ (id)mainThreadWatchdog;
+ (void)createMainThreadWatchdogWithConfiguration:(id)arg1 watchdogExpiryHandler:(id)arg2;
- (void).cxx_destruct;
@property(nonatomic) struct __CFRunLoop *runLoop; // @synthesize runLoop=_runLoop;
@property(nonatomic) double watchdogThreadCancelInterval; // @synthesize watchdogThreadCancelInterval=_watchdogThreadCancelInterval;
@property(nonatomic) _Bool forceWatchdogTimerForTesting; // @synthesize forceWatchdogTimerForTesting=_forceWatchdogTimerForTesting;
@property(copy, nonatomic) FBWatchdogTimerConfiguration *configuration; // @synthesize configuration=_configuration;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
- (void)_stopMonitoringThreads;
- (void)_startMonitoringThreads;
- (void)_watchdogThreadMethod;
- (void)_watchdogMethod;
- (void)_stopObservingNotifications;
- (void)_startObservingNotifications;
- (void)_didBecomeActiveNotification;
- (void)_willEnterForegroundNotification;
- (void)didReceiveLifecycleEvent:(long long)arg1;
- (void)_onDidEnterBackground;
- (void)_onResignActive;
- (void)_stopWatchdog;
- (void)_startWatchdogIfNeeded;
- (id)description;
- (void)dealloc;
- (void)_calculateTimerWakeupInterval;
- (void)_processTimeouts;
- (id)lastStallTraceID;
- (void)_updateStartTypeLogging;
- (id)initWithConfiguration:(id)arg1 watchdogExpiryHandler:(id)arg2;

@end

