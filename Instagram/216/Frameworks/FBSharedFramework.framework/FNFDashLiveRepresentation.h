//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <FBSharedFramework/FNFDashRepresentable-Protocol.h>

@class FNFDashLiveLatencyPIDController, FNFDashLiveTimelineList, FNFDashTrackMetadata, FNFDashVideoPlayerMetadata, FNFMpdTimelineEntry, NSMutableDictionary;
@protocol FNFBandwidthProvider, FNFDashHeading, FNFLogging;

@interface FNFDashLiveRepresentation : NSObject <FNFDashRepresentable>
{
    struct FNFDashConfig _config;
    CDStruct_c72663c7 _sessionConfig;
    FNFDashTrackMetadata *_trackMetadata;
    _Bool _trackMetadataIsFinal;
    _Bool _hasSeen410Segment;
    _Bool _removePredictiveUntilManifestUpdate;
    _Bool _predictiveDisabledSegmentsTooLarge;
    _Bool _latencyMitigationEnabled;
    _Bool _hasExperiencedStall;
    unsigned int _bandwidth;
    _Bool _dynamicQualityDropped;
    int _predictiveMediaEndNumber;
    int _numPredictiveSegmentCorrection;
    int _excessTimelineCount;
    FNFMpdTimelineEntry *_predictiveMediaEndEntry;
    long long _track;
    id <FNFDashHeading> _header;
    NSMutableDictionary *_httpRequestHeaders;
    FNFDashLiveTimelineList *_liveTimelineList;
    FNFDashVideoPlayerMetadata *_playerMetadata;
    id <FNFBandwidthProvider> _bandwidthProvider;
    double _lastTimestampStallSkipCatchup;
    FNFDashLiveLatencyPIDController *_latencyPIDController;
    id <FNFLogging> _logger;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)_catchupWithPlaybackTime:(CDStruct_1b6d18a9)arg1;
- (double)_secondsFromLiveHeadToStartPlayback;
- (int)_predictiveSequenceIndexForTime:(CDStruct_1b6d18a9)arg1;
- (CDStruct_1b6d18a9)_durationToPredictiveSequenceIndex:(int)arg1;
- (id)_predictiveSegmentForSequenceIndex:(int)arg1;
- (int)_predictiveNumberForSequenceIndex:(int)arg1;
- (int)_numPredictiveSegmentsWithCorrection;
- (_Bool)_predictiveSegmentsEnabled;
- (_Bool)_isPredictive;
- (long long)latestSegmentAvailable;
- (double)suggestedPlaybackRateWithPlaybackTime:(CDStruct_1b6d18a9)arg1;
- (double)getTimeToTimelineHead:(CDStruct_1b6d18a9)arg1;
- (_Bool)isPredictionDisabled;
- (int)prefetchedSegmentsCount;
- (CDStruct_1b6d18a9)manifestTimeForChunkSequenceIndex:(int)arg1;
- (id)typeString;
- (void)updatesStopped;
- (int)lastChunkIdAvailable;
- (id)manifestExperimentDescription;
- (id)tagset;
- (id)encodingTag;
- (id)codecString;
- (unsigned long long)codecFormat;
- (unsigned int)chunkDurationMs;
- (_Bool)updateOnErrorIsFatal:(id)arg1 atSequenceIndex:(int)arg2 recoverySegmentId:(int)arg3;
- (id)resourceHost;
- (_Bool)containsABRPolicyTag:(id)arg1;
- (_Bool)dynamicQualityDropped;
- (unsigned int)maxBandwidth;
- (unsigned int)bandwidth;
- (struct CGSize)videoSize;
- (id)qualityLabel;
- (id)urlForPrefetchCacheForChunkSequenceIndex:(int)arg1;
- (void)removeTimelinesWithMaxSequenceIndex:(int)arg1;
- (void)resetTimelines;
- (void)updateWithDVLData:(id)arg1;
- (_Bool)updateWithTrackMetadata:(id)arg1 isFinalUpdate:(_Bool)arg2 playbackTime:(CDStruct_1b6d18a9)arg3 currentSequenceIndex:(int)arg4 firstUnfetchedSequenceIndex:(int)arg5;
- (id)fetchRangeForChunkSequenceIndex:(int)arg1;
- (id)fetchRangeForHeader;
- (int)sequenceIndexForTime:(CDStruct_1b6d18a9)arg1;
- (CDStruct_1b6d18a9)absoluteEndTimeForChunkSequenceIndex:(int)arg1;
- (CDStruct_1b6d18a9)absoluteStartTimeForChunkSequenceIndex:(int)arg1;
- (CDStruct_1b6d18a9)endTimePositionForChunkSequenceIndex:(int)arg1;
- (CDStruct_1b6d18a9)startTimePositionForChunkSequenceIndex:(int)arg1;
- (int)numberOfChunks;
- (id)audioChannelConfiguration;
- (id)audioCodecDescription;
- (id)audioStreamExtraParameters;
- (struct AudioStreamBasicDescription)asbd;
- (id)projection;
- (CDStruct_1b6d18a9)duration;
- (id)header;
- (_Bool)isDefault;
- (id)representationId;
- (id)description;
- (id)initWithConfig:(struct FNFDashConfig)arg1 sessionConfig:(CDStruct_c72663c7)arg2 trackMetadata:(id)arg3 containerFormat:(unsigned char)arg4 trackMetadataIsFinal:(_Bool)arg5 track:(long long)arg6 bandwidthProvider:(id)arg7 playerMetadata:(id)arg8 source:(unsigned long long)arg9 logger:(id)arg10;

@end

