//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <FBSharedFramework/FNFInternalPlayerDelegate-Protocol.h>
#import <FBSharedFramework/FNFPlayerControlling-Protocol.h>
#import <FBSharedFramework/FNFProxyServerDelegate-Protocol.h>

@class AVPlayer, AVPlayerItem, CALayer, FNFHeadlessAudioEngine, FNFHeadlessDisplayEngine, FNFPictureInPictureController, FNFPlayerExponentialBackoffTimer, FNFPlaylistBuilder, FNFProxyServer, FNFRealClock, FNFSynchronousPlayer, NSString, NSTimer;
@protocol FNFAVPlayerLayer, FNFAsset, FNFInternalPlayerDelegate;

@interface FNFInceptionPlayer : NSObject <FNFInternalPlayerDelegate, FNFProxyServerDelegate, FNFPlayerControlling>
{
    id <FNFInternalPlayerDelegate> _delegate;
    AVPlayer *_player;
    CALayer<FNFAVPlayerLayer> *_playerLayer;
    AVPlayerItem *_playerItem;
    id <FNFAsset> _fnfAsset;
    FNFSynchronousPlayer *_fnfPlayer;
    struct FNFPlayerInternalState _internalPlayerState;
    NSString *_identifier;
    FNFProxyServer *_proxyServer;
    FNFPlaylistBuilder *_playlistBuilder;
    FNFHeadlessAudioEngine *_audioEngine;
    FNFHeadlessDisplayEngine *_displayEngine;
    FNFPlayerExponentialBackoffTimer *_exponentialBackoffTimer;
    int _playerErrorRetryCount;
    CDStruct_1b6d18a9 _lastSeekToTime;
    _Bool _shouldRecoverAtPlayer;
    CDStruct_1b6d18a9 _pendingSeek;
    CDStruct_1b6d18a9 _currentTimeOffset;
    CDStruct_1b6d18a9 _currentTime;
    FNFRealClock *_clock;
    NSTimer *_audioSessionTimer;
    _Bool _isPaused;
    _Bool _enableAutoSeekForDRM;
    int _reloadCounter;
    _Bool _playRequested;
    FNFPictureInPictureController *_pictureInPictureController;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) FNFPictureInPictureController *pictureInPictureController; // @synthesize pictureInPictureController=_pictureInPictureController;
- (_Bool)_isTimeToAutoSeek:(double)arg1;
- (_Bool)_isConfigAudioSessionNeeded;
- (void)_syncConfigAudioSession;
- (void)_resetAudioSessionTimer;
- (void)_handleAudioSessionConfig;
- (void)_configAudioSession;
- (void)_reRouteAudioSessionAtTime:(CDStruct_1b6d18a9)arg1;
- (void)_reloadAudioSessionAsApplicable;
- (CDStruct_1b6d18a9)lastFrameRenderedPts;
- (void)dataDidBecomeAvailable;
- (void)internalPlayer:(id)arg1 stateUpdated:(unsigned long long)arg2 playerState:(struct FNFPlayerInternalState)arg3 loggingContext:(id)arg4;
- (void)debug_simulatePlaybackInteruptionWithError:(id)arg1;
- (void)didChangeScreenCaptured;
- (void)didDisconnectWithExternalScreen;
- (void)didConnectWithExternalScreen;
- (void)setAudioTimeDomainPitchAlgorithmEnabled:(_Bool)arg1;
- (void)setAudioDecoder:(id)arg1;
- (void)setAudioEngine:(id)arg1;
- (void)setCaptionParser:(id)arg1;
- (void)removeLevelMeterCallback;
- (void)addLevelMeterCallback:(CDUnknownBlockType)arg1 timeInterval:(CDStruct_1b6d18a9)arg2;
- (void)applicationDidBecomeActive;
- (void)applicationWillResignActive;
- (void)invalidate;
- (id)error;
- (CDStruct_1b6d18a9)lastRequestedStartTime;
- (CDStruct_1b6d18a9)lastStartingTime;
- (CDStruct_1b6d18a9)currentTime;
- (id)currentItem;
- (long long)status;
- (void)playerItemDidFail:(id)arg1;
- (void)playerItemDidPlayToEnd:(id)arg1;
- (void)playerItemDidStall:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_resetClockToTime:(CDStruct_1b6d18a9)arg1;
- (void)_removeObserverForPlayerItem:(id)arg1;
- (void)_registerObserverForPlayerItem:(id)arg1;
- (void)addRepresentationChangedCallback:(CDUnknownBlockType)arg1;
- (id)createPeriodicTimeObserverForInterval:(CDStruct_1b6d18a9)arg1 followMasterClock:(_Bool)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)flushTimeObserver:(id)arg1;
- (void)addTimeObserver:(id)arg1;
- (void)removeTimeObserver:(id)arg1;
- (float)rate;
- (void)setRate:(float)arg1 context:(id)arg2;
- (void)setRate:(float)arg1;
- (void)setShowCaptions:(_Bool)arg1;
- (_Bool)showCaptions;
- (void)setEnableClientBackgroundPlayback:(_Bool)arg1;
- (_Bool)isMuted;
- (void)setMuted:(_Bool)arg1 isUserInitiated:(_Bool)arg2 context:(id)arg3;
- (float)volume;
- (void)setVolume:(float)arg1 rampTime:(float)arg2;
- (_Bool)_shouldSkipBackToBackSeek:(CDStruct_1b6d18a9)arg1;
- (void)_seekToTime:(CDStruct_1b6d18a9)arg1 seekReason:(int)arg2 isSkippable:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3 seekReason:(int)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 seekReason:(int)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)pauseWithPauseReason:(int)arg1 context:(id)arg2;
- (void)pauseWithContext:(id)arg1;
- (void)pause;
- (void)_startPictureInPictureIfEnabled;
- (void)playWithContext:(id)arg1;
- (void)play;
- (void)_callPendingSeekAsApplicable;
- (void)_reloadPlayback;
- (void)_handleAVPlayerError:(id)arg1;
- (void)_resetPlayer;
- (void)_reloadIfKeyRequestTimeout;
- (_Bool)_isProtectedContent;
- (void)_preparePlayer;
- (void)_replaceCurrentItemWithPlayerItemForAVPlayer:(id)arg1;
- (void)replaceCurrentItemWithPlayerItem:(id)arg1 loggingContext:(id)arg2;
- (void)replaceCurrentItemWithPlayerItem:(id)arg1;
- (void)setUserSelectedQuality:(id)arg1;
- (void)setLiveTraceManager:(id)arg1;
- (void)setLogger:(id)arg1;
- (void)setLoggingContext:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id)playerLayer;
- (id)initWithDisplayEngine:(id)arg1 fnfPlayerConfig:(CDStruct_b8b5dd59)arg2;
- (id)initWithPlayerConfig:(CDStruct_b8b5dd59)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

