//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <FBSharedFramework/NSObject-Protocol.h>

@class NSDictionary, NSError, NSObject;
@protocol FNFAVPlayerLayer, FNFPlayerDisplayEngineDelegate, FNFPlayerHeaderDataDelegate, OS_dispatch_queue;

@protocol FNFPlayerDisplayEngine <NSObject>
@property(nonatomic) struct CGAffineTransform preferredTransform;
@property(nonatomic) __weak id <FNFPlayerDisplayEngineDelegate> displayEngineDelegate;
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic) long long status;
@property(retain) struct OpaqueCMTimebase *controlTimebase;
- (void)setAllowInactivePlayback:(_Bool)arg1 drawingOn:(_Bool)arg2;
- (id <FNFPlayerHeaderDataDelegate>)headerDataDelegate;
- (id <FNFAVPlayerLayer>)layer;
- (void)setLoggingContext:(id)arg1;
- (void)willResignActive;
- (void)didBecomeActive;
- (void)requestLastDisplayedSampleBuffer:(void (^)(struct __CVBuffer *))arg1 onQueue:(NSObject<OS_dispatch_queue> *)arg2;
- (void)yieldDecompressedBuffer:(struct __CVBuffer *)arg1 presentationTimeStamp:(CDStruct_1b6d18a9)arg2 presentationDuration:(CDStruct_1b6d18a9)arg3;
- (void)dispatchAsyncOnRenderingThread:(void (^)(void))arg1;
- (void)setRenderingThreadPriority:(double)arg1;
- (void)displayFrameAsApplicable;
- (void)setNeedsDisplayFrame;
- (void)invalidate;
- (void)bypassSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 attributes:(unsigned int)arg2 codec:(unsigned long long)arg3 enqueueInfo:(NSDictionary *)arg4;
- (void)enqueueSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 attributes:(unsigned int)arg2 codec:(unsigned long long)arg3 enqueueInfo:(NSDictionary *)arg4;
- (_Bool)flushIfError;
- (_Bool)seekFrameUpdatesFinished;
- (_Bool)flushDisplayReadySampleBuffers;
- (void)flushAndRemoveImage;
- (void)flush;
- (_Bool)isReadyForMoreMediaData;
- (void)stopRequestingMediaData;
- (void)requestMediaDataWhenReadyOnQueue:(NSObject<OS_dispatch_queue> *)arg1 usingBlock:(void (^)(void))arg2;
- (_Bool)allowRenderingWhileApplicationInactive;
- (void)pauseDisplayLink;
- (void)pause:(int)arg1;
- (void)resume;
- (void)setShouldApplyRotationTransform:(_Bool)arg1;
@end

