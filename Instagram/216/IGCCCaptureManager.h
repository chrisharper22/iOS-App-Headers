//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "FBCameraCaptureFrameDropListener-Protocol.h"
#import "FBCaptureDeviceFormatProvider-Protocol.h"
#import "FBCaptureManagerFlashSceneListener-Protocol.h"
#import "FBCaptureManagerListener-Protocol.h"
#import "FBCapturePOIDetectorListening-Protocol.h"
#import "IGAudioCapturing-Protocol.h"
#import "IGCaptureManagerVideoSampleBufferDelegate-Protocol.h"
#import "IGCaptureManaging-Protocol.h"
#import "IGVideoProcessorControllerDelegate-Protocol.h"

@class AVCaptureVideoPreviewLayer, FBCCFacebookPerformanceLogger, FBCCFacebookWaterfallLogger, FBMPSession, IGCaptureCameraActionQueue, IGCaptureQueueManager, IGFilter, IGMPMediaSharePlayer, IGMPOutput, IGMPVideoProcessorController, IGMediaSharePlayer, IGSystemAudioCaptureSessionInteractor, IGUserSession, NSArray, NSString;
@protocol FBCCAudioPipelineProviding, FBCameraCaptureManaging, IGCaptureManagerAdditionalCaptureMetadataDelegate, IGCaptureManagerAudioSampleBufferDelegate, IGCaptureManagerAudioSessionDelegate, IGCaptureManagerDelegate, IGCaptureManagerPreviewSizeProvider, IGCaptureManagerVideoPreviewSampleBufferDelegate, IGCaptureManagerVideoSampleBufferDelegate, IGCaptureManagerVideoSampleBufferProcessing, IGCaptureManagerVideoSessionDelegate, IGVideoProcessorControlling;

@interface IGCCCaptureManager : NSObject <FBCaptureDeviceFormatProvider, FBCaptureManagerListener, FBCapturePOIDetectorListening, FBCaptureManagerFlashSceneListener, FBCameraCaptureFrameDropListener, IGCaptureManagerVideoSampleBufferDelegate, IGVideoProcessorControllerDelegate, IGCaptureManaging, IGAudioCapturing>
{
    IGUserSession *_userSession;
    IGCaptureQueueManager *_queueManager;
    long long _captureManagerMode;
    unsigned long long _analyticsProductName;
    _Bool _isRecording;
    _Bool _preferPhotoPreset;
    _Bool _allowHighResolutionFormats;
    long long _maxCaptureResolution;
    _Bool _sortFormatsByFOV;
    _Bool _forceBestPhotoCaptureFormat;
    _Bool _hasReceivedFirstFrame;
    _Bool _didBecomeActive;
    struct CGSize _captureBufferSize;
    FBMPSession *_mediaSession;
    id <FBCameraCaptureManaging> _ccCaptureManager;
    IGMPMediaSharePlayer *_mpMediaSharePlayer;
    IGMPOutput *_mpOutput;
    IGSystemAudioCaptureSessionInteractor *_audioCaptureSessionInteractor;
    AVCaptureVideoPreviewLayer *_previewLayer;
    IGCaptureCameraActionQueue *_actionQueue;
    NSArray *_captureDevices;
    _Bool _enableMultiCapture;
    _Bool _alwaysEnableAudioSession;
    long long _numberOfInitialBuffersIgnored;
    long long _numberOfInitialBuffersReceived;
    FBCCFacebookPerformanceLogger *_performanceLogger;
    FBCCFacebookWaterfallLogger *_waterfallLogger;
    _Bool _allowHighResolutionCapture;
    _Bool _hdrVideoCaptureEnabled;
    _Bool _videoMirrored;
    _Bool _audioEnabled;
    _Bool _videoCapturePaused;
    _Bool _hasAREffect;
    _Bool _livePhotoEnabled;
    _Bool _bracketedCaptureEnabled;
    _Bool _needsResume;
    long long _videoOutputOrientation;
    id <FBCCAudioPipelineProviding> _audioPipelineProvider;
    long long _frameRate;
    id <IGCaptureManagerPreviewSizeProvider> _previewSizeProvider;
    IGFilter *_postARFilter;
    NSString *_postARFBFilterIdentifier;
    double _postARFBFilterStrength;
    id <IGCaptureManagerDelegate> _delegate;
    id <IGCaptureManagerVideoSampleBufferProcessing> _videoSampleBufferProcessor;
    id <IGCaptureManagerVideoPreviewSampleBufferDelegate> _videoPreviewSampleBufferDelegate;
    id <IGCaptureManagerVideoSampleBufferDelegate> _videoSampleBufferDelegate;
    id <IGCaptureManagerAudioSampleBufferDelegate> _audioSampleBufferDelegate;
    id <IGCaptureManagerAudioSessionDelegate> _audioSessionDelegate;
    id <IGCaptureManagerVideoSessionDelegate> _videoSessionDelegate;
    id <IGCaptureManagerAdditionalCaptureMetadataDelegate> _additionalCaptureMetadataDelegate;
    IGMPVideoProcessorController *_mpVideoProcessorController;
    long long _sessionPreset;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool needsResume; // @synthesize needsResume=_needsResume;
@property(nonatomic) _Bool bracketedCaptureEnabled; // @synthesize bracketedCaptureEnabled=_bracketedCaptureEnabled;
@property(nonatomic) _Bool livePhotoEnabled; // @synthesize livePhotoEnabled=_livePhotoEnabled;
@property(nonatomic) _Bool hasAREffect; // @synthesize hasAREffect=_hasAREffect;
@property(nonatomic) _Bool videoCapturePaused; // @synthesize videoCapturePaused=_videoCapturePaused;
@property(nonatomic) _Bool audioEnabled; // @synthesize audioEnabled=_audioEnabled;
@property(nonatomic) long long sessionPreset; // @synthesize sessionPreset=_sessionPreset;
@property(nonatomic) _Bool videoMirrored; // @synthesize videoMirrored=_videoMirrored;
@property(retain, nonatomic) IGMPVideoProcessorController *mpVideoProcessorController; // @synthesize mpVideoProcessorController=_mpVideoProcessorController;
@property(nonatomic) __weak id <IGCaptureManagerAdditionalCaptureMetadataDelegate> additionalCaptureMetadataDelegate; // @synthesize additionalCaptureMetadataDelegate=_additionalCaptureMetadataDelegate;
@property(nonatomic) __weak id <IGCaptureManagerVideoSessionDelegate> videoSessionDelegate; // @synthesize videoSessionDelegate=_videoSessionDelegate;
@property(nonatomic) __weak id <IGCaptureManagerAudioSessionDelegate> audioSessionDelegate; // @synthesize audioSessionDelegate=_audioSessionDelegate;
@property(nonatomic) __weak id <IGCaptureManagerAudioSampleBufferDelegate> audioSampleBufferDelegate; // @synthesize audioSampleBufferDelegate=_audioSampleBufferDelegate;
@property(nonatomic) __weak id <IGCaptureManagerVideoSampleBufferDelegate> videoSampleBufferDelegate; // @synthesize videoSampleBufferDelegate=_videoSampleBufferDelegate;
@property(nonatomic) __weak id <IGCaptureManagerVideoPreviewSampleBufferDelegate> videoPreviewSampleBufferDelegate; // @synthesize videoPreviewSampleBufferDelegate=_videoPreviewSampleBufferDelegate;
@property(nonatomic) __weak id <IGCaptureManagerVideoSampleBufferProcessing> videoSampleBufferProcessor; // @synthesize videoSampleBufferProcessor=_videoSampleBufferProcessor;
@property(nonatomic) __weak id <IGCaptureManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <IGCaptureManagerPreviewSizeProvider> previewSizeProvider; // @synthesize previewSizeProvider=_previewSizeProvider;
@property(nonatomic) _Bool hdrVideoCaptureEnabled; // @synthesize hdrVideoCaptureEnabled=_hdrVideoCaptureEnabled;
@property(nonatomic) _Bool allowHighResolutionCapture; // @synthesize allowHighResolutionCapture=_allowHighResolutionCapture;
@property(nonatomic) long long frameRate; // @synthesize frameRate=_frameRate;
@property(retain, nonatomic) id <FBCCAudioPipelineProviding> audioPipelineProvider; // @synthesize audioPipelineProvider=_audioPipelineProvider;
@property(readonly, nonatomic) long long videoOutputOrientation; // @synthesize videoOutputOrientation=_videoOutputOrientation;
- (void)captureManagerDidUpdateIsFlashScene:(_Bool)arg1;
- (void)capturePOIDetectorDidQRCodeDetectionWithCode:(id)arg1 data:(id)arg2 time:(double)arg3 bounds:(struct CGRect)arg4;
- (void)capturePOIDetectorDidRunFaceDetectionWithFaceRect:(struct CGRect)arg1;
- (void)cameraCaptureControllerDidDropVideoFrameAtPresentationTime:(CDStruct_1b6d18a9)arg1 withReason:(id)arg2;
- (void)captureManagerUpdatedPreviousCaptureDevice:(id)arg1 toCurrentCaptureDevice:(id)arg2;
- (void)captureManagerDidFailToLoadAudioSessionWithError:(id)arg1;
- (void)captureManagerHasFinishedLoadingAudioSession;
- (void)captureManagerPreviewDidLoad;
- (void)captureManagerHasEndedCaptureSession;
- (void)captureManagerHasFinishedLoadingCaptureSession;
- (void)captureManagerDidReceiveFirstVideoFrameFromCaptureSessionAtTime:(double)arg1;
- (void)captureManagerDidEncounterRuntimeError:(id)arg1 willRetry:(_Bool)arg2 sessionType:(unsigned long long)arg3;
- (void)captureManagerDidResignInterruptedSessionType:(unsigned long long)arg1;
- (void)captureManagerDidBecomeInterruptedWithReason:(unsigned char)arg1 sessionType:(unsigned long long)arg2;
- (void)captureManagerDidStopRunningSessionType:(unsigned long long)arg1;
- (void)captureManagerWillStopCaptureSessionType:(unsigned long long)arg1;
- (void)captureManagerDidStartRunningSessionType:(unsigned long long)arg1;
- (void)captureManagerWillStartRunningSessionType:(unsigned long long)arg1;
- (struct CGSize)videoProcessorControllerOutputSize:(id)arg1;
- (void)videoProcessorController:(id)arg1 didUpdateRequestedCameraCapabilities:(unsigned long long)arg2;
- (void)videoProcessorController:(id)arg1 didFinishProcessingVideoBuffer:(struct opaqueCMSampleBuffer *)arg2 metadata:(id)arg3;
- (void)videoProcessorController:(id)arg1 didFinishProcessingAudioBuffer:(struct opaqueCMSampleBuffer *)arg2 volumeLevel:(float)arg3 forPreview:(_Bool)arg4 forCapture:(_Bool)arg5;
- (void)videoProcessorController:(id)arg1 willProcessVideoBuffer:(struct opaqueCMSampleBuffer *)arg2 metadata:(id)arg3;
- (void)captureManagerDidCaptureVideoBuffer:(struct opaqueCMSampleBuffer *)arg1 metadata:(id)arg2;
- (void)captureManagerDidDropVideoBuffer;
- (void)captureControllerDidStopRecording;
- (void)captureControllerDidStartRecording;
- (void)_postProcessCapturedPhotos:(id)arg1 error:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)takeLivePhotoEnabledPicturesWithCaptureDevices:(id)arg1 useHighResolutionIfPossible:(_Bool)arg2 completion:(CDUnknownBlockType)arg3 livePhotoCompletion:(CDUnknownBlockType)arg4;
- (void)takePicturesWithCaptureDevices:(id)arg1 useHighResolutionIfPossible:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)takePictureWithCompletionHandler:(CDUnknownBlockType)arg1;
- (_Bool)shouldOutputPreviewSizedBuffersForCaptureDevice:(id)arg1;
- (id)desiredFormatForCaptureDevice:(id)arg1;
- (id)waterfallLogger;
@property(nonatomic) _Bool lowLightModeEnabled;
@property(readonly, nonatomic) double maxISO;
@property(readonly, nonatomic) double currentISO;
@property(nonatomic) double zoomScale;
@property(nonatomic) double zoom;
@property(nonatomic) long long torchMode;
@property(nonatomic) long long flashMode;
@property(nonatomic) long long cameraPosition;
@property(readonly, nonatomic) NSString *mainCameraDeviceID;
@property(readonly, nonatomic) __weak NSArray *captureDevices;
- (void)resumeCameraCaptureSession;
- (void)pauseCameraCaptureSession;
- (void)setCaptureDevices:(id)arg1 useMultiCaptureIfPossible:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)switchCaptureDevice:(id)arg1 withVideoMirroredIfNeeded:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)unlockFocusWithCompletion:(CDUnknownBlockType)arg1;
- (void)lockFocusWithCompletion:(CDUnknownBlockType)arg1;
- (struct CGPoint)captureDevicePointOfInterestForPoint:(struct CGPoint)arg1 view:(id)arg2;
- (void)focusAndExposeAtPoint:(struct CGPoint)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setVideoOrientation:(long long)arg1;
- (id)cameraSLAMController;
@property(readonly, nonatomic) _Bool multiCaptureEnabled;
@property(readonly, nonatomic) unsigned long long supportedCameraCapabilities;
- (_Bool)currentSessionSupportsFlash;
- (_Bool)currentDeviceHasFlash;
- (_Bool)detectedLowLightConditions;
- (struct CGSize)videoSizeForCurrentSessionPreset;
- (_Bool)isUsingVideoSessionPreset;
- (_Bool)isSpeakerMuted;
- (void)setSpeakerDefaultMuted:(_Bool)arg1;
- (void)setSpeakerMuted:(_Bool)arg1;
- (void)_stopAudioSession;
- (void)_startAudioSessionIfNeeded;
- (_Bool)_isAudioSessionAuthorized;
@property(nonatomic) _Bool audioCaptureIgnoreRTCClientNotification;
- (void)setAudioEnabled:(_Bool)arg1 allowBgAudioMixing:(_Bool)arg2;
- (id)_capturePreset;
- (_Bool)isAudioCaptureRunning;
- (_Bool)isVideoSessionRunning;
- (void)deactivateAndDestroyAudioSession;
- (void)deactivateAudioSession;
- (void)deactivateSystemAudioSession;
- (void)_stopAllSessionsAndCleanUpForInterruption:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)stopAllSessionsAndCleanUpWithCompletion:(CDUnknownBlockType)arg1;
- (void)interruptSessionWithCompletion:(CDUnknownBlockType)arg1;
- (void)didRenderFirstVideoFrameWithCameraSessionID:(id)arg1 cameraDestination:(id)arg2 renderStartTime:(id)arg3 renderFinishTime:(double)arg4 previewLayerType:(unsigned long long)arg5;
- (void)startSessionWithCompletion:(CDUnknownBlockType)arg1;
- (void)activateAudioSessionWhenReady;
- (void)willBecomeInactive;
- (void)didBecomeActive;
- (id)previewLayerForDevice:(id)arg1;
- (id)previewLayerForPosition:(long long)arg1;
@property(readonly, nonatomic) AVCaptureVideoPreviewLayer *previewLayer;
- (void)_didEnterBackground;
- (id)audioBufferQueue;
- (id)videoBufferQueue;
- (void)_updatePipelineWithMediaShareFilter:(id)arg1 videoProcessorFilter:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)_filtersWithMediaSharePlayer:(id)arg1 videoProcessorController:(id)arg2;
- (void)setPostARFBFilterWithIdentifier:(id)arg1 filterParameters:(id)arg2 index:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;
@property(readonly, nonatomic) double postARFBFilterStrength; // @synthesize postARFBFilterStrength=_postARFBFilterStrength;
@property(readonly, nonatomic) NSString *postARFBFilterIdentifier; // @synthesize postARFBFilterIdentifier=_postARFBFilterIdentifier;
- (void)updateCurrentFilterInputs:(id)arg1 parameters:(id)arg2 index:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;
@property(readonly, nonatomic) IGFilter *postARFilter; // @synthesize postARFilter=_postARFilter;
- (void)setPostARFilter:(id)arg1 index:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
@property(nonatomic) __weak IGMediaSharePlayer *mediaSharePlayer;
@property(retain, nonatomic) id <IGVideoProcessorControlling> videoProcessorController;
- (id)createNewVideoProcessorController;
- (id)initWithUserSession:(id)arg1 cameraPosition:(long long)arg2 initialFlashMode:(long long)arg3 sessionPreset:(long long)arg4 preferPhotoPreset:(_Bool)arg5 forceBestPhotoCaptureFormat:(_Bool)arg6 allowHighResolutionFormats:(_Bool)arg7 maxCaptureResolution:(long long)arg8 sortFormatsByFOV:(_Bool)arg9 videoStabilizationMode:(long long)arg10 audioEnabled:(_Bool)arg11 fbAudioEnabled:(_Bool)arg12 stereoEnabled:(_Bool)arg13 fbAudioConfiguration:(struct final)arg14 alwaysEnableAudioSession:(_Bool)arg15 removeInputsAndOutputsWhenStopped:(_Bool)arg16 disableARKitCacheBlock:(CDUnknownBlockType)arg17 captureManagerMode:(long long)arg18 queueManager:(id)arg19 analyticsProductName:(unsigned long long)arg20 perfComponents:(id)arg21 captureDevices:(id)arg22 useFBMultiCaptureManager:(_Bool)arg23 autoExposureOptions:(struct IGCCCaptureManagerAutoExposureOptions)arg24 bracketedCaptureOptions:(struct IGCCCaptureManagerBracketedCaptureOptions)arg25 checkForLowLightAvailability:(_Bool)arg26 numberOfInitialBuffersIgnored:(long long)arg27 livePhotoEnabled:(_Bool)arg28 analyticsLoggerForUserSession:(id)arg29;
- (id)initWithUserSession:(id)arg1 cameraPosition:(long long)arg2 initialFlashMode:(long long)arg3 sessionPreset:(long long)arg4 preferPhotoPreset:(_Bool)arg5 forceBestPhotoCaptureFormat:(_Bool)arg6 videoStabilizationMode:(long long)arg7 audioEnabled:(_Bool)arg8 fbAudioEnabled:(_Bool)arg9 stereoEnabled:(_Bool)arg10 fbAudioConfiguration:(struct final)arg11 alwaysEnableAudioSession:(_Bool)arg12 removeInputsAndOutputsWhenStopped:(_Bool)arg13 disableARKitCacheBlock:(CDUnknownBlockType)arg14 captureManagerMode:(long long)arg15 queueManager:(id)arg16 analyticsProductName:(unsigned long long)arg17 perfComponents:(id)arg18 livePhotoEnabled:(_Bool)arg19;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

