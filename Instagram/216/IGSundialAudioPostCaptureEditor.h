//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "IGAudioEditorMainScrubberViewDelegate-Protocol.h"
#import "IGAudioEditorQuickScrubberViewDelegate-Protocol.h"
#import "IGGestureHandler-Protocol.h"
#import "IGMusicStickerLyricsScrubberViewDelegate-Protocol.h"
#import "IGStoryMusicTrackPlaybackEventListener-Protocol.h"
#import "IGSundialAudioBrowserViewControllerDelegate-Protocol.h"

@class IGAudioBrowserCameraLogger, IGAudioEditorMainScrubberView_DEPRECATED, IGAudioEditorQuickScrubberView, IGAudioEditorSundialHeaderView, IGAudioLyricsTrackModel, IGAudioTrackClip, IGStoryMusicLyricsScrubberView, IGStoryMusicPlaybackTimePill, IGStoryMusicTrackPlayer, IGSundialAudioBrowserViewController, IGSundialAudioTrackClip, IGSundialComposition, IGUserSession, NSString, UILabel, UISelectionFeedbackGenerator, UIView;
@protocol IGStoryMediaPlaybackControllerProtocol, IGSundialAudioPostCaptureEditorDelegate;

@interface IGSundialAudioPostCaptureEditor : UIViewController <IGMusicStickerLyricsScrubberViewDelegate, IGAudioEditorQuickScrubberViewDelegate, IGAudioEditorMainScrubberViewDelegate, IGStoryMusicTrackPlaybackEventListener, IGSundialAudioBrowserViewControllerDelegate, IGGestureHandler>
{
    IGUserSession *_userSession;
    id <IGStoryMediaPlaybackControllerProtocol> _mediaPlaybackController;
    IGAudioBrowserCameraLogger *_logger;
    UIView *_dimmingView;
    IGAudioEditorSundialHeaderView *_headerView;
    IGStoryMusicLyricsScrubberView *_lyricsScrubberView;
    IGAudioEditorQuickScrubberView *_quickSliderView;
    IGAudioEditorMainScrubberView_DEPRECATED *_mainScrubberView;
    UISelectionFeedbackGenerator *_feedbackGenerator;
    IGStoryMusicPlaybackTimePill *_playbackTimePill;
    IGStoryMusicTrackPlayer *_audioPlayer;
    IGSundialAudioBrowserViewController *_audioBrowserViewController;
    UILabel *_musicPickerLabel;
    IGSundialAudioTrackClip *_initialAudioTrackClip;
    _Bool _isDisappearing;
    _Bool _scrubbing;
    IGAudioTrackClip *_audioTrackClip;
    id <IGSundialAudioPostCaptureEditorDelegate> _delegate;
    IGSundialComposition *_composition;
    double _musicClipDuration;
    double _compositionPreviewCornerRadius;
    IGAudioLyricsTrackModel *_lyrics;
    double _clipStartTime;
    double _totalDuration;
}

- (void).cxx_destruct;
@property(nonatomic) double totalDuration; // @synthesize totalDuration=_totalDuration;
@property(nonatomic) double clipStartTime; // @synthesize clipStartTime=_clipStartTime;
@property(nonatomic, getter=isScrubbing) _Bool scrubbing; // @synthesize scrubbing=_scrubbing;
@property(retain, nonatomic) IGAudioLyricsTrackModel *lyrics; // @synthesize lyrics=_lyrics;
@property(nonatomic) double compositionPreviewCornerRadius; // @synthesize compositionPreviewCornerRadius=_compositionPreviewCornerRadius;
@property(nonatomic) double musicClipDuration; // @synthesize musicClipDuration=_musicClipDuration;
@property(readonly, nonatomic) IGSundialComposition *composition; // @synthesize composition=_composition;
@property(nonatomic) __weak id <IGSundialAudioPostCaptureEditorDelegate> delegate; // @synthesize delegate=_delegate;
- (id)analyticsModule;
- (_Bool)canRespondToGesture:(id)arg1;
- (void)_didTapDoneButton:(id)arg1;
- (void)_didTapSongDetailsButton:(id)arg1;
- (void)_didTapDismissButton:(id)arg1;
- (void)_audioBrowserViewController:(id)arg1 didSelectAudioTrack:(id)arg2;
- (void)audioBrowserViewController:(id)arg1 didExtractAudioTrack:(id)arg2;
- (void)audioBrowserViewController:(id)arg1 didTapAudioTrack:(id)arg2 context:(CDStruct_61bbf500)arg3;
- (void)audioBrowserViewControllerDidCancel:(id)arg1;
- (void)mainScrubberView:(id)arg1 didEndScrollingToTime:(double)arg2;
- (void)mainScrubberView:(id)arg1 didScrollToTime:(double)arg2;
- (void)mainScrubberView:(id)arg1 didBeginScrollingAtTime:(double)arg2;
- (void)quickScrubberViewDidEndSliding:(id)arg1;
- (void)quickScrubberView:(id)arg1 didSlideToTime:(double)arg2;
- (void)quickScrubberViewDidBeginSliding:(id)arg1;
- (void)musicStickerLyricsScrubberViewDidUpdateActiveCell:(id)arg1;
- (void)musicStickerLyricsScrubberViewDidEndScrubbing:(id)arg1;
- (void)musicStickerLyricsScrubberView:(id)arg1 didScrollToTime:(double)arg2;
- (void)musicStickerLyricsScrubberViewDidBeginScrubbing:(id)arg1;
- (void)musicTrackPlayerDidPlayToEnd:(id)arg1;
- (void)musicTrackPlayer:(id)arg1 didUpdateStallState:(_Bool)arg2;
- (void)musicTrackPlayer:(id)arg1 didUpdatePlaybackState:(_Bool)arg2;
- (void)musicTrackPlayer:(id)arg1 effectivePlaybackRateDidChange:(double)arg2;
- (void)musicTrackPlayer:(id)arg1 didDetermineDuration:(double)arg2 ofAudioAsset:(id)arg3;
- (void)musicTrackPlayer:(id)arg1 didUpdateToPlaybackTime:(double)arg2;
- (void)musicTrackPlayer:(id)arg1 didChangeToAsset:(id)arg2;
- (void)_syncMediaWithAudioPlayback;
- (void)_pauseFadingVolumeOut;
- (void)_playFadingVolumeIn;
@property(nonatomic) _Bool deleteButtonVisible;
- (void)setAudioTrackClip:(id)arg1;
@property(readonly, nonatomic) IGAudioTrackClip *audioTrackClip; // @synthesize audioTrackClip=_audioTrackClip;
- (void)_setClipStartTime:(double)arg1 animated:(_Bool)arg2;
- (void)viewDidLayoutSubviews;
- (void)_applicationDidEnterForeground:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)_initWithMediaPlaybackController:(id)arg1 composition:(id)arg2 sundialAudioBrowser:(id)arg3 userSession:(id)arg4;
- (id)initWithReactiveAudioTrack:(id)arg1 composition:(id)arg2 mediaPlaybackController:(id)arg3 audioBrowserViewController:(id)arg4 userSession:(id)arg5;
- (id)initWithAudioTrackClip:(id)arg1 composition:(id)arg2 mediaPlaybackController:(id)arg3 audioBrowserViewController:(id)arg4 userSession:(id)arg5;
- (id)initWithAudioTrackClip:(id)arg1 composition:(id)arg2 mediaPlaybackController:(id)arg3 userSession:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

