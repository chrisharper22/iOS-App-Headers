//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

@class FBImageRenderState, FBWebImageLoadingIndicatorView, FBWebImageRetryPlaceholderView, FBWebImageViewListenerAnnouncer, NSSet, NSString, UIColor, UIImage, UIImageView;
@protocol FBFeatureAttributionContextProtocol, FBWebImageDownloader, FBWebImageDownloaderFactoryProtocol, FBWebImageLogger, FBWebImageSpecifier, FBWebImageTransitionAsyncCalculator, FBWebImageTransitionProtocol, FBWebImageViewLayoutDelegate;

@interface FBWebImageView : UIView
{
    UIImageView *_imageView;
    FBWebImageRetryPlaceholderView *_retryControl;
    FBWebImageLoadingIndicatorView *_loadingIndicator;
    id <FBWebImageDownloader> _downloader;
    id <FBWebImageSpecifier> _imageSpecifier;
    id <FBWebImageViewLayoutDelegate> _defaultLayoutDelegate;
    FBWebImageViewListenerAnnouncer *_announcer;
    id <FBWebImageTransitionProtocol> _placeholderTransition;
    long long _downloadStatus;
    id <FBWebImageTransitionAsyncCalculator> _transitionAsyncCalculator;
    _Bool _userSetUserInteractionEnabled;
    id _cachedImageHolder;
    _Bool _isPlaceholderTransitionAnimationInProgress;
    _Bool _enableRetries;
    _Bool _wasDisplayedImageCameFromCache;
    _Bool _displayedImageIsFinal;
    UIView *_placeholderView;
    UIView *_overlayView;
    unsigned long long _transitionType;
    id <FBWebImageViewLayoutDelegate> _layoutDelegate;
    unsigned long long _displayedImageFlag;
    NSString *_analyticsModule;
    id <FBFeatureAttributionContextProtocol> _attributionContext;
    FBImageRenderState *_imageRenderState;
    NSSet *_analyticsTags;
    id <FBWebImageLogger> _logger;
    UIColor *_tintColor;
    id <FBWebImageDownloaderFactoryProtocol> _downloaderFactory;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) id <FBWebImageDownloaderFactoryProtocol> downloaderFactory; // @synthesize downloaderFactory=_downloaderFactory;
@property(readonly, nonatomic) _Bool displayedImageIsFinal; // @synthesize displayedImageIsFinal=_displayedImageIsFinal;
@property(copy, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
@property(readonly, nonatomic) id <FBWebImageLogger> logger; // @synthesize logger=_logger;
@property(copy, nonatomic) NSSet *analyticsTags; // @synthesize analyticsTags=_analyticsTags;
@property(retain, nonatomic) FBImageRenderState *imageRenderState; // @synthesize imageRenderState=_imageRenderState;
@property(retain, nonatomic) id <FBFeatureAttributionContextProtocol> attributionContext; // @synthesize attributionContext=_attributionContext;
@property(copy, nonatomic) NSString *analyticsModule; // @synthesize analyticsModule=_analyticsModule;
@property(readonly, nonatomic) _Bool wasDisplayedImageCameFromCache; // @synthesize wasDisplayedImageCameFromCache=_wasDisplayedImageCameFromCache;
@property(readonly, nonatomic) unsigned long long displayedImageFlag; // @synthesize displayedImageFlag=_displayedImageFlag;
@property(nonatomic) __weak id <FBWebImageViewLayoutDelegate> layoutDelegate; // @synthesize layoutDelegate=_layoutDelegate;
@property(nonatomic) unsigned long long transitionType; // @synthesize transitionType=_transitionType;
@property(retain, nonatomic) UIView *overlayView; // @synthesize overlayView=_overlayView;
@property(nonatomic) _Bool enableRetries; // @synthesize enableRetries=_enableRetries;
@property(readonly, nonatomic) _Bool isPlaceholderTransitionAnimationInProgress; // @synthesize isPlaceholderTransitionAnimationInProgress=_isPlaceholderTransitionAnimationInProgress;
@property(retain, nonatomic) UIView *placeholderView; // @synthesize placeholderView=_placeholderView;
@property(retain, nonatomic) id <FBWebImageSpecifier> imageSpecifier; // @synthesize imageSpecifier=_imageSpecifier;
- (void)updateImageDownloaderFactory:(id)arg1 logger:(id)arg2;
@property(nonatomic) long long imageContentMode;
- (void)_parseImageDownloadResponse:(id)arg1 requestId:(id)arg2;
- (_Bool)_shouldShowBlurredPreviewImage:(id)arg1;
- (_Bool)_imageIsBetterInResponse:(id)arg1;
- (void)_parseImageDownloadResponseForBetterImage:(id)arg1;
- (void)_saveImageRenderState:(id)arg1;
- (void)_hidePlaceholder;
- (void)_showPlaceholder;
- (void)_showBlurredPreviewImage:(id)arg1;
- (id)_activeLayoutDelegate;
- (void)_resetDownload;
- (void)_resetImage;
- (void)_updateImage:(id)arg1 cachedImageHolder:(id)arg2;
- (void)_resetForNewImageSpecifier:(id)arg1;
- (void)_updatePlaceholderTransition;
- (id)_retrieveUpdatedDownloaderFactory:(id)arg1;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)setUserInteractionEnabled:(_Bool)arg1;
- (id)description;
- (void)cancel;
@property(readonly, nonatomic) id logicalIdentifier;
@property(readonly, nonatomic) UIImage *displayedImage;
- (void)announceImageRenderEventIfRequiredWithURL:(id)arg1 atTime:(double)arg2;
- (void)enableLoadingIndicator;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithDownloaderFactory:(id)arg1 logger:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 downloaderFactory:(id)arg2 logger:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

@end

