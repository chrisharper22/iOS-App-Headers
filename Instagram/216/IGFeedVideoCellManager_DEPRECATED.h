//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "IGFeedVideoCellPlayerDelegate-Protocol.h"
#import "IGVideoPlaybackListener-Protocol.h"
#import "IGVideoQualitySelectorProvider-Protocol.h"

@class IGFeedVideoCellManagerVisibilityHelper, IGFeedVideoStateManager, IGUserSession, IGVideoPlaybackConfiguration, IGVideoPlayerManager, IGVideoPlayerPreloadPool, NSMutableSet, NSString;
@protocol IGFeedVideoCellManagerAnnouncer, IGFeedVideoCellManagerConfigProvider;

@interface IGFeedVideoCellManager_DEPRECATED : NSObject <IGVideoPlaybackListener, IGFeedVideoCellPlayerDelegate, IGVideoQualitySelectorProvider>
{
    unsigned long long _options;
    IGVideoPlaybackConfiguration *_defaultPlaybackConfig;
    IGVideoPlayerManager *_videoPlayerManager;
    NSMutableSet *_currentlyPlayingVideoCellManagerItems;
    NSMutableSet *_currentlyPausedVideoCellManagerItems;
    IGVideoPlaybackConfiguration *_currentlyPlayingVideoPlaybackConfig;
    IGUserSession *_userSession;
    IGFeedVideoCellManagerVisibilityHelper *_visibilityHelper;
    NSString *_analyticsModule;
    unsigned long long _prebufferOption;
    double _previewableVideoAdPreviewDuration;
    _Bool _disallowVideoStart;
    _Bool _isCurrentVideoInWatchAndMore;
    _Bool _isAnimatingVideoInMediaCollection;
    _Bool _shouldRestartPreviewableVideoAd;
    _Bool _shouldDisableEndscreen;
    id <IGFeedVideoCellManagerConfigProvider> _configProvider;
    id <IGFeedVideoCellManagerAnnouncer> _announcer;
    IGVideoPlayerPreloadPool *_videoPlayerPreloadPool;
    IGFeedVideoStateManager *_videoStateManager;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool shouldDisableEndscreen; // @synthesize shouldDisableEndscreen=_shouldDisableEndscreen;
@property(nonatomic) _Bool shouldRestartPreviewableVideoAd; // @synthesize shouldRestartPreviewableVideoAd=_shouldRestartPreviewableVideoAd;
@property(readonly, nonatomic) IGFeedVideoStateManager *videoStateManager; // @synthesize videoStateManager=_videoStateManager;
@property(readonly, nonatomic) IGVideoPlayerPreloadPool *videoPlayerPreloadPool; // @synthesize videoPlayerPreloadPool=_videoPlayerPreloadPool;
@property(nonatomic) _Bool isAnimatingVideoInMediaCollection; // @synthesize isAnimatingVideoInMediaCollection=_isAnimatingVideoInMediaCollection;
@property(nonatomic) _Bool isCurrentVideoInWatchAndMore; // @synthesize isCurrentVideoInWatchAndMore=_isCurrentVideoInWatchAndMore;
@property(readonly, nonatomic) id <IGFeedVideoCellManagerAnnouncer> announcer; // @synthesize announcer=_announcer;
@property(nonatomic) __weak id <IGFeedVideoCellManagerConfigProvider> configProvider; // @synthesize configProvider=_configProvider;
@property(nonatomic) _Bool disallowVideoStart; // @synthesize disallowVideoStart=_disallowVideoStart;
- (void)selectQuality:(long long)arg1 forVideo:(id)arg2;
- (void)feedVideoCell:(id)arg1 didFailLoadImageWithError:(id)arg2;
- (void)feedVideoCellDidLoadImage:(id)arg1;
- (void)feedVideoCellDidRequestCurrentVideoStopWithReason:(long long)arg1;
- (void)feedVideoCellDidRequestVideoPlayback:(id)arg1 overridingConfig:(id)arg2;
- (void)videoPlaybackControllerDidFinishSeeking:(id)arg1;
- (void)videoPlaybackControllerDidEmptyPlaybackBuffer:(id)arg1;
- (void)videoPlaybackControllerDidStopPlayback:(id)arg1;
- (void)videoPlaybackController:(id)arg1 didUpdateLoadingProgressForItem:(id)arg2 progress:(double)arg3;
- (void)videoPlaybackController:(id)arg1 didStartLoadingItem:(id)arg2;
- (void)videoPlaybackController:(id)arg1 didLoadVideoForItem:(id)arg2;
- (void)videoPlaybackController:(id)arg1 didApplySettingsForItem:(id)arg2;
- (void)videoPlaybackController:(id)arg1 didToggleAudioWithReason:(long long)arg2;
- (void)videoPlaybackController:(id)arg1 didUpdatePlaybackProgressForItem:(id)arg2 progress:(double)arg3;
- (void)videoPlaybackController:(id)arg1 didLoopItem:(id)arg2;
- (void)videoPlaybackController:(id)arg1 didFailPlayingItem:(id)arg2 error:(id)arg3;
- (void)videoPlaybackController:(id)arg1 didRequestItem:(id)arg2;
- (void)videoPlaybackController:(id)arg1 didEndPlayingItem:(id)arg2;
- (void)videoPlaybackController:(id)arg1 didPauseItem:(id)arg2 reason:(long long)arg3;
- (void)videoPlaybackController:(id)arg1 didBeginPlayingItem:(id)arg2;
- (_Bool)_isCurrentlyPlayingCell:(id)arg1;
- (_Bool)_isManagedVideo:(id)arg1;
- (void)_cancelPreloadedVideo:(id)arg1;
- (id)playbackConfigurationForVideo:(id)arg1;
- (id)_feedVideoCellManagerItemForCurrentlyPausedCell:(id)arg1;
- (id)_feedVideoCellManagerItemForCurrentlyPlayingCell:(id)arg1;
- (id)_feedVideoCellManagerItemForCell:(id)arg1;
- (id)_feedVideoCellManagerItemForCell:(id)arg1 inSet:(id)arg2;
- (id)_feedVideoCellManagerItemForCurrentlyPausedVideo:(id)arg1;
- (id)_feedVideoCellManagerItemForCurrentlyPlayingVideo:(id)arg1;
- (id)_feedVideoCellManagerItemForVideo:(id)arg1;
- (id)_feedVideoCellManagerItemForVideo:(id)arg1 inSet:(id)arg2;
- (void)_handleFeedVideoCellDidPlayToEnd:(id)arg1;
- (void)_pauseVideo:(id)arg1 reason:(long long)arg2;
- (void)_pauseVideo:(id)arg1;
- (_Bool)_hasPausedVideo:(id)arg1;
- (_Bool)_shouldTearDownVideoCell:(id)arg1;
- (void)_timedStopVideo:(id)arg1;
- (void)_stopVideoCell:(id)arg1 reason:(long long)arg2 tearDown:(_Bool)arg3;
- (void)_stopVideo:(id)arg1 finishUsingPlayer:(_Bool)arg2;
- (_Bool)_startVideoForCellIfApplicable:(id)arg1 withPlaybackReason:(long long)arg2;
- (void)_updatePlayingCells;
- (_Bool)isPlayingAnyVideo;
- (id)videoPlaybackControllerForVideo:(id)arg1;
- (id)videoPlaybackControllerForCell:(id)arg1;
- (id)videoPlaybackControllerForVideoView:(id)arg1;
- (void)cleanUpVideoForPlayback:(id)arg1;
- (void)prepareVideoForPlayback:(id)arg1 isSponsored:(_Bool)arg2 igtvVideo:(_Bool)arg3;
- (void)updatePlayingCellsForScrollViewChange;
- (void)_maybeUpdateVideoViewSessionForCell:(id)arg1 percentVisible:(double)arg2;
- (void)stopAllVideosWithReason:(long long)arg1;
- (void)stopCurrentVideosWithReason:(long long)arg1;
- (void)_stopOtherCurrentVideosIfConcurrentPlaybackNotAllowed:(id)arg1;
- (id)_videoCellManagerItemForCell:(id)arg1 videoView:(id)arg2 config:(id)arg3;
- (id)_videoPlayerStartPlaybackItem:(id)arg1 playbackController:(id)arg2 startTime:(double)arg3 lazyLoadAudioTrack:(_Bool)arg4 playbackReason:(long long)arg5;
- (void)startVideoForCell:(id)arg1 overridingConfig:(id)arg2 startTime:(double)arg3 playbackReason:(long long)arg4;
- (void)resumeVideoIfAutoplayCellExists;
- (void)startVideoIfAutoplayCellExists;
- (void)dealloc;
- (id)initWithCollectionView:(id)arg1 collectionViewVisibility:(id)arg2 options:(unsigned long long)arg3 autoplayStrategy:(id)arg4 defaultPlaybackConfiguration:(id)arg5 userSession:(id)arg6 analyticsModule:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

