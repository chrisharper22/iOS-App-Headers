//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Mar 27 2019 15:10:13).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "IGAREffectApplicationListener-Protocol.h"
#import "IGAREffectApplicatorCameraControlDelegate-Protocol.h"
#import "IGAREffectAvailabilityListener-Protocol.h"
#import "IGAREffectNativeUIControlDelegate-Protocol.h"
#import "IGARInstructionServiceDelegate-Protocol.h"
#import "IGBrowserControllerDelegate-Protocol.h"
#import "IGCameraCaptureControllerDelegate-Protocol.h"
#import "IGCameraTouchDetectionViewDelegate-Protocol.h"
#import "IGCaptureManagerAdditionalCaptureMetadataDelegate-Protocol.h"
#import "IGCaptureManagerAudioSampleBufferDelegate-Protocol.h"
#import "IGCaptureManagerDelegate-Protocol.h"
#import "IGCaptureManagerPreviewSizeProvider-Protocol.h"
#import "IGCaptureManagerVideoPreviewSampleBufferDelegate-Protocol.h"
#import "IGCaptureManagerVideoSampleBufferDelegate-Protocol.h"
#import "IGCaptureManagerVideoSampleBufferProcessing-Protocol.h"
#import "IGCaptureManagerVideoSessionDelegate-Protocol.h"
#import "IGMLSceneRecognizerDelegate-Protocol.h"

@class IGAREffectApplicator, IGAREffectModel, IGAREffectTargetModel, IGAsyncTask, IGCameraCaptureController, IGCameraConfig, IGCameraDraftEffectConsentDialogueController, IGCameraDynamicPreviewView, IGCameraLoggingContext, IGCameraOpenPerfComponents, IGCameraTouchDetectionView, IGMLSceneRecognizer, IGPopoverController, IGUserSession, NSArray, NSMutableDictionary, NSObject, NSString, NSTimer, UIImageView, UIImpactFeedbackGenerator, UIView;
@protocol IGCameraViewControllerAREffectDelegate, IGCameraViewControllerAREffectNativeUIDelegate, IGCameraViewControllerAdditionalCaptureMetadataObserver, IGCameraViewControllerDataSource, IGCameraViewControllerDelegate, IGCameraViewControllerSampleBufferObserver, IGCaptureManaging, OS_dispatch_source;

@interface IGCameraViewController : UIViewController <IGCameraCaptureControllerDelegate, IGCameraTouchDetectionViewDelegate, IGCaptureManagerAudioSampleBufferDelegate, IGCaptureManagerDelegate, IGCaptureManagerVideoPreviewSampleBufferDelegate, IGCaptureManagerVideoSampleBufferDelegate, IGCaptureManagerVideoSampleBufferProcessing, IGCaptureManagerVideoSessionDelegate, IGCaptureManagerAdditionalCaptureMetadataDelegate, IGAREffectAvailabilityListener, IGAREffectApplicationListener, IGARInstructionServiceDelegate, IGAREffectApplicatorCameraControlDelegate, IGAREffectNativeUIControlDelegate, IGBrowserControllerDelegate, IGCaptureManagerPreviewSizeProvider, IGMLSceneRecognizerDelegate>
{
    IGCameraConfig *_config;
    IGCameraCaptureController *_captureController;
    IGUserSession *_userSession;
    NSMutableDictionary *_lastSavedZoomForCamera;
    IGCameraDraftEffectConsentDialogueController *_draftEffectConsentDialogueController;
    IGPopoverController *_draftEffectConsentPopoverController;
    IGAREffectTargetModel *_draftEffectTarget;
    UIImageView *_lastFrameImageView;
    UIView *_boomerangBurstView;
    UIImageView *_focusRing;
    IGCameraDynamicPreviewView *_cameraPreviewView;
    _Bool _isBackgrounded;
    _Bool _isLowLightAvailable;
    _Bool _waitingForFirstFrameAfterCameraSwitched;
    double _initialZoomScale;
    long long _lightingMode;
    NSMutableDictionary *_lastReceivedBuffers;
    long long _deviceOrientation;
    IGAsyncTask *_multiPhotoCaptureTask;
    IGAsyncTask *_photoCaptureTask;
    _Bool _didReceiveFirstBuffer;
    long long _draftEffectLoadingInstanceKey;
    _Bool _needToCancelCleanup;
    IGCameraOpenPerfComponents *_perfComponents;
    IGCameraLoggingContext *_loggingContext;
    IGCameraTouchDetectionView *_touchDetectionView;
    NSTimer *_idleTimer;
    UIImpactFeedbackGenerator *_impactGenerator;
    NSObject<OS_dispatch_source> *_boomerangBurstHapticFeedbackTimer;
    _Bool _isFlipping;
    double _maxVideoDuration;
    IGMLSceneRecognizer *_sceneRecognizer;
    _Bool _lowLightEnabled;
    _Bool _isAREffectAvailable;
    _Bool _isCaptureAvailable;
    _Bool _isInCaptureSession;
    _Bool _showTapIndicator;
    _Bool _isDemoEffectCreationStyleApplied;
    _Bool _bracketedCaptureSupportedSwitcherMode;
    _Bool _bracketedCaptureLowLight;
    _Bool _keepDeviceAwake;
    _Bool _pauseCameraInfoChangeNotifications;
    _Bool _preventCleanupCaptureOnDisappear;
    _Bool _preventEffectDeactivationOnDisappear;
    _Bool _multiClipCaptureEnabled;
    id <IGCaptureManaging> _captureManager;
    long long _captureState;
    IGAREffectApplicator *_arEffectApplicator;
    id <IGCameraViewControllerAREffectDelegate> _arEffectDelegate;
    id <IGCameraViewControllerDataSource> _dataSource;
    id <IGCameraViewControllerDelegate> _delegate;
    id <IGCameraViewControllerSampleBufferObserver> _sampleBufferObserver;
    id <IGCameraViewControllerAREffectNativeUIDelegate> _arEffectNativeUIDelegate;
    id <IGCameraViewControllerAdditionalCaptureMetadataObserver> _additionalCaptureMetadataObserver;
    IGAREffectTargetModel *_pendingEffectTarget;
}

- (void).cxx_destruct;
@property(nonatomic, getter=isMultiClipCaptureEnabled) _Bool multiClipCaptureEnabled; // @synthesize multiClipCaptureEnabled=_multiClipCaptureEnabled;
@property(readonly, nonatomic) IGAREffectTargetModel *pendingEffectTarget; // @synthesize pendingEffectTarget=_pendingEffectTarget;
@property(nonatomic) _Bool preventEffectDeactivationOnDisappear; // @synthesize preventEffectDeactivationOnDisappear=_preventEffectDeactivationOnDisappear;
@property(nonatomic) _Bool preventCleanupCaptureOnDisappear; // @synthesize preventCleanupCaptureOnDisappear=_preventCleanupCaptureOnDisappear;
@property(nonatomic) _Bool pauseCameraInfoChangeNotifications; // @synthesize pauseCameraInfoChangeNotifications=_pauseCameraInfoChangeNotifications;
@property(nonatomic) _Bool keepDeviceAwake; // @synthesize keepDeviceAwake=_keepDeviceAwake;
@property(nonatomic) _Bool bracketedCaptureLowLight; // @synthesize bracketedCaptureLowLight=_bracketedCaptureLowLight;
@property(nonatomic) _Bool bracketedCaptureSupportedSwitcherMode; // @synthesize bracketedCaptureSupportedSwitcherMode=_bracketedCaptureSupportedSwitcherMode;
@property(nonatomic) _Bool isDemoEffectCreationStyleApplied; // @synthesize isDemoEffectCreationStyleApplied=_isDemoEffectCreationStyleApplied;
@property(readonly, nonatomic) IGCameraDynamicPreviewView *cameraPreviewView; // @synthesize cameraPreviewView=_cameraPreviewView;
@property(nonatomic) __weak id <IGCameraViewControllerAdditionalCaptureMetadataObserver> additionalCaptureMetadataObserver; // @synthesize additionalCaptureMetadataObserver=_additionalCaptureMetadataObserver;
@property(nonatomic) __weak id <IGCameraViewControllerAREffectNativeUIDelegate> arEffectNativeUIDelegate; // @synthesize arEffectNativeUIDelegate=_arEffectNativeUIDelegate;
@property(nonatomic) __weak id <IGCameraViewControllerSampleBufferObserver> sampleBufferObserver; // @synthesize sampleBufferObserver=_sampleBufferObserver;
@property(nonatomic) __weak id <IGCameraViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <IGCameraViewControllerDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) __weak id <IGCameraViewControllerAREffectDelegate> arEffectDelegate; // @synthesize arEffectDelegate=_arEffectDelegate;
@property(nonatomic) _Bool showTapIndicator; // @synthesize showTapIndicator=_showTapIndicator;
@property(readonly, nonatomic) long long deviceOrientation; // @synthesize deviceOrientation=_deviceOrientation;
@property(readonly, nonatomic) IGAREffectApplicator *arEffectApplicator; // @synthesize arEffectApplicator=_arEffectApplicator;
@property(readonly, nonatomic) long long captureState; // @synthesize captureState=_captureState;
@property(readonly, nonatomic) id <IGCaptureManaging> captureManager; // @synthesize captureManager=_captureManager;
@property(readonly, nonatomic) _Bool isInCaptureSession; // @synthesize isInCaptureSession=_isInCaptureSession;
@property(readonly, nonatomic) _Bool isCaptureAvailable; // @synthesize isCaptureAvailable=_isCaptureAvailable;
@property(readonly, nonatomic) _Bool isAREffectAvailable; // @synthesize isAREffectAvailable=_isAREffectAvailable;
@property(readonly, nonatomic) _Bool lowLightEnabled; // @synthesize lowLightEnabled=_lowLightEnabled;
@property(nonatomic) long long lightingMode; // @synthesize lightingMode=_lightingMode;
- (void)arEffectApplicator:(id)arg1 requestUpdateCaptureDevicePosition:(long long)arg2;
- (_Bool)arEffectApplicator:(id)arg1 canRequestChangeCaptureDevicePosition:(long long)arg2;
- (void)didDetectSceneWithConcepts:(id)arg1;
- (void)arEffectApplicator:(id)arg1 didRenderEffect:(id)arg2;
- (void)arEffectApplicatorDidFailToRender:(id)arg1;
- (void)arEffectApplicator:(id)arg1 didSetEffect:(id)arg2 withAttribution:(id)arg3;
- (void)arEffectApplicator:(id)arg1 willAddFilter:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)arEffectApplicator:(id)arg1 willAddFilterWithConfig:(id)arg2 assetModel:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)arEffectApplicatorWillUnApplyAREffect:(id)arg1 isSwitchingAREffect:(_Bool)arg2;
- (void)arEffectApplicator:(id)arg1 willApplyAREffect:(id)arg2;
- (void)arEffectApplicatorDidFailToDownloadRemoteModel:(id)arg1;
- (void)arEffectApplicatorDidFailToDownload:(id)arg1;
- (void)arEffectApplicator:(id)arg1 didDownloadAREffectAsset:(id)arg2;
- (void)arEffectApplicatorDidUpdateEffectList:(id)arg1 fromNetwork:(_Bool)arg2;
- (void)arEffectApplicator:(id)arg1 didUpdateAREffectTouchSupportedStatus:(_Bool)arg2;
- (void)arEffectApplicatorUserDidTurnOffAREffect:(id)arg1;
- (void)arEffectApplicatorAREffectDidBecomeAvailable:(id)arg1;
- (void)arEffectApplicator:(id)arg1 didFailFetchWithError:(id)arg2;
- (void)arEffectApplicator:(id)arg1 didFailWithTargetEffectResponse:(id)arg2;
- (void)instructionServiceHandlerRequestsHideAREffectInstructions:(id)arg1;
- (void)instructionServiceHandler:(id)arg1 requestsShowAREffectInstructions:(id)arg2 forDuration:(double)arg3;
- (void)captureManagerDidUpdateIsFlashScene:(_Bool)arg1;
- (void)captureManagerDidDetectFaceRect:(struct CGRect)arg1;
- (void)captureManagerVideoSessionInterruptionEnded:(id)arg1;
- (void)captureManagerVideoSessionWasInterrupted:(id)arg1;
- (void)captureManagerVideoSessionDidStopRunning:(id)arg1;
- (void)captureManagerVideoSessionWillStopRunning:(id)arg1;
- (void)captureManagerVideoSessionDidStartRunning:(id)arg1;
- (void)captureManagerVideoSessionWillStartRunning:(id)arg1;
- (void)captureManagerHasFinishedLoadingCaptureSession:(id)arg1;
- (void)storyCameraDidDetectUserInteraction:(id)arg1;
- (void)cameraCaptureController:(id)arg1 didResumeRecording:(CDStruct_1b6d18a9)arg2;
- (void)cameraCaptureController:(id)arg1 didPauseRecording:(CDStruct_1b6d18a9)arg2;
- (void)cameraCaptureControllerSuccessfullyCapturedPhoto:(id)arg1;
- (void)cameraCaptureController:(id)arg1 startAudioSessionDidError:(id)arg2;
- (void)cameraCaptureController:(id)arg1 failedToCapturePhotoWithError:(id)arg2;
- (void)cameraCaptureControllerDidStartRecording:(id)arg1 timestamp:(CDStruct_1b6d18a9)arg2;
- (void)cameraCaptureControllerDidRequestStartRecording:(id)arg1;
- (void)cameraCaptureControllerDidStopRecording:(id)arg1 timestamp:(CDStruct_1b6d18a9)arg2 error:(id)arg3;
- (void)cameraCaptureControllerWillStopRecording:(id)arg1;
- (void)cameraCaptureController:(id)arg1 didFinishWithBoomerangManager:(id)arg2;
- (void)cameraCaptureController:(id)arg1 didFinishWithDevicePosition:(long long)arg2 videoInfos:(id)arg3 images:(id)arg4;
- (void)cameraCaptureController:(id)arg1 didUpdateRecordProgress:(double)arg2;
- (struct CGSize)captureManagerPreviewOutputSize;
- (void)captureManagerDidChangeFlashAvailability;
- (void)captureManagerDidReceiveUnhandledError:(id)arg1;
- (void)captureManagerNeedsResume:(_Bool)arg1;
- (void)captureManagerWillTakePhoto;
- (void)captureManagerDidProcessVideoSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 updatedSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 metadata:(id)arg3;
- (struct opaqueCMSampleBuffer *)captureManagerModifyProcessedSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 metadata:(id)arg2;
- (void)captureManagerWillProcessSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 metadata:(id)arg2;
- (void)captureManagerDidCaptureVideoBuffer:(struct opaqueCMSampleBuffer *)arg1 metadata:(id)arg2;
- (void)captureManagerDidDropVideoBuffer;
- (void)captureManagerDidCaptureVideoPreviewBuffer:(struct opaqueCMSampleBuffer *)arg1 metadata:(id)arg2;
- (void)captureManagerDidCaptureAudioBuffer:(struct opaqueCMSampleBuffer *)arg1 withVolumeLevel:(float)arg2;
- (void)captureManagerDidDropAudioBuffer;
- (void)nativeUIControlServiceHandler:(id)arg1 configureSlider:(id)arg2;
- (void)nativeUIControlServiceHandlerShouldHideTextInput:(id)arg1;
- (void)nativeUIControlServiceHandlerShouldShowTextInput:(id)arg1 currentText:(id)arg2;
- (void)nativeUIControlServiceHandler:(id)arg1 shouldChangeSliderValue:(double)arg2;
- (void)nativeUIControlServiceHandlerShouldHideSlider:(id)arg1;
- (void)nativeUIControlServiceHandlerShouldShowSlider:(id)arg1;
- (void)nativeUIControlServiceHandler:(id)arg1 didSelectPickerItem:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)nativeUIControlServiceHandler:(id)arg1 shouldSelectPickerIndex:(unsigned long long)arg2;
- (void)nativeUIControlServiceHandlerShouldHidePicker:(id)arg1;
- (void)nativeUIControlServiceHandlerShouldShowPicker:(id)arg1;
- (void)nativeUIControlServiceHandler:(id)arg1 shouldConfigurePickerWithConfiguration:(id)arg2;
- (void)browserControllerDidChangeUrl:(id)arg1;
- (void)browserControllerDidDismissWithUrl:(id)arg1;
- (void)_didFinishFocusAnimation;
- (void)focusToPoint:(struct CGPoint)arg1;
- (void)_tapToFocus:(id)arg1;
- (void)handleTap:(id)arg1;
- (void)_applicationWillResignActive:(id)arg1;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_triggerHapticKick;
- (void)_stopBoomerangBurstFrames;
- (void)_showBoomerangBurstFrames;
- (void)_updateTorchLight;
- (void)_updateLightingModeIfNeeded;
- (void)toggleLowLightMode;
- (void)toggleLightingMode;
- (_Bool)_canHandleFlash;
- (void)switchCaptureDevices:(id)arg1 useMultiCaptureIfPossible:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_didSwitchCameraWithUserInput:(unsigned long long)arg1;
- (void)switchCaptureDevice:(id)arg1 withUserInput:(unsigned long long)arg2;
- (_Bool)canSwitchCameras;
- (void)setZoomScale:(double)arg1 withCurrentZoomAsMinimum:(_Bool)arg2;
- (void)setZoomDelta:(double)arg1;
- (void)finishedTakingCaptureScreenshot;
- (void)prepareToTakeCaptureScreenshot;
- (_Bool)canStopRecording;
- (void)stopRecording;
- (void)beginRecordingWithFormat:(long long)arg1 captureDevices:(id)arg2 recorderOptions:(id)arg3;
- (void)beginRecordingWithFormat:(long long)arg1;
- (_Bool)canBeginRecording;
- (void)capturePhotoWithCompletion:(CDUnknownBlockType)arg1;
- (void)_setMultiPhotoCaptureTask:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)captureLivePhotosWithDevices:(id)arg1 withMode:(long long)arg2 completion:(CDUnknownBlockType)arg3 livePhotoCompletion:(CDUnknownBlockType)arg4;
- (void)capturePhotosWithDevices:(id)arg1 withMode:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)willBecomeInactive;
- (void)didBecomeActive;
- (void)reset;
- (void)didCancelMediaPreview;
- (void)resumeVideoCaptureForVideoCall;
- (void)pauseVideoCaptureForVideoCall;
- (void)resumeCaptureSessionForLive;
- (void)pauseCaptureSessionForLive;
- (void)stopCaptureSessionAndCleanup;
- (void)_fetchTargetEffectModelAndMetadata:(id)arg1;
- (_Bool)_shouldFetchLegacyDialTrayRequests:(id)arg1;
- (void)startCaptureSession;
- (void)_presentDraftEffectConsentDialogForTarget:(id)arg1;
- (void)_dismissDraftEffectConsentDialogIfNeeded;
- (void)_beginFetchingEffectTarget:(id)arg1;
- (void)cancelPendingEffectTarget;
- (_Bool)setEffectListWithIDs:(id)arg1;
- (void)setEffectTarget:(id)arg1 source:(long long)arg2;
@property(readonly, nonatomic, getter=isFetchingEffectTarget) _Bool fetchingEffectTarget;
@property(readonly, nonatomic) _Bool isCameraZoomed;
@property(nonatomic) _Bool livePhotoEnabled;
@property(readonly, nonatomic) _Bool bracketedCaptureEnabled;
@property(nonatomic) _Bool allowHighResolutionCapture;
@property(readonly, nonatomic) NSArray *captureDevices;
- (void)isEffectListMetadataCacheExpired:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) long long cameraMode;
- (void)hideForegroundTransitionOverlayIfNeeded;
- (struct opaqueCMSampleBuffer *)lastReceivedMainBuffer;
- (id)lastReceivedMetadata;
- (id)lastReceivedMetadataForCaptureDevice:(id)arg1;
- (id)lastDisplayedSampleBuffer;
- (id)lastDisplayedSampleBufferForCaptureDevice:(id)arg1;
- (id)lastDisplayedFrame;
- (id)lastDisplayedFrameForCaptureDevice:(id)arg1;
- (void)lastDisplayedFrameWithCompletion:(CDUnknownBlockType)arg1;
- (void)lastDisplayedFrameForCaptureDevice:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) _Bool isRecording;
@property(readonly, nonatomic) CDStruct_b9ba3679 cameraInfo;
@property(readonly, nonatomic) _Bool isVideoCaptureRunning;
@property(readonly, nonatomic) double videoRecordingProgress;
@property(readonly, nonatomic) long long cameraPosition;
@property(readonly, nonatomic) NSString *mainCameraDeviceID;
- (void)_setIsCaptureAvailable:(_Bool)arg1;
@property(nonatomic) double maxVideoDuration;
@property(nonatomic) long long maxVideoSegments;
@property(readonly, nonatomic) double currentVideoDuration;
- (void)sendDataToCurrentEffect:(id)arg1;
- (void)restoreCurrentEffect;
- (void)disableCurrentEffect;
- (void)selectNoEffect;
- (void)restartCurrentAREffect;
- (void)removeEffectWithIDFromEffectList:(id)arg1;
- (void)prefetchAsset:(id)arg1;
@property(readonly, nonatomic) IGAREffectModel *currentEffect;
- (id)effectsForSwitcherMode:(long long)arg1;
- (void)selectEffect:(id)arg1 forMode:(long long)arg2 shareArguments:(id)arg3 usingData:(id)arg4 source:(long long)arg5;
- (void)_updateBracketedCaptureEnabled;
- (_Bool)_isLivePhotoEnabled;
- (void)_setCustomIdleTimer:(_Bool)arg1;
- (void)_updateDebugOverlayIfNeeded:(struct opaqueCMSampleBuffer *)arg1;
- (double)_defaultCameraZoomScale;
- (double)_defaultCameraZoom;
- (void)_resetCameraZoom;
- (_Bool)_isCameraZoomed;
- (void)_showAndBlurLastFrameIfNecessary:(_Bool)arg1;
- (void)_setCaptureState:(long long)arg1;
- (void)_setLastReceivedBuffer:(struct opaqueCMSampleBuffer *)arg1 forCaptureDevice:(id)arg2;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (id)initWithConfig:(id)arg1 userSession:(id)arg2 perfComponents:(id)arg3 loggingContext:(id)arg4;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

